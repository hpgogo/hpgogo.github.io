<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SM.MS-批量下载器</title>
      <link href="post/tools/SM-MS-downloader/"/>
      <url>post/tools/SM-MS-downloader/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-04-18 11:02:45 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\tools\SM-MS-downloader.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E7%AE%80%E4%BB%8B">简介</a></li><li><a href="#%E5%8A%9F%E8%83%BD">功能</a></li><li><a href="#%E4%BD%BF%E7%94%A8">使用</a></li><li><a href="#%E9%97%AE%E9%A2%98">问题</a></li><li><a href="#%E8%B7%AF%E6%A0%87--%E6%8A%80%E6%9C%AF%E8%B0%83%E7%94%A8">路标 &amp; 技术调用</a></li></ul><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>SM.MS 没有提供批量下载回图片的功能,于是写了个小爬虫</p></blockquote><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><p>可以把对应页面的所有图片(一般是 30 张)获取并打包为 zip 文件下载下来</p><hr><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><ol><li><p>进入 SM.MS 图片管理页面: <a href="https://sm.ms/home/picture?page=1">点这里进入</a></p></li><li><p>按 <code>F12</code> 进入 Console 控制台,输入下面代码:</p></li></ol><ul><li><details>  <summary> -> 查看代码 <-</summary><hr><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @?: *********************************************************************</span></span><br><span class="line"><span class="comment"> * @Author: Weidows</span></span><br><span class="line"><span class="comment"> * @Date: 2021-02-16 01:24:50</span></span><br><span class="line"><span class="comment"> * @LastEditors: Weidows</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2021-04-18 09:52:12</span></span><br><span class="line"><span class="comment"> * @FilePath: \Weidows\Web\JavaScript\test\index.js</span></span><br><span class="line"><span class="comment"> * @Description:</span></span><br><span class="line"><span class="comment"> * @!: *********************************************************************</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加样式</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addElement</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> jsZip = <span class="built_in">document</span>.createElement(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">  jsZip.src = <span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jszip/3.5.0/jszip.min.js&quot;</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].appendChild(jsZip);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 下载图片按钮</span></span><br><span class="line">  <span class="keyword">let</span> downloadButton = <span class="built_in">document</span>.createElement(<span class="string">&quot;button&quot;</span>);</span><br><span class="line">  downloadButton.type = <span class="string">&quot;button&quot;</span>;</span><br><span class="line">  downloadButton.innerText = <span class="string">&quot;下载本页面图片&quot;</span>;</span><br><span class="line">  downloadButton.style.width = <span class="string">&quot;100%&quot;</span>;</span><br><span class="line">  downloadButton.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    downloadImg();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 全选CheckBox按钮</span></span><br><span class="line">  <span class="keyword">let</span> deleteButton = <span class="built_in">document</span>.createElement(<span class="string">&quot;button&quot;</span>);</span><br><span class="line">  deleteButton.type = <span class="string">&quot;button&quot;</span>;</span><br><span class="line">  deleteButton.innerHTML = <span class="string">&quot;全选CheckBox按钮&quot;</span>;</span><br><span class="line">  deleteButton.style.width = <span class="string">&quot;100%&quot;</span>;</span><br><span class="line">  deleteButton.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> checkBoxes = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;filedelete&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> checkbox <span class="keyword">of</span> checkBoxes) &#123;</span><br><span class="line">      checkbox.checked = !checkbox.checked;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 创建标签</span></span><br><span class="line">  <span class="keyword">let</span> downloadLi = <span class="built_in">document</span>.createElement(<span class="string">&quot;li&quot;</span>);</span><br><span class="line">  <span class="keyword">let</span> deleteLi = <span class="built_in">document</span>.createElement(<span class="string">&quot;li&quot;</span>);</span><br><span class="line">  downloadLi.id = <span class="string">&quot;downloader&quot;</span>;</span><br><span class="line">  deleteLi.id = <span class="string">&quot;deleter&quot;</span>;</span><br><span class="line">  downloadLi.appendChild(downloadButton);</span><br><span class="line">  deleteLi.appendChild(deleteButton);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 追加标签</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(<span class="string">&quot;downloader&quot;</span>) == <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="built_in">document</span></span><br><span class="line">      .getElementsByClassName(<span class="string">&quot;sidebar-menu tree&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">      .appendChild(downloadLi);</span><br><span class="line">    <span class="built_in">document</span></span><br><span class="line">      .getElementsByClassName(<span class="string">&quot;sidebar-menu tree&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">      .appendChild(deleteLi);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">this</span>.addElement();</span><br><span class="line"></span><br><span class="line"><span class="comment">// button点击事件</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">downloadImg</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> zip = <span class="keyword">new</span> JSZip();</span><br><span class="line">  <span class="keyword">var</span> aTagArray = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;fancybox&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> a <span class="keyword">of</span> aTagArray) &#123;</span><br><span class="line">    <span class="keyword">let</span> url = a.href.toString();</span><br><span class="line">    <span class="keyword">let</span> fileName = url.substring(url.lastIndexOf(<span class="string">&quot;/&quot;</span>) + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> image = <span class="keyword">new</span> Image();</span><br><span class="line">    image.setAttribute(<span class="string">&quot;crossOrigin&quot;</span>, <span class="string">&quot;anonymous&quot;</span>); <span class="comment">//需要放在图片赋值前，否则部分浏览器会报错</span></span><br><span class="line">    image.src = url;</span><br><span class="line">    <span class="keyword">let</span> base64 = <span class="keyword">await</span> getPromise(image);</span><br><span class="line">    zip.file(fileName, base64, &#123; <span class="attr">base64</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 生成zip文件并下载</span></span><br><span class="line">  zip</span><br><span class="line">    .generateAsync(&#123;</span><br><span class="line">      type: <span class="string">&quot;blob&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then(<span class="function"><span class="keyword">function</span> (<span class="params">content</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 创建隐藏的可下载链接</span></span><br><span class="line">      <span class="keyword">var</span> eleLink = <span class="built_in">document</span>.createElement(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">      <span class="comment">// 下载的文件名</span></span><br><span class="line">      eleLink.download = <span class="string">&quot;Compressed.zip&quot;</span>;</span><br><span class="line">      eleLink.style.display = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">      <span class="comment">// 下载内容转变成blob地址</span></span><br><span class="line">      eleLink.href = URL.createObjectURL(content);</span><br><span class="line">      <span class="comment">// 触发点击</span></span><br><span class="line">      <span class="built_in">document</span>.body.appendChild(eleLink);</span><br><span class="line">      eleLink.click();</span><br><span class="line">      <span class="comment">// 然后移除</span></span><br><span class="line">      <span class="built_in">document</span>.body.removeChild(eleLink);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取图片base64内容对象</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPromise</span>(<span class="params">image</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">    image.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 获取图片base64</span></span><br><span class="line">      <span class="keyword">let</span> canvas = <span class="built_in">document</span>.createElement(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">      canvas.width = image.width;</span><br><span class="line">      canvas.height = image.height;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">let</span> ctx = canvas.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">      ctx.drawImage(image, <span class="number">0</span>, <span class="number">0</span>, image.width, image.height);</span><br><span class="line">      <span class="keyword">let</span> ext = image.src</span><br><span class="line">        .substring(image.src.lastIndexOf(<span class="string">&quot;.&quot;</span>) + <span class="number">1</span>)</span><br><span class="line">        .toLowerCase();</span><br><span class="line">      <span class="keyword">let</span> base = canvas.toDataURL(<span class="string">&quot;image/&quot;</span> + ext);</span><br><span class="line">      <span class="keyword">let</span> subBase = base.substring(base.lastIndexOf(<span class="string">&quot;,&quot;</span>) + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 返回promise</span></span><br><span class="line">      resolve(subBase);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details></li></ul><ol start="3"><li><p>不出意外的话,左侧边栏会出现如下两个按钮:</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210418102023.png" alt="20210418102023" /></li><li><p>现在可以使用了</p></li></ol><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><ul><li><p>刷新页面或者翻页时按钮没了</p><blockquote><p>emmm,每次页面刷新/跳转都需要重新执行一次代码,在 console 中按 <code>方向键↑</code>和 Enter</p></blockquote></li><li><p>下载下来的压缩包是空的或者是无数据的空图片</p><blockquote><p>检查一下网络是否可以正常访问 <code>i,loli.net</code> 这个域名,有可能是因为网络原因导致图片未成功加载</p></blockquote></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="路标-amp-技术调用"><a href="#路标-amp-技术调用" class="headerlink" title="路标 &amp; 技术调用"></a>路标 &amp; 技术调用</h1><blockquote><p>博客文章地址</p></blockquote><blockquote><p><a href="https://gitee.com/Weidows/SMMS-downloader">Gitee 仓库地址</a></p></blockquote><blockquote><p><a href="https://github.com/Weidows/SM.MS-downloader">GitHub 仓库地址</a></p></blockquote><hr><blockquote><p><code>JSZip</code></p></blockquote><blockquote><p><a href="https://blog.csdn.net/weixin_38361925/article/details/95099838?utm_source=app&app_version=4.5.8"> JS 如何在 onload 中 return</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> SM.MS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🥼JavaWeb~(陆)</title>
      <link href="post/Java/Web/6/"/>
      <url>post/Java/Web/6/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-04-18 10:58:39 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\Web\6.md * @Description: * @!: *********************************************************************-->]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> JDBC </tag>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🥼JavaWeb~(伍)</title>
      <link href="post/Java/Web/5/"/>
      <url>post/Java/Web/5/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-04-14 22:27:35 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\Web\5.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E7%AC%94%E8%AE%B0%E4%BB%A3%E7%A0%81">笔记代码</a></li><li><a href="#mvc-%E6%9E%B6%E6%9E%84">MVC 架构</a></li><li><a href="#%E4%B8%AD%E9%97%B4%E5%B1%82%E5%B7%A5%E5%85%B7">中间层工具</a><ul><li><a href="#filter-%E8%BF%87%E6%BB%A4%E5%99%A8">Filter 过滤器</a><ul><li><a href="#%E4%BB%8B%E7%BB%8D">介绍</a></li><li><a href="#%E5%AF%BC%E5%85%A5%E4%BE%9D%E8%B5%96">导入依赖</a></li><li><a href="#filter-%E4%BE%8B%E5%AD%90">filter 例子</a></li></ul></li><li><a href="#%E7%9B%91%E5%90%AC%E5%99%A8">监听器</a></li><li><a href="#gui-%E7%BC%96%E7%A8%8B%E4%BE%8B%E5%AD%90">GUI 编程例子</a></li><li><a href="#%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81-demo">登录验证 demo</a></li></ul></li></ul><h1 id="笔记代码"><a href="#笔记代码" class="headerlink" title="笔记代码"></a><a href="https://github.com/Weidows/Weidows/tree/master/JavaWeb">笔记代码</a></h1><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="MVC-架构"><a href="#MVC-架构" class="headerlink" title="MVC 架构"></a>MVC 架构</h1><blockquote><p>Model 模型 view 视图 Controller 控制 三方分离的架构</p></blockquote><ul><li><p>之前的架构:</p><ul><li>Servlet 直接进行 CURD 操作,程序比较臃肿,不利于维护</li></ul><blockquote><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210409093031.png" alt="20210409093031" /></blockquote><hr></li><li><p>于是,为了解决这种不便利性,再加一层! (没有什么是加一层解决不了的)</p><blockquote><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210409093440.png" alt="20210409093440" /></blockquote><hr></li><li><p>各部分的职责:</p><ul><li><p>Model</p><ul><li><p>业务处理 ：业务逻辑（Service）</p></li><li><p>数据持久层：CRUD （Dao - 数据持久化对象）</p></li></ul></li><li><p>View</p><ul><li><p>展示数据</p></li><li><p>提供链接发起 Servlet 请求 （a，form，img…）</p></li></ul></li><li><p>Controller （Servlet）</p><ul><li><p>接收用户的请求 ：（req：请求参数、Session 信息….）</p></li><li><p>交给业务层处理对应的代码</p></li><li><p>控制视图的跳转 (转发/重定向)</p></li></ul></li></ul><hr></li><li><p>一条流程:</p><p>View 层点击登录 –&gt; 接收用户的登录请求 –&gt; 处理用户的请求（获取用户登录的参数，username，password）–&gt; 交给业务层处理登录业务（判断用户名密码是否正确：操作事务）–&gt; Dao 层查询用户名和密码是否正确 –&gt; 数据库</p><p>顺利查询到数据之后就是反过来再进行数据传递</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="中间层工具"><a href="#中间层工具" class="headerlink" title="中间层工具"></a>中间层工具</h1><ul><li><p>常见的有<code>过滤器 filter</code>,<code>监听器 listener</code>,<code>拦截器 Interceptor</code></p><blockquote><p><a href="https://www.zhihu.com/question/35225845">请教一下关于过滤器，拦截器，监听器具体应用上的区别？</a></p></blockquote></li><li><p>下面介绍 filter(重点) 和 listener</p></li></ul><hr><h2 id="Filter-过滤器"><a href="#Filter-过滤器" class="headerlink" title="Filter 过滤器"></a>Filter 过滤器</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><blockquote><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210409222335.png" alt="20210409222335" /></blockquote><p>比如处理<code>中文乱码,敏感词汇,登录验证</code>…</p><p>例子: 比如 Shiro 安全框架技术就是用 Filter 来实现的</p><hr><h3 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h3><ul><li><p>老四样:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- servlet依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- JSP依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- JSTL表达式依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Standard标签库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><hr></li><li><p>之后好像还会用到 SQL 驱动依赖,到时候在说.</p></li></ul><hr><h3 id="filter-例子"><a href="#filter-例子" class="headerlink" title="filter 例子"></a>filter 例子</h3><ul><li><p><code>src/main/java/filter/CharacterEncodingFilter.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CharacterEncodingFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">  <span class="comment">//初始化并等待过滤对象出现</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;CharacterEncodingFilter初始化&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    1. 过滤中的所有代码，在过滤特定请求的时候都会执行</span></span><br><span class="line"><span class="comment">    2. 必须要让过滤器继续执行 (因为filter可能不止一个,需要传递)</span></span><br><span class="line"><span class="comment">      chain.doFilter(request,response);</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    response.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;CharacterEncodingFilter执行前....&quot;</span>);</span><br><span class="line">    chain.doFilter(request, response); <span class="comment">//让我们的请求继续走，如果不写，程序到这里就被拦截停止！</span></span><br><span class="line">    System.out.println(<span class="string">&quot;CharacterEncodingFilter执行后....&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//销毁：web服务器关闭的时候，过滤器会销毁</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;CharacterEncodingFilter销毁&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li><li><p><code>src/main/java/servlet/Show.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Show</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 通过filter实现处理乱码</span></span><br><span class="line">    resp.getWriter().write(<span class="string">&quot;你好!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li><li><p><code>web.xml</code> 配置 servlet 和 filter</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>show<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.Show<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--还是乱码的页面--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>show<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/show<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--通过过滤器解决了乱码的页面--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>show<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet/show<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--filter的地址映射--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h2 id="监听器"><a href="#监听器" class="headerlink" title="监听器"></a>监听器</h2><blockquote><ul><li>对应不同业务需求,存在 N 中不同的监听器接口可供实现.</li><li>监听器经常在 GUI 编程中使用.</li></ul></blockquote><ul><li><p>例子: 设置 session 监听器监听有多少 session 连接</p></li><li><p><code>src/main/java/listener/OnlineCountListener.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> listener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSessionEvent;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSessionListener;</span><br><span class="line"></span><br><span class="line"><span class="comment">//统计网站在线人数 -&gt; 统计session</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OnlineCountListener</span> <span class="keyword">implements</span> <span class="title">HttpSessionListener</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> ServletContext ctx;</span><br><span class="line">  <span class="keyword">private</span> Integer onlineCount;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//一旦创建Session就会触发一次这个事件</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionCreated</span><span class="params">(HttpSessionEvent se)</span> </span>&#123;</span><br><span class="line">    initParam(se);</span><br><span class="line">    ctx.setAttribute(<span class="string">&quot;OnlineCount&quot;</span>, ++onlineCount);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    一旦销毁Session就会触发一次这个事件</span></span><br><span class="line"><span class="comment">    Session销毁：</span></span><br><span class="line"><span class="comment">      1. 手动销毁  getSession().invalidate();</span></span><br><span class="line"><span class="comment">      2. 自动销毁</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionDestroyed</span><span class="params">(HttpSessionEvent se)</span> </span>&#123;</span><br><span class="line">    initParam(se);</span><br><span class="line">    ctx.setAttribute(<span class="string">&quot;OnlineCount&quot;</span>, --onlineCount);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initParam</span><span class="params">(HttpSessionEvent se)</span> </span>&#123;</span><br><span class="line">    ctx = se.getSession().getServletContext();</span><br><span class="line">    onlineCount = (Integer) ctx.getAttribute(<span class="string">&quot;OnlineCount&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (onlineCount == <span class="keyword">null</span>) &#123;</span><br><span class="line">      ctx.setAttribute(<span class="string">&quot;OnlineCount&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li><li><p><code>index.jsp</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;在线人数测试&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;当前有 &lt;span</span><br><span class="line">    style=&quot;color: turquoise;&quot;&gt;&lt;%=this.getServletConfig().getServletContext().getAttribute(&quot;OnlineCount&quot;)%&gt;&lt;/span&gt; 人在线</span><br><span class="line">&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr></li><li><p><code>注册监听器</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注册监听器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>listener.OnlineCountListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="GUI-编程例子"><a href="#GUI-编程例子" class="headerlink" title="GUI 编程例子"></a>GUI 编程例子</h2><ul><li><p>GUI 编程常会用到监听器,这里简单介绍一下 : <code>src/main/java/listener/TestPanel.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> listener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPanel</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Frame frame = <span class="keyword">new</span> Frame(<span class="string">&quot;Hello World!&quot;</span>);  <span class="comment">//新建一个窗体</span></span><br><span class="line">    Panel panel = <span class="keyword">new</span> Panel(<span class="keyword">null</span>); <span class="comment">//面板</span></span><br><span class="line">    frame.setLayout(<span class="keyword">null</span>); <span class="comment">//设置窗体的布局</span></span><br><span class="line"></span><br><span class="line">    frame.setBounds(<span class="number">300</span>, <span class="number">300</span>, <span class="number">500</span>, <span class="number">500</span>);</span><br><span class="line">    frame.setBackground(<span class="keyword">new</span> Color(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>)); <span class="comment">//设置背景颜色</span></span><br><span class="line"></span><br><span class="line">    panel.setBounds(<span class="number">50</span>, <span class="number">50</span>, <span class="number">300</span>, <span class="number">300</span>);</span><br><span class="line">    panel.setBackground(<span class="keyword">new</span> Color(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>)); <span class="comment">//设置背景颜色</span></span><br><span class="line"></span><br><span class="line">    frame.add(panel);</span><br><span class="line"></span><br><span class="line">    frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//监听事件，监听关闭事件</span></span><br><span class="line">    frame.addWindowListener(<span class="keyword">new</span> WindowAdapter() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">        System.exit(<span class="number">0</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="登录验证-demo"><a href="#登录验证-demo" class="headerlink" title="登录验证 demo"></a>登录验证 demo</h2><ul><li><p>项目结构,如图:</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210411004248.png" alt="20210411004248" /><hr></li><li><p>JSP 页面</p><ul><li><p>主页(登录页面): <code>web/demo/index.jsp</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;主页&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;登录&lt;/h1&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/demo/login&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">  &lt;label&gt;</span><br><span class="line">    用户名:</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span>/&gt;</span><br><span class="line">  &lt;/label&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>登陆失败: <code>web/demo/failed.jsp</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;登录失败&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;登录失败进入的页面&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;a href=&quot;$&#123;pageContext.request.contextPath&#125;/demo/index.jsp&quot;&gt;返回主页&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>登录成功: <code>web/demo/sys/success.jsp</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;已登录&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;登录成功后进入的页面&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;hr&gt;</span><br><span class="line"></span><br><span class="line">&lt;a href=&quot;$&#123;pageContext.request.contextPath&#125;/demo/logout&quot;&gt;注销&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><ul><li><p>Java 后端</p><ul><li><p>login: <code>src/main/java/demo/servlet/Login.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> demo.utils.Constants;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Login</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    String username = req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">    HttpSession session = req.getSession();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (username.equals(<span class="string">&quot;admin&quot;</span>)) &#123;</span><br><span class="line">      session.setAttribute(Constants.USER_SESSION, session.getId());</span><br><span class="line">      resp.sendRedirect(<span class="string">&quot;/demo/sys/success.jsp&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      resp.sendRedirect(<span class="string">&quot;/demo/failed.jsp&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>注销: <code>src/main/java/demo/servlet/Logout.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> demo.utils.Constants;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Logout</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    doPost(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    HttpSession session = req.getSession();</span><br><span class="line">    Object attribute = session.getAttribute(Constants.USER_SESSION);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      频繁操作session连接会影响性能,通过attribute间接验证登录信息</span></span><br><span class="line"><span class="comment">      通过设置或移除 USER_SESSION 属性来验证是否登录</span></span><br><span class="line"><span class="comment">      存在一个Bug: 在注销状态通过浏览器的后退,可以返回登陆成功的页面(且不存在USER_SESSION)</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">if</span> (attribute != <span class="keyword">null</span>) &#123;</span><br><span class="line">      session.removeAttribute(Constants.USER_SESSION);</span><br><span class="line">      resp.sendRedirect(<span class="string">&quot;/demo/index.jsp&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>提取的常量工具类: <code>src/main/java/demo/utils/Constants.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo.utils;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 此类内定义一些其他各种地方需要经常调用的常量</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Constants</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> String USER_SESSION = <span class="string">&quot;USER_SESSION&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>过滤器类: <code>src/main/java/demo/filter/SysFilter.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> demo.utils.Constants;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    HttpServletRequest req = (HttpServletRequest) request;</span><br><span class="line">    HttpServletResponse resp = (HttpServletResponse) response;</span><br><span class="line"></span><br><span class="line">    Object attribute = req.getSession().getAttribute(Constants.USER_SESSION);</span><br><span class="line">    <span class="keyword">if</span> (attribute == <span class="keyword">null</span>) &#123;</span><br><span class="line">      resp.sendRedirect(<span class="string">&quot;/demo/failed.jsp&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    chain.doFilter(request, response);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><ul><li><p><code>Web.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>login<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>demo.servlet.Login<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>logout<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>demo.servlet.Logout<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>sysFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>demo.filter.SysFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>login<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/demo/login<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>logout<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/demo/logout<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>sysFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/demo/sys/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> JavaWeb </tag>
            
            <tag> Servlet </tag>
            
            <tag> Filter </tag>
            
            <tag> 架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🥼JavaWeb~(肆)</title>
      <link href="post/Java/Web/4/"/>
      <url>post/Java/Web/4/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-04-08 23:40:45 * @Description: * @!: *********************************************************************--><ul><li><a href="#%E7%AC%94%E8%AE%B0%E4%BB%A3%E7%A0%81">笔记代码</a></li><li><a href="#jsp">JSP</a><ul><li><a href="#%E5%AE%9A%E5%88%B6%E9%94%99%E8%AF%AF%E9%A1%B5%E9%9D%A2">定制错误页面</a></li><li><a href="#%E5%90%88%E5%B9%B6%E9%A1%B5%E9%9D%A2">合并页面</a></li><li><a href="#%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%E5%8F%8A%E4%BD%9C%E7%94%A8%E5%9F%9F">内置对象及作用域</a></li><li><a href="#jsp-%E6%A0%87%E7%AD%BE">JSP 标签</a></li><li><a href="#jstl-%E8%A1%A8%E8%BE%BE%E5%BC%8F">JSTL 表达式</a></li></ul></li><li><a href="#javabean">JavaBean</a></li></ul><h1 id="笔记代码"><a href="#笔记代码" class="headerlink" title="笔记代码"></a><a href="https://github.com/Weidows/Weidows/tree/master/JavaWeb">笔记代码</a></h1><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h1><h2 id="定制错误页面"><a href="#定制错误页面" class="headerlink" title="定制错误页面"></a>定制错误页面</h2><ul><li><p>方法一: 直接在 jsp 页面配置 errorPage</p><ul><li><p><code>errors/index.jsp</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%--此处定制错误页面指向--%&gt;</span><br><span class="line">&lt;%@ page errorPage=<span class="string">&quot;errors/500.jsp&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;错误页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">  <span class="keyword">int</span> a = <span class="number">1</span> / <span class="number">0</span>;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p><code>errors/500.jsp</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;500错误&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;500错误页面.&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><ul><li><p>方法二: 在 web.xml 中配置</p><ul><li><p>errors/404.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;404错误&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;404错误页面.&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p><code>web.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>404<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">location</span>&gt;</span>/errors/404.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>500<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">location</span>&gt;</span>/errors/500.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><h2 id="合并页面"><a href="#合并页面" class="headerlink" title="合并页面"></a>合并页面</h2><ul><li><p><code>common/header.jsp</code></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;h1&gt;这里是header&lt;/h1&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr></li><li><p><code>common/footer.jsp</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;h1&gt;这里是footer&lt;/h1&gt;</span><br></pre></td></tr></table></figure><hr></li><li><p><code>common/index.jsp</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;测试common&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">      这种会把include的页面内容合并进本页面,最后是展示一个页面</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;%@ include file=<span class="string">&quot;header.jsp&quot;</span> %&gt;</span><br><span class="line">    &lt;h1&gt;网页主体&lt;/h1&gt;</span><br><span class="line">    &lt;%@ include file=<span class="string">&quot;footer.jsp&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;HR /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--</span><br><span class="line">      jsp:include标签,本质是导入其他文件内容,最后是多个文件合为一个页面展示</span><br><span class="line">      (更灵活,建议用这个)</span><br><span class="line">        上面方法的因为是合并,所以很有可能出现变量重名,干扰的问题</span><br><span class="line">        这个方法不同文件之间互不干扰</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;jsp:include page=<span class="string">&quot;/common/header.jsp&quot;</span> /&gt;</span><br><span class="line">    &lt;h1&gt;网页主体&lt;/h1&gt;</span><br><span class="line">    &lt;jsp:include page=<span class="string">&quot;/common/footer.jsp&quot;</span> /&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="内置对象及作用域"><a href="#内置对象及作用域" class="headerlink" title="内置对象及作用域"></a>内置对象及作用域</h2><ul><li><p>内置对象</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PageContext 存东西</span><br><span class="line">Request 存东西</span><br><span class="line">Response</span><br><span class="line">Session 存东西</span><br><span class="line">Application 【SerlvetContext】 存东西</span><br><span class="line">config 【SerlvetConfig】</span><br><span class="line">out</span><br><span class="line">page ，不用了解</span><br><span class="line">exception</span><br></pre></td></tr></table></figure><hr></li><li><p>操作对象 <code>demo/1.jsp</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">* @?: *********************************************************************</span><br><span class="line">* <span class="meta">@Author</span>: Weidows</span><br><span class="line">* <span class="meta">@Date</span>: <span class="number">2021</span>-<span class="number">04</span>-<span class="number">07</span> <span class="number">16</span>:<span class="number">29</span>:<span class="number">42</span></span><br><span class="line">* <span class="meta">@LastEditors</span>: Weidows</span><br><span class="line">* <span class="meta">@LastEditTime</span>: <span class="number">2021</span>-<span class="number">04</span>-<span class="number">07</span> <span class="number">17</span>:<span class="number">29</span>:<span class="number">11</span></span><br><span class="line">* <span class="meta">@FilePath</span>: \Weidows\JavaWeb\JSP\src\main\webapp\<span class="number">1.</span>jsp</span><br><span class="line">* <span class="meta">@Description</span>:</span><br><span class="line">* @!: *********************************************************************</span><br><span class="line">* servlet <span class="number">2.3</span>默认不支持EL表达式,需要开启.</span><br><span class="line">--&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">&quot;false&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;index4&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;%--</span><br><span class="line">      PageContext 存东西</span><br><span class="line">      Request 存东西</span><br><span class="line">      Response</span><br><span class="line">      Session 存东西</span><br><span class="line">      Application 【SerlvetContext】 存东西</span><br><span class="line">      config 【SerlvetConfig】</span><br><span class="line">      out</span><br><span class="line">      page ，不用了解</span><br><span class="line">      exception</span><br><span class="line">    --%&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">      pageContext.setAttribute(<span class="string">&quot;name1&quot;</span>, <span class="string">&quot;秦疆1号&quot;</span>); <span class="comment">// 保存的数据只在一个页面中有效</span></span><br><span class="line">      request.setAttribute(<span class="string">&quot;name2&quot;</span>, <span class="string">&quot;秦疆2号&quot;</span>); <span class="comment">// 保存的数据只在一次请求中有效，请求转发会携带这个数据</span></span><br><span class="line">      session.setAttribute(<span class="string">&quot;name3&quot;</span>, <span class="string">&quot;秦疆3号&quot;</span>); <span class="comment">// 保存的数据只在一次会话中有效，从打开浏览器到关闭浏览器</span></span><br><span class="line">      application.setAttribute(<span class="string">&quot;name4&quot;</span>, <span class="string">&quot;秦疆4号&quot;</span>); <span class="comment">// 保存的数据只在服务器中有效，从打开服务器到关闭服务器</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 作用域从小到大</span></span><br><span class="line">      String name1 = (String) pageContext.findAttribute(<span class="string">&quot;name1&quot;</span>);</span><br><span class="line">      String name2 = (String) pageContext.findAttribute(<span class="string">&quot;name2&quot;</span>);</span><br><span class="line">      String name3 = (String) pageContext.findAttribute(<span class="string">&quot;name3&quot;</span>);</span><br><span class="line">      String name4 = (String) pageContext.findAttribute(<span class="string">&quot;name4&quot;</span>);</span><br><span class="line">      String name5 = (String) pageContext.findAttribute(<span class="string">&quot;name5&quot;</span>); <span class="comment">// 这个不存在</span></span><br><span class="line">    %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%--</span><br><span class="line">      EL表达式</span><br><span class="line">      $&#123;内容&#125; == &lt;%= 内容 %&gt;</span><br><span class="line">      用EL表达式的话,<span class="keyword">null</span>值不会显示,而使用JSP表达式会显示<span class="keyword">null</span>值</span><br><span class="line">    --%&gt;</span><br><span class="line">    &lt;h1&gt;取出的内容:&lt;/h1&gt;</span><br><span class="line">    &lt;h3&gt;$&#123;name1&#125;&lt;/h3&gt;</span><br><span class="line">    &lt;h3&gt;$&#123;name2&#125;&lt;/h3&gt;</span><br><span class="line">    &lt;h3&gt;$&#123;name3&#125;&lt;/h3&gt;</span><br><span class="line">    &lt;h3&gt;$&#123;name4&#125;&lt;/h3&gt;</span><br><span class="line">    &lt;HR&gt;</span><br><span class="line">    &lt;h3&gt;$&#123;name5&#125;&lt;/h3&gt;</span><br><span class="line">    &lt;h3&gt;&lt;%=name5%&gt;&lt;/h3&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210407173249.png" alt="20210407173249" /><hr></li><li><p>作用域</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210407175219.png" alt="20210407175219" /></li></ul><hr><h2 id="JSP-标签"><a href="#JSP-标签" class="headerlink" title="JSP 标签"></a>JSP 标签</h2><ul><li><p>例子: 使用 JSP 标签转发页面,读取参数并显示出来.</p></li><li><p><code>src/main/webapp/demo/JSP-label/forward.jsp</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;JSP-label&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%-- 转发request携带的参数(注意JSP标签内不能有注释,会报错<span class="number">500</span>) --%&gt;</span><br><span class="line">&lt;jsp:forward page=<span class="string">&quot;forward.jsp&quot;</span>&gt;</span><br><span class="line">  &lt;jsp:param name=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;kuangshen&quot;</span>/&gt;</span><br><span class="line">  &lt;jsp:param name=<span class="string">&quot;age&quot;</span> value=<span class="string">&quot;12&quot;</span>/&gt;</span><br><span class="line">&lt;/jsp:forward&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr></li><li><p><code>src/main/webapp/demo/JSP-label/forward.jsp</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">&quot;false&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;转发页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">  pageContext.setAttribute(<span class="string">&quot;name&quot;</span>, request.getParameter(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">  pageContext.setAttribute(<span class="string">&quot;age&quot;</span>, request.getParameter(<span class="string">&quot;age&quot;</span>));</span><br><span class="line"></span><br><span class="line">%&gt;</span><br><span class="line">&lt;h3&gt;姓名: $&#123;name&#125;&lt;/h3&gt;</span><br><span class="line">&lt;h3&gt;年龄: $&#123;age&#125;&lt;/h3&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="JSTL-表达式"><a href="#JSTL-表达式" class="headerlink" title="JSTL 表达式"></a>JSTL 表达式</h2><blockquote><p>JSTL 标签库的使用就是为了弥补 HTML 标签的不足,功能上与 Java 相似.</p></blockquote><ul><li><p>分类</p><ul><li><p>格式化标签</p></li><li><p>SQL 标签</p></li><li><p>XML 标签</p></li><li><p>JSTL 函数</p></li><li><p>核心标签 （掌握部分）</p><blockquote><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210407195349.png" alt="20210407195349" /></blockquote></li></ul></li><li><p>使用</p><ul><li><p>在 pom.xml 中导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- JSTL表达式依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Standard标签库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在 JSP 页面还需要引入对应要使用的 taglib,这里只用到 core:</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><ul><li><p>if</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt; &lt;%@ taglib</span><br><span class="line">prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt; &lt;%@ page</span><br><span class="line">isELIgnored=<span class="string">&quot;false&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;if测试&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;%--action是代码提交位置--%&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;if.jsp&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">      &lt;label&gt;</span><br><span class="line">        用户名:</span><br><span class="line">        &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> /&gt;</span><br><span class="line">      &lt;/label&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;hr /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%--</span><br><span class="line">      EL表达式获取表单中的数据 $&#123;param.参数名&#125;</span><br><span class="line">      判断如果提交的用户名是admin，则登录成功,并把isAdmin置为<span class="keyword">true</span></span><br><span class="line">      --%&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;param.username==&#x27;admin&#x27;&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;isAdmin&quot;</span>&gt;</span><br><span class="line">      &lt;c:out value=<span class="string">&quot;管理员欢迎您！&quot;</span> /&gt;</span><br><span class="line">    &lt;/c:if&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr></li><li><p>choose-when</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%-- Created by IntelliJ IDEA. User: <span class="number">29845</span> Date: <span class="number">2021</span>/<span class="number">4</span>/<span class="number">8</span> Time: <span class="number">20</span>:<span class="number">38</span> To change</span><br><span class="line"><span class="keyword">this</span> template use File | Settings | File Templates. --%&gt; &lt;%@ page</span><br><span class="line">contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt; &lt;%@ page</span><br><span class="line">isELIgnored=<span class="string">&quot;false&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;choose-when测试&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">      &lt;label&gt;</span><br><span class="line">        &lt;%--定义一个变量score--%&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;score&quot;</span> /&gt;</span><br><span class="line">      &lt;/label&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;提交&quot;</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;c:choose&gt;</span><br><span class="line">      &lt;c:when test=&quot;$&#123;param.score&gt;=90&#125;&quot;&gt; 你的成绩为优秀 &lt;/c:when&gt;</span><br><span class="line">      &lt;c:when test=&quot;$&#123;param.score&gt;=80&#125;&quot;&gt; 你的成绩为一般 &lt;/c:when&gt;</span><br><span class="line">      &lt;c:when test=&quot;$&#123;param.score&gt;=70&#125;&quot;&gt; 你的成绩为良好 &lt;/c:when&gt;</span><br><span class="line">      &lt;c:when test=&quot;$&#123;param.score&lt;=60&#125;&quot;&gt; 你的成绩为不及格 &lt;/c:when&gt;</span><br><span class="line">    &lt;/c:choose&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr></li><li><p>forEach</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.ArrayList&quot;</span> %&gt;&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">29845</span></span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">4</span>/<span class="number">8</span></span><br><span class="line">  Time: <span class="number">20</span>:<span class="number">59</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">&quot;false&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;forEach&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">  ArrayList&lt;String&gt; setPeople = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">  setPeople.add(<span class="number">0</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line">  setPeople.add(<span class="number">1</span>, <span class="string">&quot;李四&quot;</span>);</span><br><span class="line">  setPeople.add(<span class="number">2</span>, <span class="string">&quot;王五&quot;</span>);</span><br><span class="line">  setPeople.add(<span class="number">3</span>, <span class="string">&quot;赵六&quot;</span>);</span><br><span class="line">  setPeople.add(<span class="number">4</span>, <span class="string">&quot;田六&quot;</span>);</span><br><span class="line">  request.setAttribute(<span class="string">&quot;list&quot;</span>, setPeople);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--</span><br><span class="line">  <span class="keyword">var</span> , 每一次遍历出来的变量</span><br><span class="line">  items, 要遍历的对象</span><br><span class="line">  可选:</span><br><span class="line">    begin,   哪里开始</span><br><span class="line">    end,     到哪里</span><br><span class="line">    step,   步长</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;getPeople&quot;</span> items=<span class="string">&quot;$&#123;list&#125;&quot;</span> begin=<span class="string">&quot;1&quot;</span> end=<span class="string">&quot;3&quot;</span> step=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">  &lt;c:out value=<span class="string">&quot;$&#123;getPeople&#125;&quot;</span>/&gt;</span><br><span class="line">  &lt;br/&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="JavaBean"><a href="#JavaBean" class="headerlink" title="JavaBean"></a>JavaBean</h1><ul><li><p>JavaBean(实体类) 有特定的写法:</p><ul><li><p>一个无参构造</p></li><li><p>属性必须私有化</p></li><li><p>必须有对应的 get/set 方法；</p></li></ul><hr></li><li><p>一般用来和数据库的字段做映射 ORM(对象关系映射)</p><ul><li><p>表—&gt;类</p></li><li><p>字段–&gt;属性</p></li><li><p>行记录—-&gt;对象</p></li></ul></li></ul><hr><ul><li><p>样例 Java 类: <code>src/main/java/pojo/People.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">  <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">People</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">People</span><span class="params">(<span class="keyword">int</span> id, String name, <span class="keyword">int</span> age, String address)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.id = id;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">    <span class="keyword">this</span>.address = address;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.id = id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> age;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> address;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.address = address;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;People&#123;&quot;</span> +</span><br><span class="line">        <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">        <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">        <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">        <span class="string">&quot;, address=&#x27;&quot;</span> + address + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">        <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">new</span> People(<span class="number">1</span>, <span class="string">&quot;秦疆1号&quot;</span>, <span class="number">3</span>, <span class="string">&quot;西安&quot;</span>);</span><br><span class="line">    <span class="keyword">new</span> People(<span class="number">2</span>, <span class="string">&quot;秦疆2号&quot;</span>, <span class="number">3</span>, <span class="string">&quot;西安&quot;</span>);</span><br><span class="line">    <span class="keyword">new</span> People(<span class="number">3</span>, <span class="string">&quot;秦疆3号&quot;</span>, <span class="number">3</span>, <span class="string">&quot;西安&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li><li><p>样例 JSP: <code>src/main/webapp/javaBean.jsp</code></p><ul><li>这里只是简单介绍 JavaBean 及其使用,并不推荐用 JSP 标签来操作 JavaBean,还是推荐用 Java 代码操作实体类对象.</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- Created by IntelliJ IDEA. User: <span class="number">29845</span> Date: <span class="number">2021</span>/<span class="number">4</span>/<span class="number">8</span> Time: <span class="number">23</span>:<span class="number">32</span> To change</span><br><span class="line"><span class="keyword">this</span> template use File | Settings | File Templates. --%&gt; &lt;%@ page</span><br><span class="line">contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;javaBean测试&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;jsp:useBean id=<span class="string">&quot;people&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;pojo.People&quot;</span> scope=<span class="string">&quot;page&quot;</span> /&gt;</span><br><span class="line">    &lt;jsp:setProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;id&quot;</span> value=<span class="string">&quot;1&quot;</span> /&gt;</span><br><span class="line">    &lt;jsp:setProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;狂神说&quot;</span> /&gt;</span><br><span class="line">    &lt;jsp:setProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;age&quot;</span> value=<span class="string">&quot;3&quot;</span> /&gt;</span><br><span class="line">    &lt;jsp:setProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;address&quot;</span> value=<span class="string">&quot;西安&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    id:</span><br><span class="line">    &lt;jsp:getProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;id&quot;</span> /&gt;</span><br><span class="line">    name:</span><br><span class="line">    &lt;jsp:getProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;name&quot;</span> /&gt;</span><br><span class="line">    age:</span><br><span class="line">    &lt;jsp:getProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;age&quot;</span> /&gt;</span><br><span class="line">    address:</span><br><span class="line">    &lt;jsp:getProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;address&quot;</span> /&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> JavaWeb </tag>
            
            <tag> Servlet </tag>
            
            <tag> JSP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🥼JavaWeb~(叁)</title>
      <link href="post/Java/Web/3/"/>
      <url>post/Java/Web/3/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-04-07 11:03:00 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\Web\3.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E7%AC%94%E8%AE%B0%E4%BB%A3%E7%A0%81">笔记代码</a></li><li><a href="#servlet">Servlet</a><ul><li><a href="#httpservletrequest">HttpServletRequest</a></li></ul></li><li><a href="#cookiesession">Cookie、Session</a><ul><li><a href="#cookie">Cookie</a></li><li><a href="#session">Session</a></li></ul></li><li><a href="#jsp">JSP</a><ul><li><a href="#%E4%BB%8B%E7%BB%8D">介绍</a></li><li><a href="#%E4%BE%9D%E8%B5%96%E5%AF%BC%E5%85%A5">依赖导入</a></li><li><a href="#%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95">基本语法</a></li></ul></li></ul><h1 id="笔记代码"><a href="#笔记代码" class="headerlink" title="笔记代码"></a><a href="https://github.com/Weidows/Weidows/tree/master/JavaWeb">笔记代码</a></h1><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h1><h2 id="HttpServletRequest"><a href="#HttpServletRequest" class="headerlink" title="HttpServletRequest"></a>HttpServletRequest</h2><ul><li><p>例子: 在 index.jsp 提交表单信息给 <code>/login</code>,此 Servlet 后端读取发送来的表单信息并在页面输出显示.</p><ul><li><p>删掉并用 idea 重建 index.jsp,会补齐一些编码信息.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page</span><br><span class="line">    contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;登录页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;登录&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;div style=<span class="string">&quot;text-align: center&quot;</span>&gt;</span><br><span class="line">  &lt;form action=<span class="string">&quot;/login&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;label&gt;</span><br><span class="line">      用户名:</span><br><span class="line">      &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> placeholder=<span class="string">&quot;无&quot;</span>/&gt;&lt;br&gt;</span><br><span class="line">    &lt;/label&gt;</span><br><span class="line">    &lt;label&gt;</span><br><span class="line">      密码:</span><br><span class="line">      &lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span> placeholder=<span class="string">&quot;&quot;</span>/&gt;&lt;br&gt;</span><br><span class="line">    &lt;/label&gt;</span><br><span class="line"></span><br><span class="line">    爱好:</span><br><span class="line">    &lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;hobbys&quot; value=&quot;女孩&quot;/&gt;女孩&lt;/label&gt;</span><br><span class="line">    &lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;hobbys&quot; value=&quot;代码&quot;/&gt;代码&lt;/label&gt;</span><br><span class="line">    &lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;hobbys&quot; value=&quot;动漫&quot;/&gt;动漫&lt;/label&gt;</span><br><span class="line">    &lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;hobbys&quot; value=&quot;美食&quot;/&gt;美食&lt;/label&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr></li><li><p><code>src/main/java/servlet/Login.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Login</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">7958099474557186407L</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    req.setCharacterEncoding(<span class="string">&quot;utf8&quot;</span>);</span><br><span class="line">    resp.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">    resp.setCharacterEncoding(<span class="string">&quot;utf8&quot;</span>);</span><br><span class="line">    PrintWriter writer = resp.getWriter();</span><br><span class="line"></span><br><span class="line">    String username = req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">    String password = req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">    String[] hobbys = req.getParameterValues(<span class="string">&quot;hobbys&quot;</span>);</span><br><span class="line"></span><br><span class="line">    writer.println(<span class="string">&quot;username: &quot;</span> + username);</span><br><span class="line">    writer.println(<span class="string">&quot;password: &quot;</span> + password);</span><br><span class="line">    writer.println(<span class="string">&quot;爱好: &quot;</span> + Arrays.toString(hobbys));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    doGet(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li><li><p><code>web.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>login<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.Login<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>login<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/login<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul></li></ul><h1 id="Cookie、Session"><a href="#Cookie、Session" class="headerlink" title="Cookie、Session"></a>Cookie、Session</h1><ul><li><p>Cookie 是服务端在客户端上做的标记,用请求和响应进行传递,用来记录用户的访问信息 (客户端技术)</p></li><li><p>session 是在服务端上保存用户的访问信息 (服务端技术)</p></li></ul><h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><ul><li><p>例子: 访问 <code>/cookie</code> 时,会显示上一次访问此 URL 的时间 (这个时间通过服务端传给客户端 Cookie 来记录)</p><ul><li><p><code>src/main/java/servlet/HelloCookie.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloCookie</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    resp.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">    PrintWriter writer = resp.getWriter();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取客户端请求中携带的cookie</span></span><br><span class="line">    Cookie[] cookies = req.getCookies();</span><br><span class="line">    <span class="keyword">boolean</span> isFirst = <span class="keyword">true</span>; <span class="comment">// 标志是否是第一次访问</span></span><br><span class="line"></span><br><span class="line">    writer.println(<span class="string">&quot;你上一次访问时间是: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">      <span class="keyword">if</span> (cookie.getName().equals(<span class="string">&quot;LastLoginTime&quot;</span>)) &#123;</span><br><span class="line">        isFirst = <span class="keyword">false</span>;</span><br><span class="line">        writer.println(cookie.getValue());</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (isFirst) &#123;</span><br><span class="line">      writer.println(<span class="string">&quot;这次是第一次访问.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 响应携带cookie返回给客户端</span></span><br><span class="line">    Cookie lastLoginTime = <span class="keyword">new</span> Cookie(<span class="string">&quot;LastLoginTime&quot;</span>, System.currentTimeMillis() + <span class="string">&quot;&quot;</span>);<span class="comment">// 非字符串+&quot;&quot; = 字符串</span></span><br><span class="line">    resp.addCookie(lastLoginTime);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    doGet(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p><code>web.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>cookie<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.HelloCookie<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>cookie<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/cookie<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr></li><li><p>常用方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Cookie[] cookies = req.getCookies(); <span class="comment">//获得Cookie</span></span><br><span class="line">cookie.getName(); <span class="comment">//获得cookie中的key</span></span><br><span class="line">cookie.getValue(); <span class="comment">//获得cookie中的vlaue</span></span><br><span class="line"><span class="keyword">new</span> Cookie(<span class="string">&quot;lastLoginTime&quot;</span>, System.currentTimeMillis()+<span class="string">&quot;&quot;</span>); <span class="comment">//新建一个cookie</span></span><br><span class="line">cookie.setMaxAge(<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>); <span class="comment">//设置cookie的有效期</span></span><br><span class="line">resp.addCookie(cookie); <span class="comment">//响应给客户端一个cookie</span></span><br></pre></td></tr></table></figure></li><li><p>一些细节</p><ul><li><p>cookie 大小和数量</p><ul><li>不同浏览器支持的大小和数量不一样,大小都是 4K 左右,数量为每域名几十到无数个不等.</li></ul><blockquote><p><a href="https://blog.csdn.net/u011127019/article/details/89206016">cookie 大小限制</a></p></blockquote></li><li><p>设置存活期:</p><ul><li><p>不设置: 关闭浏览器自动失效</p></li><li><p>设置为 0,立即失效.</p></li></ul></li><li><p>遇到传输的中文乱码问题,可以用 URLEncoder 编码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">URLEncoder.encode(<span class="string">&quot;齐下无贰&quot;</span>,<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">URLDecoder.decode(cookie.getValue(),<span class="string">&quot;UTF-8&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><blockquote><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210330120835.png" alt="20210330120835" /></blockquote><ul><li><p>cookie 用来传输一些字符串验证信息,并存放在客户端中.</p></li><li><p>而 session 可以存放更宽泛的数据(对象,文件等等),其数据存放在服务端.</p><ul><li><p>服务端传给客户端一个名为 <code>JSESSIONID</code> 的 cookie 用来验证 session</p></li><li><p>一个 Seesion 对象独占一个浏览器,不同浏览器有不同的 session</p></li></ul></li></ul><hr><ul><li><p>例子: 开启服务器并访问第一个页面 <code>localhost:8080</code> 时,session 就被创建了,然后访问 <code>/setSession</code>设置 person 信息,再访问 <code>/getSession</code>会显示 person 信息.</p><ul><li><p><code>src/main/java/servlet/SetSession.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SetSession</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//解决乱码问题</span></span><br><span class="line">    req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    resp.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    resp.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//得到Session和writer</span></span><br><span class="line">    HttpSession session = req.getSession();</span><br><span class="line">    PrintWriter writer = resp.getWriter();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//给Session中存东西</span></span><br><span class="line">    session.setAttribute(<span class="string">&quot;person&quot;</span>, <span class="keyword">new</span> Person(<span class="string">&quot;齐下无贰&quot;</span>, <span class="number">100</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取Session的ID</span></span><br><span class="line">    String sessionId = session.getId();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断Session是不是新创建</span></span><br><span class="line">    <span class="keyword">if</span> (session.isNew()) &#123;</span><br><span class="line">      writer.println(<span class="string">&quot;session创建成功,ID: &quot;</span> + sessionId);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      writer.println(<span class="string">&quot;session已经在服务器中存在了,ID: &quot;</span> + sessionId);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    doGet(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Person&#123;&quot;</span> +</span><br><span class="line">        <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">        <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">        <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p><code>src/main/java/servlet/GetSession.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetSession</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">4606977948300644893L</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//解决乱码问题</span></span><br><span class="line">    req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    resp.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    resp.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//得到Session和writer</span></span><br><span class="line">    HttpSession session = req.getSession();</span><br><span class="line">    PrintWriter writer = resp.getWriter();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取属性并输出</span></span><br><span class="line">    Person person = (Person) session.getAttribute(<span class="string">&quot;person&quot;</span>);</span><br><span class="line">    writer.println(person);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 移除属性</span></span><br><span class="line">    session.removeAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//手动注销Session</span></span><br><span class="line">    session.invalidate();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    doGet(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p><code>web.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>setSession<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.SetSession<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>getSession<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.GetSession<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>setSession<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/setSession<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>getSession<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/getSession<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr></li><li><p>session 有效期问题</p><ul><li><p>默认失效时间是 30 分钟</p></li><li><p>是从 session 断开连接(浏览器关闭开始计算的),而不是从 session 连接开始计算</p></li><li><p>可以在 web.xml 中设置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>1<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/fanbingfu/article/details/78318855">关于 session 的失效时间和过期</a></p></blockquote></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ul><li><p>JSP (Java Server Pages),写法类似 HTML 的动态 Java 页面</p></li><li><p>最终 JSP 会被转换为一个 Java 类,实际上本质就是 <code>Servlet 的简化实现</code>.</p><ul><li><p><code>*.jsp -&gt; *.java -&gt; *.class</code></p><blockquote><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210403111103.png" alt="20210403111103" /></blockquote></li></ul><hr></li><li><p>jsp 转换为的 java 文件核心部分:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">_jspInit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//销毁</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">_jspDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//JSPService</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">_jspService</span><span class="params">(HttpServletRequest request,HttpServletResponse response)</span></span></span><br></pre></td></tr></table></figure><hr></li><li><p>JSPService 内初始化的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> javax.servlet.jsp.PageContext pageContext;  <span class="comment">//页面上下文</span></span><br><span class="line">javax.servlet.http.HttpSession session = <span class="keyword">null</span>;    <span class="comment">//session</span></span><br><span class="line"><span class="keyword">final</span> javax.servlet.ServletContext application;   <span class="comment">//Context-&gt;application</span></span><br><span class="line"><span class="keyword">final</span> javax.servlet.ServletConfig config;         <span class="comment">//config</span></span><br><span class="line">javax.servlet.jsp.JspWriter out = <span class="keyword">null</span>;           <span class="comment">//writer-&gt;out</span></span><br><span class="line"><span class="keyword">final</span> java.lang.Object page = <span class="keyword">this</span>;               <span class="comment">//当前页面-&gt;page</span></span><br><span class="line">HttpServletRequest request                        <span class="comment">//请求</span></span><br><span class="line">HttpServletResponse response                      <span class="comment">//响应</span></span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">pageContext = _jspxFactory.getPageContext(<span class="keyword">this</span>, request, response,<span class="keyword">null</span>, <span class="keyword">true</span>, <span class="number">8192</span>, <span class="keyword">true</span>);</span><br><span class="line">_jspx_page_context = pageContext;</span><br><span class="line">application = pageContext.getServletContext();</span><br><span class="line">config = pageContext.getServletConfig();</span><br><span class="line">session = pageContext.getSession();</span><br><span class="line">out = pageContext.getOut();</span><br><span class="line">_jspx_out = out;</span><br></pre></td></tr></table></figure><hr></li><li><p>JSP 中可以写 Java 代码,Java 代码会原封不动的正常执行</p><ul><li>HTML 代码在 JSP-&gt;Java 时会被转换成 <code>out.write(&quot;&lt;html&gt;\r\n&quot;);</code> 这种形式.</li></ul></li></ul><hr><h2 id="依赖导入"><a href="#依赖导入" class="headerlink" title="依赖导入"></a>依赖导入</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- servlet依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- JSP依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- JSTL表达式依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Standard标签库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Date&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;测试&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!-- 这是HTML的注释,会在客户端显示 --&gt;</span><br><span class="line">    &lt;%-- 这是JSP注释,不会在客户端显示 --%&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--</span><br><span class="line">      JSP表达式: 用来将程序输出到客户端</span><br><span class="line">      &lt;%= <span class="string">&quot;变量或者表达式&quot;</span>%&gt;</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;%= <span class="keyword">new</span> Date()%&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--</span><br><span class="line">      JSP脚本片段</span><br><span class="line">      &lt;% jsp脚本片段 %&gt;</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">      <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=<span class="number">100</span> ; i++) &#123; sum+=i; &#125;</span><br><span class="line">      out.println(<span class="string">&quot;&lt;h1&gt;Sum=&quot;</span>+sum+<span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line">    %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--</span><br><span class="line">      JSP声明</span><br><span class="line">      会被编译到JSP生成Java的类中！其他的，就会被生成到_jspService方法中！</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;%!</span><br><span class="line">      <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Loading Servlet!&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">int</span> globalVar = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">kuang</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;进入了方法Kuang！&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> JavaWeb </tag>
            
            <tag> Servlet </tag>
            
            <tag> Cookie </tag>
            
            <tag> Session </tag>
            
            <tag> JSP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🥼JavaWeb-&gt;Servlet~(贰)</title>
      <link href="post/Java/Web/2/"/>
      <url>post/Java/Web/2/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-04-07 11:02:32 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\Web\2.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E7%AC%94%E8%AE%B0%E4%BB%A3%E7%A0%81">笔记代码</a></li><li><a href="#servlet">Servlet</a><ul><li><a href="#%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91">请求转发</a></li><li><a href="#%E8%AF%BB%E5%8F%96-properties">读取 properties</a></li><li><a href="#httpservletresponse">HttpServletResponse</a><ul><li><a href="#%E5%93%8D%E5%BA%94">响应</a></li><li><a href="#%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6">下载文件</a></li><li><a href="#%E9%AA%8C%E8%AF%81%E7%A0%81">验证码</a></li><li><a href="#%E9%87%8D%E5%AE%9A%E5%90%91">重定向</a></li><li><a href="#%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4%E5%93%8D%E5%BA%94">表单提交+响应</a></li></ul></li></ul></li></ul><h1 id="笔记代码"><a href="#笔记代码" class="headerlink" title="笔记代码"></a><a href="https://github.com/Weidows/Weidows/tree/master/JavaWeb">笔记代码</a></h1><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h1><h2 id="请求转发"><a href="#请求转发" class="headerlink" title="请求转发"></a>请求转发</h2><ul><li><p>把 <code>/helloParameter</code> 转发到 <code>/HelloDispatcher</code></p><ul><li><p>转发后这两个地址都会显示<code>/helloParameter</code>的内容</p></li><li><p>另外一个手段: <code>重定向</code> ,重定向之后原地址就不可访问了</p></li></ul><hr></li><li><p><code>src/main/java/com/weidows/HelloDispatcher.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloDispatcher</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">    context.getRequestDispatcher(<span class="string">&quot;/helloParameter&quot;</span>).forward(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li><li><p><code>web.xml</code> (在上面<code>初始化参数</code>基础上添加的)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloDispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.weidows.HelloDispatcher<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloDispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/HelloDispatcher<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="读取-properties"><a href="#读取-properties" class="headerlink" title="读取 properties"></a>读取 properties</h2><blockquote><p>我们开发的项目需要进行打包处理,所以不能直接引用 <code>src/</code> 里面的资源,需要引用对应 <code>target/</code> 内部的.</p></blockquote><ul><li><p>这种资源文件一般放在 <code>src/main/resources</code> 里面,如果放在 <code>src/main/java</code>里面默认情况下会出现无法被 maven 导出的情况 (通常我们称 resources 和 java 为 classpath)</p><ul><li><p><code>src/main/java</code> 里面默认情况下只会编译并导出 <code>*.java</code>,不会管其他类型文件,可以修改 pom.xml 来使之生效:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr></li><li><p>生成文件路径:</p><ul><li><p>如果放在 resources 中,其生成路径为 <code>target/demo-2/WEB-INF/classes/db.properties</code></p></li><li><p>如果放在 java 中,生成路径为 <code>target/demo-2/WEB-INF/classes/com/weidows/db.properties</code></p></li></ul><hr></li><li><p>例子: 读取打包后的 properties 并显示.</p><ul><li><p><code>src/main/java/com/weidows/HelloProperties.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloProperties</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">437042901757770674L</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    Properties prop = <span class="keyword">new</span> Properties();</span><br><span class="line">    <span class="comment">// 生成后的路径: target/demo-2/WEB-INF/classes/db.properties</span></span><br><span class="line">    prop.load(<span class="keyword">this</span>.getServletContext().getResourceAsStream(<span class="string">&quot;/WEB-INF/classes/db.properties&quot;</span>));</span><br><span class="line"></span><br><span class="line">    String user = prop.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">    String pwd = prop.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">    resp.getWriter().print(<span class="string">&quot;username: &quot;</span> + user + <span class="string">&quot;\npassword: &quot;</span> + pwd);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p><code>src/main/resources/db.properties</code></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p><code>web.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloProperties<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.weidows.HelloProperties<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloProperties<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/helloProperties<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><h2 id="HttpServletResponse"><a href="#HttpServletResponse" class="headerlink" title="HttpServletResponse"></a>HttpServletResponse</h2><ul><li><p>Web 服务器接收到 http 请求信息,会创建 HttpServletRequest 和 HttpServletResponse 的两个对象</p><ul><li><p>前者负责客户端传来的参数</p></li><li><p>后者负责服务端响应的信息</p></li></ul><hr></li></ul><h3 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h3><ul><li><p>向浏览器发送数据的方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ServletOutputstream <span class="title">getOutputstream</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function">Printwriter <span class="title">getwriter</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span></span><br></pre></td></tr></table></figure></li><li><p>负责向浏览器发送响应头的方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setCharacterEncoding</span><span class="params">(String var1)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setContentLength</span><span class="params">(<span class="keyword">int</span> var1)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setContentLengthLong</span><span class="params">(<span class="keyword">long</span> var1)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setContentType</span><span class="params">(String var1)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setDateHeader</span><span class="params">(String varl,<span class="keyword">long</span> var2)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addDateHeader</span><span class="params">(String var1,<span class="keyword">long</span> var2)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setHeader</span><span class="params">(String var1,String var2)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addHeader</span><span class="params">(String var1,String var2)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setIntHeader</span><span class="params">(String var1,<span class="keyword">int</span> var2)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addIntHeader</span><span class="params">(String varl,<span class="keyword">int</span> var2)</span></span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h3><ul><li><p><code>src/main/java/servlet/FileServlet.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">2643615496012694161L</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 1. 要获取下载文件的路径</span></span><br><span class="line">    String realPath = <span class="keyword">this</span>.getServletContext().getRealPath(<span class="string">&quot;/WEB-INF/classes/test.txt&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;下载文件的路径：&quot;</span> + realPath);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 下载的文件名</span></span><br><span class="line">    String fileName = realPath.substring(realPath.lastIndexOf(<span class="string">&quot;\\&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;文件名: &quot;</span> + fileName);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 设置想办法让浏览器能够支持(Content-Disposition)下载我们需要的东西,中文文件名URLEncoder.encode编码，否则有可能乱码</span></span><br><span class="line">    resp.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + URLEncoder.encode(fileName, <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4. 获取下载文件的输入流</span></span><br><span class="line">    FileInputStream in = <span class="keyword">new</span> FileInputStream(realPath);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 5. 创建缓冲区</span></span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 6. 获取OutputStream对象</span></span><br><span class="line">    ServletOutputStream out = resp.getOutputStream();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 7. 将FileOutputStream流写入到buffer缓冲区,使用OutputStream将缓冲区中的数据输出到客户端！</span></span><br><span class="line">    <span class="keyword">while</span> ((len = in.read(buffer)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      out.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 8. 关闭连接</span></span><br><span class="line">    in.close();</span><br><span class="line">    out.close();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    doGet(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li><li><p><code>src/main/resources/test.txt</code></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">此处内容随意,比如写个 &quot;测试&quot;.</span><br></pre></td></tr></table></figure><hr></li><li><p><code>web.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>fileServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.FileServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>fileServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/fileServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h3><ul><li><p><code>src/main/java/servlet/ImageServlet.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImageServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">4590298452958016399L</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如何让浏览器3秒自动刷新一次;</span></span><br><span class="line">    resp.setHeader(<span class="string">&quot;refresh&quot;</span>, <span class="string">&quot;3&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在内存中创建一个图片</span></span><br><span class="line">    BufferedImage image = <span class="keyword">new</span> BufferedImage(<span class="number">80</span>, <span class="number">20</span>, BufferedImage.TYPE_INT_RGB);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//得到图片</span></span><br><span class="line">    Graphics2D graphics = (Graphics2D) image.getGraphics(); <span class="comment">//笔</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置图片的背景颜色</span></span><br><span class="line">    graphics.setColor(Color.white);</span><br><span class="line">    graphics.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//给图片写数据</span></span><br><span class="line">    graphics.setColor(Color.BLUE);</span><br><span class="line">    graphics.setFont(<span class="keyword">new</span> Font(<span class="keyword">null</span>, Font.BOLD, <span class="number">20</span>));</span><br><span class="line">    graphics.drawString(makeNum(), <span class="number">0</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//告诉浏览器，这个请求用图片的方式打开</span></span><br><span class="line">    resp.setContentType(<span class="string">&quot;image/jpeg&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//网站存在缓存，不让浏览器缓存</span></span><br><span class="line">    resp.setDateHeader(<span class="string">&quot;expires&quot;</span>, -<span class="number">1</span>);</span><br><span class="line">    resp.setHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">    resp.setHeader(<span class="string">&quot;Pragma&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把图片写给浏览器</span></span><br><span class="line">    ImageIO.write(image, <span class="string">&quot;jpg&quot;</span>, resp.getOutputStream());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//生成随机数</span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> String <span class="title">makeNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Random random = <span class="keyword">new</span> Random();</span><br><span class="line">    String num = random.nextInt(<span class="number">9999999</span>) + <span class="string">&quot;&quot;</span>;</span><br><span class="line">    StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span> - num.length(); i++) &#123;</span><br><span class="line">      sb.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    num = sb.toString() + num;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    doGet(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li><li><p><code>web.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>imageServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.ImageServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>imageServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/imageServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><ul><li><p>访问一个页面时跳转到另一个页面</p></li><li><p><code>src/main/java/servlet/RedirectServlet.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedirectServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    resp.sendRedirect(<span class="string">&quot;/&quot;</span>);<span class="comment">//重定向</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    doGet(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li><li><p><code>web.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>redirect<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.RedirectServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>redirect<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/redirect<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>转发&amp;重定向 の 区别</p><ul><li>转发 URL 不会变化,重定向会变化</li><li>访问转发的页面有一个请求,重定向会产生前后两个请求,第一个请求状态码是 302</li></ul></li></ul><hr><h3 id="表单提交-响应"><a href="#表单提交-响应" class="headerlink" title="表单提交+响应"></a>表单提交+响应</h3><blockquote><p><a href="https://blog.csdn.net/zhangliangzi/article/details/50131835">Form 表单数据传输方式之 Get 与 Post 区别</a></p></blockquote><ul><li><p>get 与 post 区别体现在客户端&lt;–&gt;服务端之间的信息传递</p></li><li><p>我们在 overwrite HttpServlet 类的 doGet &amp; doPost 方法时,是在处理通过 get/post 接收到请求或信息后的业务</p></li><li><p>get/post 就像一个屋子的两个门,进门的方式不一样,但是所进入的屋子是一样的 (让他俩互相调用,处理相同的业务)</p></li></ul><hr><ul><li><p>例子: 开启 Tomcat 后进入 index.jsp 页面,输入表单后提交,信息以 post 形式传递给 <code>/request</code> 后端,这个动态页面收到数据并在页面输出.</p><ul><li><p><code>index.jsp</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;/request&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">  &lt;label&gt;</span><br><span class="line">    用户名:</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span>/&gt;</span><br><span class="line">  &lt;/label&gt; &lt;br/&gt;</span><br><span class="line">  &lt;label&gt;</span><br><span class="line">    密码:</span><br><span class="line">    &lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span>/&gt;</span><br><span class="line">  &lt;/label&gt; &lt;br/&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;submit&quot;</span>/&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr></li><li><p><code>src/main/java/servlet/RequestServlet.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    doPost(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    String username = req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">    String password = req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">    PrintWriter writer = resp.getWriter();</span><br><span class="line">    writer.println(<span class="string">&quot;Success get username &amp; password.&quot;</span>);</span><br><span class="line">    writer.println(<span class="string">&quot;username: &quot;</span> + username);</span><br><span class="line">    writer.println(<span class="string">&quot;password: &quot;</span> + password);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li><li><p><code>web.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>request<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.RequestServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>request<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/request<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> JavaWeb </tag>
            
            <tag> Servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🌈基础知识</title>
      <link href="post/experience/basic/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>post/experience/basic/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-04-02 16:12:01 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\experience\basic\基础知识.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%8F%82%E7%85%A7">参照</a></li><li><a href="#%E7%A1%AC%E4%BB%B6">硬件</a><ul><li><a href="#%E5%8E%9F%E5%8F%8D%E8%A1%A5%E7%A0%81">原反补码</a></li><li><a href="#%E5%8D%95%E7%89%87%E6%9C%BA">单片机</a></li></ul></li><li><a href="#%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0">复变函数</a><ul><li><a href="#%E5%A4%8D%E6%95%B0">复数</a></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h1><blockquote><p>已录入 <a href="../../../others/LearnWay">😍Weidows の成长路线.</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h1><h2 id="原反补码"><a href="#原反补码" class="headerlink" title="原反补码"></a>原反补码</h2><ul><li><p>开局三张图,故事全靠编 🤣</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210325114342.png" alt="20210325114342" /><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210325114403.png" alt="20210325114403" /><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210325114419.png" alt="20210325114419" /></li><li><p>因为带有符号位的二进制数在计算机内计算时,原码和反码的运算结果都不是 100%正确,而且会有<code>+0</code>和<code>-0</code>两个零</p></li><li><p>补码 100%正确,于是我们采用补码,而且补码只有一个零</p><ul><li>补码就是为了解决这两个问题的,没了.</li></ul></li></ul><hr><h2 id="单片机"><a href="#单片机" class="headerlink" title="单片机"></a>单片机</h2><ul><li><p>标志寄存器内部的八位是分开使用的,作用不同,但功能都是作为标志位</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210331121042.png" alt="20210331121042" /><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210331122847.png" alt="20210331122847" /><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210331122957.png" alt="20210331122957" /></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="复变函数"><a href="#复变函数" class="headerlink" title="复变函数"></a>复变函数</h1><h2 id="复数"><a href="#复数" class="headerlink" title="复数"></a>复数</h2><ul><li><p>运算</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210402161142.png" alt="20210402161142" /></li><li><p>一般表示</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210325170144.png" alt="20210325170144" /></li><li><p>几何表示</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210325170538.png" alt="20210325170538" /></li><li><p>幂与根</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210325181554.png" alt="20210325181554" /></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p>]]></content>
      
      
      <categories>
          
          <category> experience </category>
          
          <category> basic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> 计算机系统 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 理论知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🐱‍🏍Maven+Tomcat开发webapp.</title>
      <link href="post/tools/Tomcat/"/>
      <url>post/tools/Tomcat/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-30 12:50:22 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\tools\Tomcat.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E9%85%8D%E7%BD%AE">配置</a></li><li><a href="#vscode">VScode</a></li><li><a href="#%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE">创建项目</a></li><li><a href="#idea">IDEA</a></li><li><a href="#%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E4%BB%A3%E7%90%86">虚拟主机/代理</a></li><li><a href="#%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98">乱码问题</a><ul><li><a href="#%E7%BB%88%E7%AB%AF%E4%B9%B1%E7%A0%81">终端乱码</a></li><li><a href="#%E7%BD%91%E9%A1%B5%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81">网页中文乱码</a></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><blockquote><p><a href="../../system/system_variable#maven">💥 系统开发环境配置</a></p></blockquote><blockquote><p>Maven 的核心思想：约定大于配置</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="VScode"><a href="#VScode" class="headerlink" title="VScode"></a>VScode</h1><ul><li><p>安装 <code>Tomcat for Java</code> 插件,配置好 Tomcat 本体路径和 <code>data</code> 路径</p></li><li><p>在侧边栏右键,常用命令都有</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210309155951.png" alt="20210309155951" /></li><li><p>测试</p><ul><li>新建 <code>index.html</code> 文件,放到 <code>tomcat/webapps/ROOT/</code>目录下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    测试</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>打开对应页面会有如下显示</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210309160418.png" alt="20210309160418" /></li><li><p><code>ROOT/</code>里面放的文件与浏览器 URL 相对应</p><ul><li><p>比如 <code>ROOT/000/2333.html</code> 浏览器就需要访问 <code>localhost:8080/000/2333.html</code></p></li><li><p>后缀名是<code>.html</code>的话 URL 后缀可以不写,比如上面写成 <code>localhost:8080/000/2333</code> 也可以.</p></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><blockquote><p>解释一下为什么要用 Maven,还需要创建项目: <code>Tomcat 只能运行 Maven 创建的类型为 webapp 的这种项目</code>,</p></blockquote><ul><li><p>推荐直接用 IDEA 创建 web 项目 (不用再导入 Servlet 包)</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210323233425.png" alt="20210323233425" /></li><li><p>然后创建 <code>webapp</code> 子模块,在<code>source/main/</code>下再新建两个目录(java 和 resources),结构如下</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210323112637.png" alt="20210323112637" /></li><li><p><code>JavaWeb\src\main\webapp\WEB-INF\web.xml</code> 是 web 项目核心应用</p></li></ul><blockquote><p><a href="https://github.com/Weidows/Weidows/tree/master/JavaWeb/demo-0">点这里参考项目结构</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h1><ul><li><p>IDEA 配置连接 Tomcat 需要在创建完 webapp 项目之后,否则连不上</p><ul><li>点’+’找到 Tomcat Server 并配置,如图</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210325110519.png" alt="20210325110519" /></li><li><p>现在 IDEA 已经认识 Tomcat 了,但还需要配置部署,否则 Tomcat 不知道运行哪里</p><ul><li>这些工件就是这个项目用 Maven 构建之后产生的</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210325110722.png" alt="20210325110722" /></li><li><p>现在配置好了之后,IDEA 会自动完成项目<code>构建-&gt;部署-&gt;打开网页</code> (VScode 的话也可以手动做到)</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="虚拟主机-代理"><a href="#虚拟主机-代理" class="headerlink" title="虚拟主机/代理"></a>虚拟主机/代理</h1><ul><li><p>通过修改 <code>Tomcat/conf/server.xml</code>和 hosts 文件实现虚拟主机.</p></li><li><p>修改 <code>name=&quot;localhost&quot;</code> 为目标主机名,比如改为<code>name=&quot;weidows.com&quot;</code>,下面注释处给标出了修改位置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Server</span> <span class="attr">port</span>=<span class="string">&quot;8005&quot;</span> <span class="attr">shutdown</span>=<span class="string">&quot;SHUTDOWN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.startup.VersionLoggerListener&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.core.AprLifecycleListener&quot;</span> <span class="attr">SSLEngine</span>=<span class="string">&quot;on&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.core.JreMemoryLeakPreventionListener&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.mbeans.GlobalResourcesLifecycleListener&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.core.ThreadLocalLeakPreventionListener&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">GlobalNamingResources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Resource</span> <span class="attr">name</span>=<span class="string">&quot;UserDatabase&quot;</span> <span class="attr">auth</span>=<span class="string">&quot;Container&quot;</span> <span class="attr">type</span>=<span class="string">&quot;org.apache.catalina.UserDatabase&quot;</span> <span class="attr">description</span>=<span class="string">&quot;User database that can be updated and saved&quot;</span> <span class="attr">factory</span>=<span class="string">&quot;org.apache.catalina.users.MemoryUserDatabaseFactory&quot;</span> <span class="attr">pathname</span>=<span class="string">&quot;conf/tomcat-users.xml&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">GlobalNamingResources</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Service</span> <span class="attr">name</span>=<span class="string">&quot;Catalina&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span> <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span> <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Engine</span> <span class="attr">name</span>=<span class="string">&quot;Catalina&quot;</span> <span class="attr">defaultHost</span>=<span class="string">&quot;localhost&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Realm</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.realm.LockOutRealm&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Realm</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.realm.UserDatabaseRealm&quot;</span> <span class="attr">resourceName</span>=<span class="string">&quot;UserDatabase&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Realm</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 修改这下面一行 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;localhost&quot;</span> <span class="attr">appBase</span>=<span class="string">&quot;webapps&quot;</span> <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoDeploy</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> <span class="attr">directory</span>=<span class="string">&quot;logs&quot;</span> <span class="attr">prefix</span>=<span class="string">&quot;localhost_access_log&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;.txt&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;%h %l %u %t <span class="symbol">&amp;quot;</span>%r<span class="symbol">&amp;quot;</span> %s %b&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Engine</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Service</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Server</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>然后修改 host,实现代理,如下图第二行即为需要添加的</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210309161039.png" alt="20210309161039" /><ul><li><p>含义就是: <code>在访问右边的主机时,将它指向左边的地址</code></p></li><li><p>比如浏览器访问 <code>localhost:8080</code> 时,实际上是访问的 <code>127.0.0.1:8080</code>,也就是本机地址</p></li></ul></li></ul><hr><ul><li><p>现在,打开 Tomcat 服务,他就会在本机 8080 端口监听,当在浏览器输入<code>weidows.com:8080</code>时,会被 host 指向到<code>127.0.0.1:8080</code>,Tomcat 服务器收到请求并回应</p><ul><li>结构如下图</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210309163300.png" alt="20210309163300" /></li></ul><hr><ul><li><p>可能会存在的疑问: 同样是指向到 <code>127.0.0.1</code>,为什么 localhost:8080 或者直接 127.0.0.1:8080 无法访问到 weidows.com:8080 页面?</p><ul><li>这就像递归式问路,首先问 host 知不知道 weidows.com,host 不直接知道,它让我们问 Tomcat,于是我们去 127.0.0.1:8080 问 Tomcat 知不知道 weidows.com;</li><li>诶,Tomcat 它可以直接知道 weidows.com 在哪里,于是浏览器就这么找到 weidows.com 页面了!</li><li>页面在 weidows.com 手里,你要是去找 localhost:8080 或者 127.0.0.1 的话,就是问错人了,肯定是 404</li></ul></li><li><p>最后附一张图,根据序号来看,条理比较清晰.</p><blockquote><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210322100531.png" alt="20210322100531" /></blockquote></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="乱码问题"><a href="#乱码问题" class="headerlink" title="乱码问题"></a>乱码问题</h1><h2 id="终端乱码"><a href="#终端乱码" class="headerlink" title="终端乱码"></a>终端乱码</h2><ul><li><p>在启动 Tomcat 时,终端内中文乱码:</p><ul><li><p>虽然这个对程序运行没有影响,但是有些影响观瞻,一般只会在 Window 遇到,修改如下:</p></li><li><p>找到 <code>Tomcat/conf/logging.properties</code> 里面的-&gt; <code>java.util.logging.ConsoleHandler.encoding</code>这一行 ,把 <code>UTF-8</code>换为<code>GBK</code></p></li></ul></li><li><p>另一种方法: 把终端显示设置为 UTF-8</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210330125008.png" alt="20210330125008" /></li></ul><hr><h2 id="网页中文乱码"><a href="#网页中文乱码" class="headerlink" title="网页中文乱码"></a>网页中文乱码</h2><ul><li><p>我们开发的页面,无论是动/静态,只要不指定编码格式,中文肯定乱码</p></li><li><p>需要做的就是在开发网页时,指定 <code>CharacterEncoding = UTF-8</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> VScode </tag>
            
            <tag> Maven </tag>
            
            <tag> Website </tag>
            
            <tag> IDEA </tag>
            
            <tag> 服务器 </tag>
            
            <tag> Tomcat </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🥼探索JavaWeb~(壹)</title>
      <link href="post/Java/Web/1/"/>
      <url>post/Java/Web/1/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-04-07 11:02:48 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\Web\1.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E7%AC%94%E8%AE%B0%E4%BB%A3%E7%A0%81">笔记代码</a></li><li><a href="#%E5%8F%82%E7%85%A7">参照</a></li><li><a href="#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5">基本概念</a><ul><li><a href="#%E5%8A%A8%E9%9D%99%E6%80%81-web">动/静态 Web</a></li><li><a href="#%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%AF%B9%E6%AF%94">后端技术对比</a></li><li><a href="#web-%E6%9C%8D%E5%8A%A1%E5%99%A8">Web 服务器</a></li></ul></li><li><a href="#http">HTTP</a><ul><li><a href="#%E8%AF%B7%E6%B1%82%E8%A1%8C">请求行</a></li><li><a href="#%E6%B6%88%E6%81%AF%E5%A4%B4">消息头</a></li><li><a href="#%E5%93%8D%E5%BA%94%E4%BD%93">响应体</a></li><li><a href="#%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%E7%A0%81">响应状态码</a></li></ul></li><li><a href="#maventomcat">Maven+Tomcat</a></li><li><a href="#servlet">Servlet</a><ul><li><a href="#helloservlet">HelloServlet</a></li><li><a href="#%E6%9E%B6%E6%9E%84%E5%8E%9F%E7%90%86">架构原理</a></li><li><a href="#mapping">Mapping</a></li><li><a href="#%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%82%E6%95%B0%E4%BA%86%E8%A7%A3">初始化参数(了解)</a></li></ul></li></ul><h1 id="笔记代码"><a href="#笔记代码" class="headerlink" title="笔记代码"></a><a href="https://github.com/Weidows/Weidows/tree/master/JavaWeb">笔记代码</a></h1><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h1><blockquote><p><a href="https://www.bilibili.com/video/BV12J411M7Sj">【狂神说 Java】JavaWeb 入门到实战</a></p></blockquote><blockquote><p><a href="https://blog.csdn.net/bell_love/article/details/105667638">B 站—【狂神说 Java】JavaWeb 入门到实战—笔记</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h2 id="动-静态-Web"><a href="#动-静态-Web" class="headerlink" title="动/静态 Web"></a>动/静态 Web</h2><ul><li><p>静态 web</p><ul><li><p>比如 hexo 就是静态博客生成器,其生成的 HTML 页面文档树不会发生改变</p></li><li><p>会因为 js 发生内容性的变化,但也是预设性的,并非动态变化.</p></li><li><p>只能实现动画,不能实现动态;无后端,也就是无法与数据库交互,数据不能持久化,无法与用户进行信息交互</p></li></ul><hr></li><li><p>动态 web</p><ul><li><p>比如 WordPress,客户端加载的内容会随着客户端交互而产生变化</p></li><li><p>技术栈: Java Servlet/JSP,ASP.NET,PHP,Python,etc.</p></li><li><p>资源出现问题时可以停机维护,可以与用户交互,操作数据库持久化信息.</p></li></ul><hr></li><li><p>JavaWeb 应用包含多个部分</p><ul><li><p>html,sss,is</p></li><li><p>jsp,servlet</p></li><li><p>Java 程序</p></li><li><p>jar 包</p></li><li><p>配置文件（Properties)</p></li></ul><blockquote><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210322100531.png" alt="20210322100531" /></blockquote></li></ul><hr><h2 id="后端技术对比"><a href="#后端技术对比" class="headerlink" title="后端技术对比"></a>后端技术对比</h2><ul><li><p>ASP</p><p>国内最早流行,业务代码错乱,维护成本高</p></li><li><p>php</p><p>开发速度很快，功能强大，跨平台，代码简单;但是无法承载大访问量的情况</p></li><li><p>JSP/Servlet</p><p>B/S 架构</p><p>语法像 ASP，ASP+Java-&gt;JSP</p><p>可以承载三高问题带来的影响</p></li></ul><hr><h2 id="Web-服务器"><a href="#Web-服务器" class="headerlink" title="Web 服务器"></a>Web 服务器</h2><ul><li><p>ASP.NET</p><p>Windows 系统自带</p></li><li><p>Tomcat</p><p>Apache 基金会的项目,在中小型并发量场景下普遍使用</p><blockquote><p>之前有个文章介绍了 <a href="https://weidows.gitee.io/post/others/IDEs/#Tomcat">😁IDE 选用指北.#Tomcat</a></p></blockquote><blockquote><p>另外,推荐一篇文章: <a href="https://zhuanlan.zhihu.com/p/54121733">Tomcat 外传</a></p></blockquote><ul><li><p>Tomcat 项目层级结构</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> webapps ：Tomcat服务器的web目录</span><br><span class="line"><span class="bullet">  -</span> ROOT 网站的根目录</span><br><span class="line"><span class="bullet">  -</span> kuangstudy ：网站的目录名</span><br><span class="line"><span class="bullet">    -</span> WEB-INF</span><br><span class="line"><span class="bullet">      -</span> classes : java程序</span><br><span class="line"><span class="bullet">      -</span> lib : web应用所依赖的jar包</span><br><span class="line"><span class="bullet">      -</span> web.xml : 网站配置文件</span><br><span class="line"><span class="bullet">    -</span> index.html : 默认的首页</span><br><span class="line"><span class="bullet">    -</span> static</span><br><span class="line"><span class="bullet">      -</span> css</span><br><span class="line"><span class="bullet">        -</span> style.css</span><br><span class="line"><span class="bullet">      -</span> js</span><br><span class="line"><span class="bullet">      -</span> img</span><br><span class="line"><span class="bullet">    -</span> .....</span><br></pre></td></tr></table></figure></li><li><p>Tomcat 可以 run 的项目只能是<code>webapp</code>,可以通过 Maven 创建这种项目</p><ul><li><p>tomcat 可以直接跑起来 <code>root/src/main/webapp</code>这个目录, 或者用 maven package 打包后产生的.war 包</p></li><li><p>其他形式的都无法用 tomcat 运行.</p></li></ul></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><p>(超文本传输协议）是一个简单的请求-响应协议，通常运行在 TCP 之上.</p><h2 id="请求行"><a href="#请求行" class="headerlink" title="请求行"></a>请求行</h2><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Request URL:https:<span class="comment">//www.baidu.com/   请求地址</span></span><br><span class="line">Request <span class="function"><span class="keyword">Method</span>:</span>GET    get方法/post方法</span><br><span class="line">Status Code:<span class="number">200</span> OK    状态码：<span class="number">200</span></span><br><span class="line">Remote Address:<span class="number">14.215</span>.<span class="number">177.39</span>:<span class="number">443</span></span><br></pre></td></tr></table></figure><ul><li><p>请求方式：Get,Post,HEAD,DELETE,PUT,TRACT.…</p><ul><li><p>get：请求能够携带的参数比较少，大小有限制，会在浏览器的 URL 地址栏显示数据内容，不安全，但高效</p></li><li><p>post: 请求能够携带的参数没有限制，大小没有限制，不会在浏览器的 URL 地址栏显示数据内容，安全，但不高效;只有表单才能使用.</p></li></ul></li></ul><hr><h2 id="消息头"><a href="#消息头" class="headerlink" title="消息头"></a>消息头</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Accept:</span>text<span class="regexp">/html  /</span>/ 告诉浏览器，它所支持的数据类型</span><br><span class="line">Accept-<span class="attr">Encoding:</span>gzip, deflate, br  <span class="comment">// 支持哪种编码格式  GBK   UTF-8   GB2312  ISO8859-1</span></span><br><span class="line">Accept-<span class="attr">Language:</span>zh-CN,zh;q=<span class="number">0.9</span>    <span class="comment">// 告诉浏览器，它的语言环境</span></span><br><span class="line">Cache-<span class="attr">Control:</span>max-age=<span class="number">0</span> <span class="comment">// 缓存控制</span></span><br><span class="line"><span class="attr">Connection:</span>keep-alive <span class="comment">// 请求完成是断开还是保持连接</span></span><br></pre></td></tr></table></figure><hr><h2 id="响应体"><a href="#响应体" class="headerlink" title="响应体"></a>响应体</h2><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">...</span></span><br><span class="line">跟请求相同</span><br><span class="line"><span class="meta">...</span></span><br><span class="line">Refresh：告诉客户端，多久刷新一次</span><br><span class="line">Location：让网页重新定位</span><br></pre></td></tr></table></figure><hr><h2 id="响应状态码"><a href="#响应状态码" class="headerlink" title="响应状态码"></a>响应状态码</h2><blockquote><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210323084728.png" alt="20210323084728" /></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Maven-Tomcat"><a href="#Maven-Tomcat" class="headerlink" title="Maven+Tomcat"></a>Maven+Tomcat</h1><blockquote><p><a href="../../../tools/Tomcat">🐱‍🏍Maven+Tomcat 开发 webapp.</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h1><ul><li><p>Servlet 是 sun 公司开发动态 web 的一门技术,开发 Servlet 程序有两个步骤:</p><ol><li><p>编写一个类，实现 Serlet 接口</p></li><li><p>把开发好 java 类部署到 web 服务器中。</p></li></ol></li><li><p>利用 maven 创建一个工程项目(project),在内部创建多个子模块(module)进行学习测试.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h2 id="HelloServlet"><a href="#HelloServlet" class="headerlink" title="HelloServlet"></a>HelloServlet</h2><ul><li><p>现在,在 JavaWeb 项目中已经创建好子模块<code>demo-1</code>,我们在这个 demo-1 内练习 HelloServlet,项目结构如下:</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210324163957.png" alt="20210324163957" /></li><li><p>新建 <code>JavaWeb/demo-1/src/main/java/com/weidows/HelloServlet.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weidows;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">6617893791621340358L</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//get或者post只是请求实现的不同的方式，可以相互调用，业务逻辑都一样</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//ServletOutputStream outputStream = resp.getOutputStream();</span></span><br><span class="line">    PrintWriter writer = resp.getWriter(); <span class="comment">//响应流</span></span><br><span class="line">    writer.print(<span class="string">&quot;Hello,Servlet&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    doGet(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改 <code>JavaWeb/demo-1/src/main/webapp/WEB-INF/web.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--注册Servlet,使这个类可以产生动态页面--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.weidows.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--Servlet的请求路径映射,使路径映射对应类--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/weidows<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>连接 Tomcat</p><ul><li>我们用 tomcat 跑起来这个子模块 (注意跑的是子模块不是整个项目)</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210324164515.png" alt="20210324164515" /></li><li><p>跑起来后</p><ul><li><p>我们可以通过<code>http://localhost:8080/demo_1_war/</code> 访问到 <code>index.jsp</code> 这个静态页面</p></li><li><p>也可以通过<code>http://localhost:8080/demo_1_war/weidows</code> 访问到我们用 Servlet 映射的动态页面</p><ul><li>注意末尾不能带’/‘, <code>http://localhost:8080/demo_1_war/weidows/</code> == <code>http://localhost:8080/demo_1_war/weidows/index.html</code> 因为并没有这个静态页面,会报 404</li></ul></li></ul></li><li><p>注意,无论是动态页面还是静态页面,都必须<code>指定编码</code>,否则中文会乱码.</p></li></ul><hr><h2 id="架构原理"><a href="#架构原理" class="headerlink" title="架构原理"></a>架构原理</h2><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210325090037.png" alt="20210325090037" /><ul><li><p>Tomcat 做的就是接收请求并处理,然后返回响应</p></li><li><p>我们需要做的是实现 Servlet 接口,处理请求和响应信息</p></li></ul><hr><h2 id="Mapping"><a href="#Mapping" class="headerlink" title="Mapping"></a>Mapping</h2><ul><li><p>一个 Servlet 可以映射一个或多个或正则匹配 url 路径</p><ul><li><code>映射固定地址的优先级最高</code></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello2<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello3<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><servlet-mapping>    <servlet-name>hello</servlet-name>    <url-pattern>/hello/*</url-pattern></servlet-mapping><!--可以自定义后缀实现请求映射    注意,*前面不能加项目映射的路径    hello/xxx.weidows    --><servlet-mapping>    <servlet-name>hello</servlet-name>    <url-pattern>*.weidows</url-pattern></servlet-mapping><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">- 例子: 把 <span class="number">404</span> 页面换为我们自定义的</span><br><span class="line"></span><br><span class="line">  - src/main/java/com/weidows/<span class="type">ErrorServlet</span>.java</span><br><span class="line"></span><br><span class="line">    ```<span class="type">Java</span></span><br><span class="line">    <span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line">    <span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line">    <span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line">    <span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line">    <span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line">    public <span class="class"><span class="keyword">class</span> <span class="title">ErrorServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> req, <span class="type">HttpServletResponse</span> resp) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf8&quot;</span>);</span><br><span class="line">        resp.getWriter().print(<span class="string">&quot;&lt;h1&gt;404&lt;/h1&gt;&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> req, <span class="type">HttpServletResponse</span> resp) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 注册并映射 404 页面</span><br><span class="line"></span><br><span class="line">  - (注意上下顺序: ServletA MappingA ServletB MappingB 这样写会报错)</span><br><span class="line"></span><br><span class="line">  ```xml</span><br><span class="line">  <span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">      <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">      <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--注册Servlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.weidows.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ErrorServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.weidows.ErrorServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br></pre></td></tr></table></figure>    <!--Servlet的请求路径-->    <servlet-mapping>      <servlet-name>helloServlet</servlet-name>      <url-pattern>/weidows</url-pattern>    </servlet-mapping>    <servlet-mapping>      <servlet-name>ErrorServlet</servlet-name>      <url-pattern>/*</url-pattern>    </servlet-mapping>  </web-app>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## ServletContext</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="string">HttpServlet</span> <span class="string">对象中常用方法:</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="string">this.getInitParameter()</span> <span class="string">//</span> <span class="string">初始化参数</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="string">this.getServletConfig()</span> <span class="string">//</span> <span class="string">Servlet</span> <span class="string">配置</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="string">this.getServletContext()</span> <span class="string">//</span> <span class="string">Servlet</span> <span class="string">上下文,最常用,这里只介绍这个</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="string">Web</span> <span class="string">容器启动时,会创建对应的</span> <span class="string">ServletContext</span> <span class="string">对象,代表当前</span> <span class="string">web</span> <span class="string">应用,</span> <span class="string">`不同</span> <span class="string">Servlet</span> <span class="string">之间共享这个</span> <span class="string">ServletContext</span> <span class="string">对象`</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="string">例子:</span> <span class="string">当访问</span> <span class="string">`/helloServlet`</span> <span class="string">时在</span> <span class="string">servletContext</span> <span class="string">对象中设置</span> <span class="string">username</span> <span class="string">属性,然后访问</span> <span class="string">`/getServlet`</span> <span class="string">可以查看设置的</span> <span class="string">username</span> <span class="string">属性值.</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="string">`src/main/java/com/weidows/HelloServlet.java`</span></span><br><span class="line"></span><br><span class="line">    <span class="string">```Java</span></span><br><span class="line">    <span class="string">import</span> <span class="string">java.io.IOException;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">import</span> <span class="string">javax.servlet.ServletContext;</span></span><br><span class="line">    <span class="string">import</span> <span class="string">javax.servlet.ServletException;</span></span><br><span class="line">    <span class="string">import</span> <span class="string">javax.servlet.http.HttpServlet;</span></span><br><span class="line">    <span class="string">import</span> <span class="string">javax.servlet.http.HttpServletRequest;</span></span><br><span class="line">    <span class="string">import</span> <span class="string">javax.servlet.http.HttpServletResponse;</span></span><br></pre></td></tr></table></figure>  public class HelloServlet extends HttpServlet {  @Override  protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {  ServletContext context = this.getServletContext();  String username = "齐下无贰"; //数据  context.setAttribute("username", username); //将一个数据保存在了 ServletContext 中，名字为：username 。值 username  System.out.println("username 属性已设置.");  }  }  <figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**<span class="strong">*</span></span><br><span class="line"><span class="strong"></span></span><br></pre></td></tr></table></figure><ul><li><p><code>src/main/java/com/weidows/GetServlet.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    doGet(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    String username = (String) <span class="keyword">this</span>.getServletContext().getAttribute(<span class="string">&quot;username&quot;</span>);</span><br><span class="line"></span><br><span class="line">    resp.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">    resp.setCharacterEncoding(<span class="string">&quot;utf8&quot;</span>);</span><br><span class="line">    resp.getWriter().print(<span class="string">&quot;名字: &quot;</span> + username);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><ul><li><p><code>web.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.weidows.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>getServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.weidows.GetServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/helloServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>getServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/getServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="初始化参数-了解"><a href="#初始化参数-了解" class="headerlink" title="初始化参数(了解)"></a>初始化参数(了解)</h2><ul><li><p>初始化参数在 web.xml 中设置,用 getInitParameter()获取</p></li><li><p><code>web.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--配置一些web应用初始化参数--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>url<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>jdbc:mysql://localhost:3306/mybatis<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloParameter<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.weidows.HelloParameter<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloParameter<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/helloParameter<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><hr></li><li><p><code>src/main/java/com/weidows/HelloParameter.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloParameter</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">    String url = context.getInitParameter(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">    resp.getWriter().print(url);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🍔语段优选~(叁)</title>
      <link href="post/life/nicer/3/"/>
      <url>post/life/nicer/3/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:30:52 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\life\nicer\3.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E8%A1%A5%E7%95%AA%E5%96%BD">补番喽</a></li><li><a href="#%E4%B8%8D%E7%9F%A5%E8%B0%81%E8%AF%B4%E7%9A%84">不知谁说的~</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="补番喽"><a href="#补番喽" class="headerlink" title="补番喽"></a>补番喽</h1><p>补番喽~</p><ol><li>新闻联播（强推）</li><li>焦点访谈（个人最喜欢）</li><li>海峡两岸（男主贼帅）</li><li>农经财政（贼好看）</li><li>中国地理（剧情紧凑）</li><li>开学第一课（女主好看）</li><li>感动中国（很感动）</li><li>今日说法（这个必须看）</li><li>法制在线（剧情张弛有度）</li><li>朝闻天下（情节跌宕起伏）</li></ol><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="不知谁说的"><a href="#不知谁说的" class="headerlink" title="不知谁说的~"></a>不知谁说的~</h1><p>当你只有别人的 1%时，他会嘲笑你。<br>当你不到别人的 45%时，他会鼓励你。<br>当你达到别人的 45%时，他便开始戒备你。<br>当你超过别人的 45%而又不足 80%时，他们到处诋毁你。<br>当你达到别人的 80%而又不 100%时，他会打击你。<br>当你达到别人的 100%时，他会忌惮你。<br>当你超过别人的 100%而又没到 110%时，他只会在角落默默诅咒你。<br>当你超过别人的 110%时，他会开始羡慕你。<br>当你超过别人的 120%时，他会开始赞美你。<br>当你超过 140%时，他会效仿你。<br>当你超过 150%时，他会信仰你。<br>当你超过 200%时，你就是他的一切。​</p>]]></content>
      
      
      <categories>
          
          <category> recommend </category>
          
          <category> nicer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哲学 </tag>
            
            <tag> 生活 </tag>
            
            <tag> 搞笑 </tag>
            
            <tag> 高能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🚀进修MySQL~(伍)</title>
      <link href="post/Java/MySQL/5/"/>
      <url>post/Java/MySQL/5/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-21 16:26:41 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\MySQL\5.md * @Description: * @!: *********************************************************************--><ul><li><a href="#preparedstatement">PreparedStatement</a><ul><li><a href="#sql-%E6%B3%A8%E5%85%A5%E9%97%AE%E9%A2%98">SQL 注入问题</a></li><li><a href="#%E5%8C%BA%E5%88%AB%E7%94%A8%E6%B3%95">区别用法</a></li></ul></li><li><a href="#ideasql">IDEA+SQL</a></li><li><a href="#jdbc%E4%BA%8B%E5%8A%A1">JDBC+事务</a></li><li><a href="#%E8%BF%9E%E6%8E%A5%E6%B1%A0">连接池</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="PreparedStatement"><a href="#PreparedStatement" class="headerlink" title="PreparedStatement"></a>PreparedStatement</h1><h2 id="SQL-注入问题"><a href="#SQL-注入问题" class="headerlink" title="SQL 注入问题"></a>SQL 注入问题</h2><blockquote><p><a href="https://blog.csdn.net/rongxiang111/article/details/78228681">SQL 注入问题及解决</a></p></blockquote><ul><li><p>通过修改 SQL 指令字符串,使 SQL 服务器执行不正规或者恶意的 SQL 命令</p></li><li><p>比如客户端可以通过修改 SQL 字符串,可以使服务器传回原本不能显示的数据,或者修改非指定的数据.</p></li></ul><hr><h2 id="区别用法"><a href="#区别用法" class="headerlink" title="区别用法"></a>区别用法</h2><blockquote><p>PreparedStatement 可以防止 SQL 注入,而且效率更高.</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.Date;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> twenty_one.jdbc.demo2.utils.JDBCUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPreparedStatement</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Connection connection = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> PreparedStatement preparedStatement = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    <span class="comment">// 连接</span></span><br><span class="line">    connection = JDBCUtils.getConnection();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ! 插入</span></span><br><span class="line">    <span class="comment">// 问号&#x27;?&#x27;为占位符</span></span><br><span class="line">    String insert = <span class="string">&quot;INSERT INTO jdbcstudy.users(NAME, PASSWORD, email, birthday)  VALUES (?,?,?,?);&quot;</span>;</span><br><span class="line">    <span class="comment">//预编译sql</span></span><br><span class="line">    preparedStatement = connection.prepareStatement(insert);</span><br><span class="line">    <span class="comment">//手动赋值</span></span><br><span class="line">    preparedStatement.setString(<span class="number">1</span>, <span class="string">&quot;weidows&quot;</span>);</span><br><span class="line">    preparedStatement.setInt(<span class="number">2</span>, <span class="number">123456</span>);</span><br><span class="line">    preparedStatement.setString(<span class="number">3</span>, <span class="string">&quot;utsuko27@qq.com&quot;</span>);</span><br><span class="line">    preparedStatement.setDate(<span class="number">4</span>, <span class="keyword">new</span> Date(<span class="keyword">new</span> java.util.Date().getTime()));</span><br><span class="line">    <span class="comment">// 执行</span></span><br><span class="line">    <span class="keyword">if</span> (preparedStatement.executeUpdate() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;成功.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ! 查询</span></span><br><span class="line">    String query = <span class="string">&quot;SELECT * From jdbcstudy.users where name = ?;&quot;</span>;</span><br><span class="line">    preparedStatement = connection.prepareStatement(query);</span><br><span class="line">    preparedStatement.setString(<span class="number">1</span>, <span class="string">&quot;weidows&quot;</span>);</span><br><span class="line">    resultSet = preparedStatement.executeQuery();</span><br><span class="line">    <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;id = &quot;</span> + resultSet.getObject(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;name = &quot;</span> + resultSet.getObject(<span class="string">&quot;NAME&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;password = &quot;</span> + resultSet.getObject(<span class="string">&quot;PASSWORD&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;email = &quot;</span> + resultSet.getObject(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;birthday = &quot;</span> + resultSet.getObject(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;===============================================================&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 断连</span></span><br><span class="line">    JDBCUtils.releaseConnection(connection, preparedStatement, resultSet);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="IDEA-SQL"><a href="#IDEA-SQL" class="headerlink" title="IDEA+SQL"></a>IDEA+SQL</h1><ul><li><p>图形化的,摸索摸索就差不多会了.</p></li><li><p>在学这个 SQL 课程时,个人开始用的是 sqlyog,后来卸载了,直接用的 idea 内嵌的.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="JDBC-事务"><a href="#JDBC-事务" class="headerlink" title="JDBC+事务"></a>JDBC+事务</h1><ul><li><p>创建表+插入数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">TABLE</span> jdbcstudy.account</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">id</span>    <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">  <span class="keyword">name</span>  <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">  money <span class="built_in">DECIMAL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> jdbcstudy.account(<span class="keyword">name</span>, money)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="number">1000</span>),</span><br><span class="line">      (<span class="string">&#x27;B&#x27;</span>, <span class="number">1000</span>),</span><br><span class="line">      (<span class="string">&#x27;C&#x27;</span>, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><hr></li><li><p>事务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> twenty_one.jdbc.demo2.utils.JDBCUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestTransaction</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Connection connection = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> PreparedStatement preparedStatement = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      connection = JDBCUtils.getConnection();</span><br><span class="line">      <span class="comment">//关闭数据库的自动提交功能,同时开启事务</span></span><br><span class="line">      connection.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">      String sql = <span class="string">&quot;update account set money = money-500 where id = 1&quot;</span>;</span><br><span class="line">      preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">      preparedStatement.executeUpdate();</span><br><span class="line"></span><br><span class="line">      String sql2 = <span class="string">&quot;update account set money = money-500 where id = 2&quot;</span>;</span><br><span class="line">      preparedStatement = connection.prepareStatement(sql2);</span><br><span class="line">      preparedStatement.executeUpdate();</span><br><span class="line"></span><br><span class="line">      <span class="comment">//业务完毕，提交事务</span></span><br><span class="line">      connection.commit();</span><br><span class="line">      System.out.println(<span class="string">&quot;事务操作成功&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      <span class="comment">//如果失败，默认会回滚,也可以在这里自定义</span></span><br><span class="line">      connection.rollback();</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      JDBCUtils.releaseConnection(connection, preparedStatement, resultSet);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="连接池"><a href="#连接池" class="headerlink" title="连接池"></a>连接池</h1><ul><li><p>概念上与线程池相同,因为频繁创建和断开连接耗费大量资源,利用池化技术来<code>减轻资源损耗.</code></p></li><li><p>数据库连接池接口 <code>DataSource</code> ,开源数据源实现类:</p><ul><li><p>DBCP</p></li><li><p>C3P0</p></li><li><p>Druid: 阿里巴巴</p></li></ul><blockquote><p>无论使用什么数据源，本质是不变的，DateSource 接口不会变，方法就不会变</p></blockquote></li></ul><hr><ul><li><p>用法区别就是 utils 类中,加载驱动,连接 connection 和读取 properties 配置文件不需要我们自己写了</p></li><li><p>db.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># DBCP的设置文件,属性名不能错</span></span><br><span class="line"><span class="attr">driverClassName</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/jdbcStudy?useUnicode = true &amp; characterEncoding = utf8 &amp; useSSL = true</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure></li><li><p>utils.DbcpUtils</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbcp.BasicDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DbcpUtils</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    <span class="comment">// 加载连接信息</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      properties.load(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;Java/src/main/java/twenty_one/jdbc/demo3/db.properties&quot;</span>));</span><br><span class="line">      dataSource = BasicDataSourceFactory.createDataSource(properties);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取连接</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 释放资源</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">releaseConnection</span><span class="params">(Connection connection, Statement statement, ResultSet resultSet)</span></span></span><br><span class="line"><span class="function">      <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">      resultSet.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">      statement.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">      connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>TestDataSource</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.Date;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> twenty_one.jdbc.demo3.utils.DbcpUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDataSource</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Connection connection = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> PreparedStatement preparedStatement = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    <span class="comment">// 连接</span></span><br><span class="line">    connection = DbcpUtils.getConnection();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ! 插入</span></span><br><span class="line">    <span class="comment">// 问号&#x27;?&#x27;为占位符</span></span><br><span class="line">    String insert = <span class="string">&quot;INSERT INTO jdbcstudy.users(NAME, PASSWORD, email, birthday)  VALUES (?,?,?,?);&quot;</span>;</span><br><span class="line">    <span class="comment">//预编译sql</span></span><br><span class="line">    preparedStatement = connection.prepareStatement(insert);</span><br><span class="line">    <span class="comment">//手动赋值</span></span><br><span class="line">    preparedStatement.setString(<span class="number">1</span>, <span class="string">&quot;weidows&quot;</span>);</span><br><span class="line">    preparedStatement.setInt(<span class="number">2</span>, <span class="number">123456</span>);</span><br><span class="line">    preparedStatement.setString(<span class="number">3</span>, <span class="string">&quot;utsuko27@qq.com&quot;</span>);</span><br><span class="line">    preparedStatement.setDate(<span class="number">4</span>, <span class="keyword">new</span> Date(<span class="keyword">new</span> java.util.Date().getTime()));</span><br><span class="line">    <span class="comment">// 执行</span></span><br><span class="line">    <span class="keyword">if</span> (preparedStatement.executeUpdate() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;成功.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ! 查询</span></span><br><span class="line">    String query = <span class="string">&quot;SELECT * From jdbcstudy.users where name = ?;&quot;</span>;</span><br><span class="line">    preparedStatement = connection.prepareStatement(query);</span><br><span class="line">    preparedStatement.setString(<span class="number">1</span>, <span class="string">&quot;weidows&quot;</span>);</span><br><span class="line">    resultSet = preparedStatement.executeQuery();</span><br><span class="line">    <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;id = &quot;</span> + resultSet.getObject(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;name = &quot;</span> + resultSet.getObject(<span class="string">&quot;NAME&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;password = &quot;</span> + resultSet.getObject(<span class="string">&quot;PASSWORD&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;email = &quot;</span> + resultSet.getObject(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;birthday = &quot;</span> + resultSet.getObject(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;===============================================================&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 断连</span></span><br><span class="line">    DbcpUtils.releaseConnection(connection, preparedStatement, resultSet);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 笔记 </tag>
            
            <tag> MySQL </tag>
            
            <tag> JDBC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🚀进修MySQL~(肆)</title>
      <link href="post/Java/MySQL/4/"/>
      <url>post/Java/MySQL/4/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-20 17:34:17 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\MySQL\4.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86">用户/权限管理</a><ul><li><a href="#%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C">基本操作</a></li><li><a href="#%E6%9D%83%E9%99%90%E8%A7%A3%E9%87%8A">权限解释</a></li><li><a href="#%E8%A1%A8%E7%BB%B4%E6%8A%A4">表维护</a></li></ul></li><li><a href="#%E5%AF%BC%E5%87%BA%E5%AF%BC%E5%85%A5">导出&amp;导入</a></li><li><a href="#%E8%AE%BE%E8%AE%A1%E6%95%B0%E6%8D%AE%E5%BA%93">设计数据库</a></li><li><a href="#%E4%B8%89%E5%A4%A7%E8%8C%83%E5%BC%8F">三大范式</a><ul><li><a href="#%E7%AC%AC%E4%B8%80%E8%8C%83%E5%BC%8F">第一范式</a></li><li><a href="#%E7%AC%AC%E4%BA%8C%E8%8C%83%E5%BC%8F">第二范式</a></li><li><a href="#%E7%AC%AC%E4%B8%89%E8%8C%83%E5%BC%8F">第三范式</a></li><li><a href="#%E6%80%A7%E8%83%BD%E8%80%83%E9%87%8F">性能考量</a></li></ul></li><li><a href="#jdbc">JDBC</a><ul><li><a href="#helloworld">HelloWorld</a></li><li><a href="#%E5%AF%B9%E8%B1%A1%E6%93%8D%E4%BD%9C">对象操作</a></li><li><a href="#%E8%A7%A3%E8%80%A6%E6%A1%88%E4%BE%8B">解耦案例</a><ul><li><a href="#utils">Utils</a></li><li><a href="#curd">CURD</a></li></ul></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="用户-权限管理"><a href="#用户-权限管理" class="headerlink" title="用户/权限管理"></a>用户/权限管理</h1><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  用户信息表：mysql.user</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 刷新权限</span></span><br><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  增加用户</span></span><br><span class="line"><span class="comment">  必须拥有mysql数据库的全局CREATE USER权限，或拥有INSERT权限。</span></span><br><span class="line"><span class="comment">  用户名/密码注意加引号，如 &#x27;user_name&#x27;@&#x27;192.168.1.1&#x27;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> weidows <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 重命名用户</span></span><br><span class="line"><span class="keyword">RENAME</span> <span class="keyword">USER</span> weidows <span class="keyword">TO</span> weidows2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除用户</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> weidows2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 设置密码</span></span><br><span class="line"><span class="comment">-- 为当前用户设置密码</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> = <span class="keyword">PASSWORD</span> (<span class="string">&#x27;密码&#x27;</span>);</span><br><span class="line"><span class="comment">-- 为指定用户设置密码</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> <span class="keyword">FOR</span> 用户名 = <span class="keyword">PASSWORD</span> (<span class="string">&#x27;密码&#x27;</span>);</span><br><span class="line"><span class="comment">-- 上面两种报错的话</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> root@localhost <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">&#x27;密码&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  授予权限</span></span><br><span class="line"><span class="comment">  GRANT 权限列表 ON 表名 TO 用户名 [IDENTIFIED BY [PASSWORD] &#x27;password&#x27;]</span></span><br><span class="line"><span class="comment">    all privileges 表示所有权限</span></span><br><span class="line"><span class="comment">    *.* 表示所有库的所有表</span></span><br><span class="line"><span class="comment">    库名.表名 表示某库下面的某表</span></span><br><span class="line"><span class="comment">  只有root用户拥有grant权限,其他用户无法开启.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> weidows <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看权限</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GRANTS</span> <span class="keyword">FOR</span> root@localhost;</span><br><span class="line"><span class="comment">-- 查看当前用户权限</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GRANTS</span>;</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GRANTS</span> <span class="keyword">FOR</span> <span class="keyword">CURRENT_USER</span>;</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GRANTS</span> <span class="keyword">FOR</span> <span class="keyword">CURRENT_USER</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  撤消权限</span></span><br><span class="line"><span class="comment">  REVOKE 权限列表 ON 表名 FROM 用户名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">FROM</span> weidows;</span><br></pre></td></tr></table></figure><hr><h2 id="权限解释"><a href="#权限解释" class="headerlink" title="权限解释"></a>权限解释</h2><ul><li>(查询用,不用硬记)</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">ALL [PRIVILEGES]    <span class="comment">-- 设置除GRANT OPTION之外的所有简单权限</span></span><br><span class="line"><span class="keyword">ALTER</span>    <span class="comment">-- 允许使用ALTER TABLE</span></span><br><span class="line"><span class="keyword">ALTER</span> ROUTINE    <span class="comment">-- 更改或取消已存储的子程序</span></span><br><span class="line"><span class="keyword">CREATE</span>    <span class="comment">-- 允许使用CREATE TABLE</span></span><br><span class="line"><span class="keyword">CREATE</span> ROUTINE    <span class="comment">-- 创建已存储的子程序</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TEMPORARY</span> <span class="keyword">TABLES</span>        <span class="comment">-- 允许使用CREATE TEMPORARY TABLE</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span>        <span class="comment">-- 允许使用CREATE USER, DROP USER, RENAME USER和REVOKE ALL PRIVILEGES。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span>        <span class="comment">-- 允许使用CREATE VIEW</span></span><br><span class="line"><span class="keyword">DELETE</span>    <span class="comment">-- 允许使用DELETE</span></span><br><span class="line"><span class="keyword">DROP</span>    <span class="comment">-- 允许使用DROP TABLE</span></span><br><span class="line"><span class="keyword">EXECUTE</span>        <span class="comment">-- 允许用户运行已存储的子程序</span></span><br><span class="line"><span class="keyword">FILE</span>    <span class="comment">-- 允许使用SELECT...INTO OUTFILE和LOAD DATA INFILE</span></span><br><span class="line"><span class="keyword">INDEX</span>     <span class="comment">-- 允许使用CREATE INDEX和DROP INDEX</span></span><br><span class="line"><span class="keyword">INSERT</span>    <span class="comment">-- 允许使用INSERT</span></span><br><span class="line"><span class="keyword">LOCK</span> <span class="keyword">TABLES</span>        <span class="comment">-- 允许对您拥有SELECT权限的表使用LOCK TABLES</span></span><br><span class="line">PROCESS     <span class="comment">-- 允许使用SHOW FULL PROCESSLIST</span></span><br><span class="line"><span class="keyword">REFERENCES</span>    <span class="comment">-- 未被实施</span></span><br><span class="line">RELOAD    <span class="comment">-- 允许使用FLUSH</span></span><br><span class="line"><span class="keyword">REPLICATION</span> <span class="keyword">CLIENT</span>    <span class="comment">-- 允许用户询问从属服务器或主服务器的地址</span></span><br><span class="line"><span class="keyword">REPLICATION</span> <span class="keyword">SLAVE</span>    <span class="comment">-- 用于复制型从属服务器（从主服务器中读取二进制日志事件）</span></span><br><span class="line"><span class="keyword">SELECT</span>    <span class="comment">-- 允许使用SELECT</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>    <span class="comment">-- 显示所有数据库</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VIEW</span>    <span class="comment">-- 允许使用SHOW CREATE VIEW</span></span><br><span class="line"><span class="keyword">SHUTDOWN</span>    <span class="comment">-- 允许使用mysqladmin shutdown</span></span><br><span class="line">SUPER    <span class="comment">-- 允许使用CHANGE MASTER, KILL, PURGE MASTER LOGS和SET GLOBAL语句，mysqladmin debug命令；允许您连接（一次），即使已达到max_connections。</span></span><br><span class="line"><span class="keyword">UPDATE</span>    <span class="comment">-- 允许使用UPDATE</span></span><br><span class="line"><span class="keyword">USAGE</span>    <span class="comment">-- “无权限”的同义词</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">OPTION</span>    <span class="comment">-- 允许授予权限</span></span><br></pre></td></tr></table></figure><hr><h2 id="表维护"><a href="#表维护" class="headerlink" title="表维护"></a>表维护</h2><ul><li><code>了解</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 分析和存储表的关键字分布</span></span><br><span class="line"><span class="keyword">ANALYZE</span> [<span class="keyword">LOCAL</span> | <span class="keyword">NO_WRITE_TO_BINLOG</span>] <span class="keyword">TABLE</span> 表名 ...</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 检查一个或多个表是否有错误</span></span><br><span class="line"><span class="keyword">CHECK</span> <span class="keyword">TABLE</span> tbl_name [, tbl_name] ... [<span class="keyword">option</span>] ...</span><br><span class="line"><span class="keyword">option</span> = &#123;<span class="keyword">QUICK</span> | <span class="keyword">FAST</span> | <span class="keyword">MEDIUM</span> | <span class="keyword">EXTENDED</span> | <span class="keyword">CHANGED</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 整理数据文件的碎片</span></span><br><span class="line"><span class="keyword">OPTIMIZE</span> [<span class="keyword">LOCAL</span> | <span class="keyword">NO_WRITE_TO_BINLOG</span>] <span class="keyword">TABLE</span> tbl_name [, tbl_name] ...</span><br></pre></td></tr></table></figure><hr><h1 id="导出-amp-导入"><a href="#导出-amp-导入" class="headerlink" title="导出&amp;导入"></a>导出&amp;导入</h1><ul><li><p>可以用 SQL GUI 程序操作,下面介绍命令行操作</p></li><li><p>导出</p><ul><li>可以加上-w 携带备份条件</li><li>-xxx 后面不加空格,直接带上参数</li></ul><hr><ol><li>导出一张表 mysqldump -u 用户名 -p 密码 库名 表名 &gt; 文件名(D:/a.sql)</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysqldump</span> -uroot -p<span class="number">123456</span> school student &gt;D:/a.sql</span><br></pre></td></tr></table></figure><ol start="2"><li>导出多张表 mysqldump -u 用户名 -p 密码 库名 表 1 表 2 表 3 &gt; 文件名(D:/a.sql)</li></ol><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p123456 school student <span class="built_in">result</span> &gt;D:/<span class="keyword">a</span>.sql</span><br></pre></td></tr></table></figure><ol start="3"><li>导出所有表 mysqldump -u 用户名 -p 密码 库名 &gt; 文件名(D:/a.sql)</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysqldump</span> -uroot -p<span class="number">123456</span> school &gt;D:/a.sql</span><br></pre></td></tr></table></figure><ol start="4"><li>导出一个库 mysqldump -u 用户名 -p 密码 -B 库名 &gt; 文件名(D:/a.sql)</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysqldump</span> -uroot -p<span class="number">123456</span> -B school &gt;D:/a.sql</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>导入</p><ol><li>在已经登录 mysql,切换到指定数据库的情况下: source 备份文件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> D:/a.sql</span><br></pre></td></tr></table></figure><ol start="2"><li>在不登录的情况下: mysql -u 用户名 -p 密码 [库名] &lt; 备份文件 (如果导入一个库的话就不加库名)</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysql</span> -uroot -p<span class="number">123456</span> school &lt;D:/a.sql</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="设计数据库"><a href="#设计数据库" class="headerlink" title="设计数据库"></a>设计数据库</h1><ul><li><p>目的:</p><ol><li>节省数据存储空间</li><li>保证数据的完整性</li><li>方便进行数据库应用系统的开发</li></ol><hr></li><li><p>阶段设计</p><ol><li><p>需求分析: 分析客户的业务和数据处理需求</p></li><li><p>概要设计: 设计数据库的 E-R 模型图 , 确认需求信息的正确和完整.</p></li><li><p>收集信息: 搜集与需求相关的信息需求.</p><ol><li>页面 A</li><li>功能 B</li><li>特殊需求 C</li><li>自定义 D</li><li>…</li></ol></li><li><p>标识实体: 标识数据库所要管理的对象,详细信息(Attribute)以及关系(Relationship)</p><ol><li>写博客 user -&gt; blog</li><li>分类 blog -&gt; category</li><li>评论 user(作者) -&gt; user(评论者) -&gt; blog(博客页面)</li><li>…</li></ol></li></ol></li></ul><hr><h1 id="三大范式"><a href="#三大范式" class="headerlink" title="三大范式"></a>三大范式</h1><blockquote><p><a href="https://blog.csdn.net/scarecrow_fly/article/details/102170042">数据库设计的三大范式通俗讲解</a></p></blockquote><ul><li><p>三大范式出现为了解决一下四种问题</p><ul><li><p>信息重复</p></li><li><p>更新异常</p></li><li><p>插入异常</p></li><li><p>删除异常</p></li></ul></li></ul><hr><h2 id="第一范式"><a href="#第一范式" class="headerlink" title="第一范式"></a>第一范式</h2><blockquote><p>确保每列的<code>原子性</code>,每列都是不可再分的最小数据单元</p></blockquote><blockquote><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210317202650.png" alt="20210317202650" /></blockquote><ul><li>上面家庭信息和学校信息都可以再拆分为两列</li></ul><hr><h2 id="第二范式"><a href="#第二范式" class="headerlink" title="第二范式"></a>第二范式</h2><blockquote><p>必须在满足第一范式的条件下: 每个表只做一件事(<code>每行有唯一标识</code>,其他数据只依赖于此标识列)</p></blockquote><blockquote><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210317203230.png" alt="20210317203230" /></blockquote><ul><li><p>简单来讲就是标识列和其他列有共同重复数据行,那么<code>标识列</code>和<code>有重复数据的列</code>可以分到另一个表</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210317203601.png" alt="20210317203601" /></li></ul><hr><h2 id="第三范式"><a href="#第三范式" class="headerlink" title="第三范式"></a>第三范式</h2><blockquote><p>在第二范式基础上,其他列数据必须与标识列数据有直接关系</p></blockquote><blockquote><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210317204105.png" alt="20210317204105" /></blockquote><ul><li><p>也就是说不存在标识列与其他列共同重复了,但还是可能存在多个其他列有共同重复(班主任的那三列有共同重复数据)</p></li><li><p>把班主任分出去</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210317204341.png" alt="20210317204341" /></li></ul><hr><h2 id="性能考量"><a href="#性能考量" class="headerlink" title="性能考量"></a>性能考量</h2><blockquote><p><code>关联查询不能超过三张表</code>.</p></blockquote><ul><li><p>实际应用中需要考虑多表的额外开销</p></li><li><p>如果不规范程度低,而且性能需求高的场景,则需要考虑是否遵循范式.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h1><h2 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h2><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210319102812.png" alt="20210319102812" /><ul><li><p>工具类 (Java 自带)</p><ul><li>java.sql</li><li>javax.sql</li></ul></li><li><p>SQL 驱动需要导入(在 pom.xml 中)</p><ul><li>mysql-connector-java-版本号 jar</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.23<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>创建数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> jdbcStudy <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">USE</span> jdbcStudy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`users`</span></span><br><span class="line">(</span><br><span class="line">  <span class="keyword">id</span>       <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  <span class="keyword">NAME</span>     <span class="built_in">VARCHAR</span>(<span class="number">40</span>),</span><br><span class="line">  <span class="keyword">PASSWORD</span> <span class="built_in">VARCHAR</span>(<span class="number">40</span>),</span><br><span class="line">  email    <span class="built_in">VARCHAR</span>(<span class="number">60</span>),</span><br><span class="line">  birthday <span class="built_in">DATE</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`users`</span>(<span class="keyword">id</span>, <span class="keyword">NAME</span>, <span class="keyword">PASSWORD</span>, email, birthday)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;zhansan&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;zs@sina.com&#x27;</span>, <span class="string">&#x27;1980-12-04&#x27;</span>),</span><br><span class="line">      (<span class="number">2</span>, <span class="string">&#x27;lisi&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;lisi@sina.com&#x27;</span>, <span class="string">&#x27;1981-12-04&#x27;</span>),</span><br><span class="line">      (<span class="number">3</span>, <span class="string">&#x27;wangwu&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;wangwu@sina.com&#x27;</span>, <span class="string">&#x27;1979-12-04&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>连接,helloworld</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mysql.cj.jdbc.Driver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCFirstDemo</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1.设置用户信息</span></span><br><span class="line"><span class="comment">        useUnicode = true 支持中文编码</span></span><br><span class="line"><span class="comment">        characterEncoding = utf8 设定字符集</span></span><br><span class="line"><span class="comment">        useSSL = true 安全连接</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    String url = <span class="string">&quot;jdbc:mysql://localhost:3306/jdbcStudy?useUnicode = true &amp; characterEncoding = utf8 &amp; useSSL = true&quot;</span>;</span><br><span class="line">    String user = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    String password = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.加载驱动(固定写法,二选一)</span></span><br><span class="line">    <span class="comment">// Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);</span></span><br><span class="line">    DriverManager.registerDriver(<span class="keyword">new</span> Driver());</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 3.连接，数据库对象 Connection 代表数据库</span></span><br><span class="line"><span class="comment">        //事务提交</span></span><br><span class="line"><span class="comment">        connection.commit();</span></span><br><span class="line"><span class="comment">        //事务回滚</span></span><br><span class="line"><span class="comment">        connection.rollback();</span></span><br><span class="line"><span class="comment">        //数据库设置自动提交</span></span><br><span class="line"><span class="comment">        connection.setAutoCommit(true);</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    Connection connection = DriverManager.getConnection(url, user, password);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.创建SQL的对象</span></span><br><span class="line">    Statement statement = connection.createStatement();</span><br><span class="line">    String sql = <span class="string">&quot;SELECT * FROM users&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.执行SQL的对象,查看返回结果</span></span><br><span class="line">    ResultSet resultSet = statement.executeQuery(sql); <span class="comment">//返回的结果集</span></span><br><span class="line">    <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;id = &quot;</span> + resultSet.getObject(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;name = &quot;</span> + resultSet.getObject(<span class="string">&quot;NAME&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;password = &quot;</span> + resultSet.getObject(<span class="string">&quot;PASSWORD&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;email = &quot;</span> + resultSet.getObject(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;birthday = &quot;</span> + resultSet.getObject(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;===============================================================&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//6.释放连接</span></span><br><span class="line">    resultSet.close();</span><br><span class="line">    statement.close();</span><br><span class="line">    connection.close();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li><li><p>执行结果</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">id = 1</span><br><span class="line">name = zhansan</span><br><span class="line">password = 123456</span><br><span class="line">email = zs@sina.com</span><br><span class="line">birthday = 1980-12-04</span><br><span class="line">===============================================================</span><br><span class="line">id = 2</span><br><span class="line">name = lisi</span><br><span class="line">password = 123456</span><br><span class="line">email = lisi@sina.com</span><br><span class="line">birthday = 1981-12-04</span><br><span class="line">===============================================================</span><br><span class="line">id = 3</span><br><span class="line">name = wangwu</span><br><span class="line">password = 123456</span><br><span class="line">email = wangwu@sina.com</span><br><span class="line">birthday = 1979-12-04</span><br><span class="line">===============================================================</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h2 id="对象操作"><a href="#对象操作" class="headerlink" title="对象操作"></a>对象操作</h2><ul><li><p>connection</p><ul><li>connection.rollback();</li><li>connection.commit();</li><li>connection.setAutoCommit();</li></ul></li></ul><hr><ul><li><p>statement</p><ul><li>statement.executeQuery(); 执行查询 SQL</li><li>statement.execute(); 可以执行任何 SQL 指令</li><li>statement.executeUpdate(); 更新，插入，删除，返回受影响的行数</li><li>statement.executeBatch(); 执行一组 SQL</li></ul></li></ul><hr><ul><li><p>ResultSet</p><ul><li>resultSet.getObject(); 在不知道列类型下使用</li><li>resultSet.getString(); 如果知道则指定使用</li><li>resultSet.getInt();</li><li>…</li></ul><hr><ul><li>resultSet.next(); 移动到下一个</li><li>resultSet.previous(); 移动到上一个</li><li>resultSet.beforeFirst(); 移动到最前</li><li>resultSet.afterLast(); 移动到最后</li><li>resultSet.absolute(row); 移动到指定行</li></ul></li></ul><hr><h2 id="解耦案例"><a href="#解耦案例" class="headerlink" title="解耦案例"></a>解耦案例</h2><ul><li><p>上面的 JDBC 包括加载连接,业务逻辑,状态转化都写到一个类中,导致扩展时很不方便,需要 <code>解耦</code></p></li><li><p>把加载连接分离到 <code>db.properties</code></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/jdbcStudy?useUnicode = true &amp; characterEncoding = utf8 &amp; useSSL = true</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><h3 id="Utils"><a href="#Utils" class="headerlink" title="Utils"></a>Utils</h3></li><li><p>把 SQL connect 和 release 分离到 <code>utils.JDBCUtils</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> String driver = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> String username = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> String password = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    <span class="comment">// 加载连接信息</span></span><br><span class="line">    Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      properties.load(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;Java/src/main/java/twenty_one/jdbc/demo2/db.properties&quot;</span>));</span><br><span class="line"></span><br><span class="line">      driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">      url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">      username = properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">      password = properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">      Class.forName(driver);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException | ClassNotFoundException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取连接</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 释放资源</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">releaseConnection</span><span class="params">(Connection connection,Statement statement,ResultSet resultSet)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">      resultSet.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">      statement.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">      connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CURD"><a href="#CURD" class="headerlink" title="CURD"></a>CURD</h3></li><li><p>业务类: 测试增删改查(CURD)</p><ul><li>增删改用<code>.executeUpdate()</code>, 查用<code>.executeQuery()</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> twenty_one.jdbc.demo2.utils.JDBCUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Connection connection = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Statement statement = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    <span class="comment">// 连接</span></span><br><span class="line">    connection = JDBCUtils.getConnection();</span><br><span class="line">    statement = connection.createStatement();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 增</span></span><br><span class="line">    String insert = <span class="string">&quot;INSERT INTO jdbcstudy.users(NAME, PASSWORD, email, birthday)  VALUES (&#x27;weidows&#x27;, 123456, &#x27;utsuko27@qq.com&#x27;, &#x27;2020-07-28&#x27;);&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (statement.executeUpdate(insert) &gt; <span class="number">0</span>) &#123; <span class="comment">// 返回int:受影响的行数</span></span><br><span class="line">      System.out.println(<span class="string">&quot;插入成功. insert -&gt; weidows&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 改</span></span><br><span class="line">    String update = <span class="string">&quot;update jdbcstudy.users set password =654321 where name = &#x27;weidows&#x27;;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (statement.executeUpdate(update) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;修改成功. weidows.password -&gt; 654321&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查</span></span><br><span class="line">    String query = <span class="string">&quot;SELECT * From jdbcstudy.users;&quot;</span>;</span><br><span class="line">    resultSet = statement.executeQuery(query);</span><br><span class="line">    <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;id = &quot;</span> + resultSet.getObject(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;name = &quot;</span> + resultSet.getObject(<span class="string">&quot;NAME&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;password = &quot;</span> + resultSet.getObject(<span class="string">&quot;PASSWORD&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;email = &quot;</span> + resultSet.getObject(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;birthday = &quot;</span> + resultSet.getObject(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">      System.out.println(<span class="string">&quot;===============================================================&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删</span></span><br><span class="line">    String delete = <span class="string">&quot;delete from jdbcstudy.users where name = &#x27;weidows&#x27;;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (statement.executeUpdate(delete) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;删除成功.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 断连</span></span><br><span class="line">    JDBCUtils.releaseConnection(connection, statement, resultSet);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>执行结果</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">插入成功. insert -&gt; weidows</span><br><span class="line">修改成功. weidows.password -&gt; 654321</span><br><span class="line">id = 1</span><br><span class="line">name = zhansan</span><br><span class="line">password = 123456</span><br><span class="line">email = zs@sina.com</span><br><span class="line">birthday = 1980-12-04</span><br><span class="line">===============================================================</span><br><span class="line">id = 2</span><br><span class="line">name = lisi</span><br><span class="line">password = 123456</span><br><span class="line">email = lisi@sina.com</span><br><span class="line">birthday = 1981-12-04</span><br><span class="line">===============================================================</span><br><span class="line">id = 3</span><br><span class="line">name = wangwu</span><br><span class="line">password = 123456</span><br><span class="line">email = wangwu@sina.com</span><br><span class="line">birthday = 1979-12-04</span><br><span class="line">===============================================================</span><br><span class="line">id = 9</span><br><span class="line">name = weidows</span><br><span class="line">password = 654321</span><br><span class="line">email = utsuko27@qq.com</span><br><span class="line">birthday = 2020-07-28</span><br><span class="line">===============================================================</span><br><span class="line">删除成功.</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 笔记 </tag>
            
            <tag> MySQL </tag>
            
            <tag> JDBC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🚀进修MySQL~(叁)</title>
      <link href="post/Java/MySQL/3/"/>
      <url>post/Java/MySQL/3/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-21 10:58:41 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\MySQL\3.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%87%BD%E6%95%B0">函数</a><ul><li><a href="#%E6%95%B0%E6%8D%AE%E5%87%BD%E6%95%B0">数据函数</a><ul><li><a href="#%E4%BD%9C%E7%94%A8%E4%BA%8E%E8%AE%B0%E5%BD%95">作用于记录</a></li><li><a href="#%E4%BD%9C%E7%94%A8%E4%BA%8E%E5%AD%97%E6%AE%B5">作用于字段</a></li></ul></li><li><a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BD%E6%95%B0">字符串函数</a></li><li><a href="#%E6%97%B6%E9%97%B4%E5%87%BD%E6%95%B0">时间函数</a></li><li><a href="#%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF">系统信息</a></li><li><a href="#%E5%88%86%E7%BB%84">分组</a></li><li><a href="#md5-%E5%8A%A0%E5%AF%86">MD5 加密</a></li></ul></li><li><a href="#%E4%BA%8B%E5%8A%A1">事务</a><ul><li><a href="#acid-%E5%8E%9F%E5%88%99">ACID 原则</a></li><li><a href="#%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95">基本语法</a></li></ul></li><li><a href="#%E7%B4%A2%E5%BC%95">索引</a><ul><li><a href="#%E5%88%86%E7%B1%BB">分类</a></li><li><a href="#%E6%B7%BB%E5%8A%A0%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95">添加&amp;删除索引</a></li><li><a href="#explain">EXPLAIN</a></li><li><a href="#%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90">性能分析</a></li><li><a href="#%E7%B4%A2%E5%BC%95%E8%A7%84%E7%9F%A9">索引规矩</a></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="数据函数"><a href="#数据函数" class="headerlink" title="数据函数"></a>数据函数</h2><h3 id="作用于记录"><a href="#作用于记录" class="headerlink" title="作用于记录"></a>作用于记录</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 绝对值</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">ABS</span>(<span class="number">-8</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向上取整</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">CEILING</span>(<span class="number">9.4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向下取整</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">FLOOR</span>(<span class="number">9.4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 随机数,返回一个0-1之间的随机数</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">RAND</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 符号函数: 负数返回-1,正数返回1,0返回0</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">SIGN</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><hr><h3 id="作用于字段"><a href="#作用于字段" class="headerlink" title="作用于字段"></a>作用于字段</h3><ul><li>也叫 <code>聚合函数</code>(常用)</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  三种COUNT()用法及区别</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  count(1)和count(*)都会对全表进行扫描，统计所有记录的条数，包括那些为null的记录，因此，它们的效率可以说是相差无几;而count(字段)则与前两者不同，它会统计该字段不为null的记录条数。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  1）在表没有主键时，count(1)比count(*)快</span></span><br><span class="line"><span class="comment">  2）有主键时，主键作为计算条件，count(主键)效率最高；</span></span><br><span class="line"><span class="comment">  3）若表格只有一个字段，则count(*)效率较高。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">COUNT</span>(studentname) <span class="keyword">AS</span> <span class="string">`学生人数`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> <span class="string">`学生人数`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">AS</span> <span class="string">`学生人数`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 和</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">SUM</span>(StudentResult) <span class="keyword">AS</span> <span class="string">`总 和`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  <span class="keyword">result</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 平均</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">AVG</span>(StudentResult) <span class="keyword">AS</span> <span class="string">`平 均 分`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  <span class="keyword">result</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 最高</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">MAX</span>(StudentResult) <span class="keyword">AS</span> <span class="string">`最 高 分`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  <span class="keyword">result</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 最低</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">MIN</span>(StudentResult) <span class="keyword">AS</span> <span class="string">`最 低 分`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  <span class="keyword">result</span>;</span><br></pre></td></tr></table></figure><hr><h2 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 返回字符串包含的字符数</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">CHAR_LENGTH</span>(<span class="string">&#x27;狂神说坚持就能成功&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 合并字符串,参数可以有多个</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">CONCAT</span>(<span class="string">&#x27;我&#x27;</span>, <span class="string">&#x27;爱&#x27;</span>, <span class="string">&#x27;程序&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 替换字符串,从某个位置开始替换某个长度</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">INSERT</span>(<span class="string">&#x27;我爱编程helloworld&#x27;</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="string">&#x27;超级热爱&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- toLowerCase小写</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">LOWER</span>(<span class="string">&#x27;KuangShen&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- toUpperCase大写</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">UPPER</span>(<span class="string">&#x27;KuangShen&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 从左边截取</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">LEFT</span>(<span class="string">&#x27;hello,world&#x27;</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 从右边截取</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">RIGHT</span>(<span class="string">&#x27;hello,world&#x27;</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 替换字符串</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">REPLACE</span>(<span class="string">&#x27;狂神说坚持就能成功&#x27;</span>, <span class="string">&#x27;坚持&#x27;</span>, <span class="string">&#x27;努力&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 截取字符串,开始和长度</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">SUBSTR</span>(<span class="string">&#x27;狂神说坚持就能成功&#x27;</span>, <span class="number">4</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 反转</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">REVERSE</span>(<span class="string">&#x27;狂神说坚持就能成功&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓周的同学,改成邹 (采用子查询)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  studentname =(</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">      <span class="keyword">REPLACE</span>(studentname, <span class="string">&#x27;周&#x27;</span>, <span class="string">&#x27;邹&#x27;</span>)</span><br><span class="line">    <span class="keyword">WHERE</span></span><br><span class="line">      studentname <span class="keyword">LIKE</span> <span class="string">&#x27;周%&#x27;</span></span><br><span class="line">  );</span><br></pre></td></tr></table></figure><hr><h2 id="时间函数"><a href="#时间函数" class="headerlink" title="时间函数"></a>时间函数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 获取当前日期(两种一样)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">CURRENT_DATE</span>();</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">CURDATE</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 获取当前日期和时间(三种一样)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">NOW</span>();</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">LOCALTIME</span>();</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">SYSDATE</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 获取年月日,时分秒</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">YEAR</span>(<span class="keyword">NOW</span>());</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">MONTH</span>(<span class="keyword">NOW</span>());</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">DAY</span>(<span class="keyword">NOW</span>());</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">HOUR</span>(<span class="keyword">NOW</span>());</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">MINUTE</span>(<span class="keyword">NOW</span>());</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">SECOND</span>(<span class="keyword">NOW</span>());</span><br></pre></td></tr></table></figure><hr><h2 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 版本</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">VERSION</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用户(MySQL的用户)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">USER</span>();</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">SYSTEM_USER</span>();</span><br></pre></td></tr></table></figure><hr><h2 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  查询 不同课程 的平均分,最高分,最低分 (根据不同的课程进行分组)</span></span><br><span class="line"><span class="comment">  分组后面的筛选,使用 `HAVING`</span></span><br><span class="line"><span class="comment">  having是从前面筛选的字段再筛选，而where是从数据表中的字段直接进行的筛选的</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  subjectname,</span><br><span class="line">  <span class="keyword">AVG</span>(studentresult) <span class="keyword">AS</span> <span class="string">`平 均 分`</span>,</span><br><span class="line">  <span class="keyword">MAX</span>(StudentResult) <span class="keyword">AS</span> <span class="string">`最 高 分`</span>,</span><br><span class="line">  <span class="keyword">MIN</span>(StudentResult) <span class="keyword">AS</span> <span class="string">`最 低 分`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  <span class="keyword">result</span> <span class="keyword">AS</span> r</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> <span class="keyword">AS</span> s <span class="keyword">ON</span> r.subjectno = s.subjectno</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  r.subjectno</span><br><span class="line"><span class="keyword">HAVING</span></span><br><span class="line">  <span class="string">`平 均 分`</span> &gt; <span class="number">60</span>;</span><br></pre></td></tr></table></figure><hr><h2 id="MD5-加密"><a href="#MD5-加密" class="headerlink" title="MD5 加密"></a>MD5 加密</h2><blockquote><p>Message-Digest Algorithm 5（信息-摘要算法 5），用于确保信息传输完整一致。是计算机广泛使用的杂凑算法（摘要算法、哈希算法）.</p></blockquote><ul><li><p>初始化</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 新建表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`testmd5`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`pwd`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入数据(明文密码)</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span></span><br><span class="line">  testmd5</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="number">1</span>, <span class="string">&#x27;kuangshen&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>),(<span class="number">2</span>, <span class="string">&#x27;qinjiang&#x27;</span>, <span class="string">&#x27;456789&#x27;</span>);</span><br></pre></td></tr></table></figure><hr></li><li><p>加密</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 加密全列</span></span><br><span class="line"><span class="keyword">update</span></span><br><span class="line">  testmd5</span><br><span class="line"><span class="keyword">set</span></span><br><span class="line">  pwd = <span class="keyword">md5</span>(pwd);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入时加密</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span></span><br><span class="line">  testmd5</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">4</span>, <span class="string">&#x27;kuangshen3&#x27;</span>, <span class="keyword">md5</span>(<span class="string">&#x27;123456&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 检查账号密码是否对应</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  testmd5</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  <span class="string">`name`</span> = <span class="string">&#x27;kuangshen&#x27;</span></span><br><span class="line">  <span class="keyword">AND</span> <span class="string">`pwd`</span> = <span class="keyword">MD5</span>(<span class="string">&#x27;123456&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h1><ul><li>一组遵循 ACID 原则的 SQL 指令</li></ul><h2 id="ACID-原则"><a href="#ACID-原则" class="headerlink" title="ACID 原则"></a>ACID 原则</h2><ul><li><p>原子性(Atomic)</p><ul><li>同一批次的 SQL 指令,要么全通过,要么全取消,不存在中间态</li></ul></li><li><p>一致性(Consist)</p><ul><li>事务前后数据完整性一致</li></ul></li><li><p>隔离性(Isolated)</p><ul><li><p>多个用户并发执行多事务,会使其<code>串行化</code>执行,同一时间只能有一个请求作用于同一数据</p></li><li><p>有可能隔离失败导致一些问题(如下)</p></li></ul><hr><ol><li><p>脏读 : 一个事务读取了另一个没有提交的事务</p></li><li><p>不可重复读 : 在同一个事务内，再次读取表中的数据，表发生了改变</p></li><li><p>幻读(虚读) : 在一个事务内，读取到了别人插入的数据，导致前后读出来的结果不一致</p></li></ol></li><li><p>持久性(Durable)</p><ul><li>事务一旦提交成功,便不会被外界因素影响而导致回滚.</li></ul></li></ul><hr><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  MySQL中默认是自动提交,使用事务时应先关闭自动提交</span></span><br><span class="line"><span class="comment">  关闭自动提交模式(0),开启(1)</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="keyword">SET</span> autocommit = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开始一个事务,标记事务的起始点</span></span><br><span class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 此处写业务代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  COMMIT; -- 提交一个事务给数据库</span></span><br><span class="line"><span class="comment">  ROLLBACK; -- 将事务回滚,数据回到本次事务的初始状态</span></span><br><span class="line"><span class="comment">  保存点(了解,不常用)</span></span><br><span class="line"><span class="comment">    SAVEPOINT `保 存 点 名 称`; -- 设置一个事务保存点</span></span><br><span class="line"><span class="comment">    ROLLBACK TO SAVEPOINT `保 存 点 名 称`; -- 回滚到保存点</span></span><br><span class="line"><span class="comment">    RELEASE SAVEPOINT `保 存 点 名 称`; -- 删除保存点</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 还原MySQL数据库的自动提交</span></span><br><span class="line"><span class="keyword">SET</span> autocommit = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><ul><li><p>逻辑图</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210316182445.png" alt="20210316182445" /></li><li><p>例子</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`shop`</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">USE</span> <span class="string">`shop`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`account`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`cash`</span> <span class="built_in">DECIMAL</span>(<span class="number">9</span>, <span class="number">2</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span></span><br><span class="line">  <span class="keyword">account</span> (<span class="string">`name`</span>, <span class="string">`cash`</span>)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;A&#x27;</span>, <span class="number">2000.00</span>),(<span class="string">&#x27;B&#x27;</span>, <span class="number">10000.00</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开始</span></span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">  autocommit = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span></span><br><span class="line">  <span class="keyword">account</span></span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">  cash = cash <span class="number">-500</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  <span class="string">`name`</span> = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span></span><br><span class="line">  <span class="keyword">account</span></span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">  cash = cash + <span class="number">500</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  <span class="string">`name`</span> = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">  autocommit = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><blockquote><p>索引是帮助 MySQL 高校获取数据的数据结构.</p></blockquote><ul><li>提高查询,分组,全文搜索速度</li><li>表间参照&amp;数据唯一性功能.</li></ul><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ol><li><p>主键索引 (Primary Key)</p><ul><li>最常见,唯一性(一个表只能有一个)</li></ul></li><li><p>唯一索引 (Unique)</p><ul><li>保证某列中记录值唯一,同一表可以有多个唯一索引</li></ul></li><li><p>常规索引 (Key/Index)</p><ul><li>默认的索引类型</li></ul></li><li><p>全文索引 (FullText)</p><ul><li>MyISAM/InnoDB 引擎下才能使用,对字段类型也有要求,适用于大型数据</li></ul></li></ol><hr><h2 id="添加-amp-删除索引"><a href="#添加-amp-删除索引" class="headerlink" title="添加&amp;删除索引"></a>添加&amp;删除索引</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">方法一：创建表时</span><br><span class="line">　<span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名 (</span><br><span class="line">    字段名<span class="number">1</span> 数据类型 [完整性约束条件…],</span><br><span class="line">    字段名<span class="number">2</span> 数据类型 [完整性约束条件…],</span><br><span class="line">    索引类型 [索引名] (字段名[(长度)] [<span class="keyword">ASC</span> |<span class="keyword">DESC</span>])</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">方法二：<span class="keyword">CREATE</span>在已存在的表上创建索引</span><br><span class="line">  <span class="keyword">CREATE</span> 索引类型 索引名</span><br><span class="line">  <span class="keyword">ON</span> 表名 (字段名[(长度)] [<span class="keyword">ASC</span> |<span class="keyword">DESC</span>]) ;</span><br><span class="line"></span><br><span class="line">方法三：<span class="keyword">ALTER</span> <span class="keyword">TABLE</span>在已存在的表上创建索引</span><br><span class="line">  <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line">    <span class="keyword">ADD</span> 索引类型 索引名 (字段名[(长度)] [<span class="keyword">ASC</span> |<span class="keyword">DESC</span>]) ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 例子:增加全文索引</span></span><br><span class="line">  <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`school`</span>.<span class="string">`student`</span></span><br><span class="line">    <span class="keyword">ADD</span> FULLTEXT <span class="keyword">INDEX</span> <span class="string">`studentname`</span> (<span class="string">`studentName`</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除索引：DROP INDEX 索引名 ON 表名字;</span></span><br><span class="line"><span class="comment">#删除主键索引: ALTER TABLE 表名 DROP PRIMARY KEY;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#显示索引信息: SHOW INDEX FROM 表名;</span></span><br></pre></td></tr></table></figure><hr><h2 id="EXPLAIN"><a href="#EXPLAIN" class="headerlink" title="EXPLAIN"></a>EXPLAIN</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  EXPLAIN : 分析SQL语句执行性能</span></span><br><span class="line"><span class="comment">  常规索引</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">EXPLAIN</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> studentno = <span class="string">&#x27;1000&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  使用全文索引</span></span><br><span class="line"><span class="comment">  全文搜索通过 MATCH() 函数完成。</span></span><br><span class="line"><span class="comment">  搜索字符串作为 against() 的参数被给定。对于表中的每个记录行，MATCH() 返回一个相关性值。即搜索字符串与记录行在 MATCH() 列表中指定的列的文本之间的相似性尺度。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">EXPLAIN</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">MATCH</span>(studentname) AGAINST(<span class="string">&#x27;刘&#x27;</span>);</span><br></pre></td></tr></table></figure><hr><h2 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h2><ul><li><p>建表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`app_user`</span></span><br><span class="line">(</span><br><span class="line">  <span class="string">`id`</span>          <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span>        <span class="built_in">varchar</span>(<span class="number">50</span>)              <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;用户昵称&#x27;</span>,</span><br><span class="line">  <span class="string">`email`</span>       <span class="built_in">varchar</span>(<span class="number">50</span>)         <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;用户邮箱&#x27;</span>,</span><br><span class="line">  <span class="string">`phone`</span>       <span class="built_in">varchar</span>(<span class="number">20</span>)              <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;手机号&#x27;</span>,</span><br><span class="line">  <span class="string">`gender`</span>      <span class="built_in">tinyint</span>(<span class="number">4</span>) <span class="keyword">unsigned</span>      <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;性别（0:男；1：女）&#x27;</span>,</span><br><span class="line">  <span class="string">`password`</span>    <span class="built_in">varchar</span>(<span class="number">100</span>)        <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  <span class="string">`age`</span>         <span class="built_in">tinyint</span>(<span class="number">4</span>)               <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">  <span class="string">`create_time`</span> datetime                 <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  <span class="string">`update_time`</span> <span class="built_in">timestamp</span>           <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span></span><br><span class="line">  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8mb4 <span class="keyword">COMMENT</span> =<span class="string">&#x27;app用户表&#x27;</span>;</span><br></pre></td></tr></table></figure><hr></li><li><p>生成随机数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> mock_data()</span><br><span class="line">  <span class="keyword">RETURNS</span> <span class="built_in">INT</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">DECLARE</span> <span class="keyword">num</span> <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1000000</span>;</span><br><span class="line">  <span class="keyword">DECLARE</span> i <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">  WHILE i &lt; num</span><br><span class="line">    <span class="keyword">DO</span></span><br><span class="line">      <span class="keyword">INSERT</span> <span class="keyword">INTO</span> app_user(<span class="string">`name`</span>, <span class="string">`email`</span>, <span class="string">`phone`</span>, <span class="string">`gender`</span>, <span class="string">`password`</span>, <span class="string">`age`</span>)</span><br><span class="line">      <span class="keyword">VALUES</span> (<span class="keyword">CONCAT</span>(<span class="string">&#x27;用户&#x27;</span>, i), <span class="string">&#x27;24736743@qq.com&#x27;</span>, <span class="keyword">CONCAT</span>(<span class="string">&#x27;18&#x27;</span>, <span class="keyword">FLOOR</span>(<span class="keyword">RAND</span>() * (<span class="number">999999999</span> - <span class="number">100000000</span>) + <span class="number">100000000</span>)),</span><br><span class="line">              <span class="keyword">FLOOR</span>(<span class="keyword">RAND</span>() * <span class="number">2</span>), <span class="keyword">UUID</span>(), <span class="keyword">FLOOR</span>(<span class="keyword">RAND</span>() * <span class="number">100</span>));</span><br><span class="line">      <span class="keyword">SET</span> i = i + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line">  RETURN i;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"><span class="keyword">SELECT</span> mock_data();</span><br></pre></td></tr></table></figure><ul><li>上面的有可能无效,可以用下面的</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;schema&quot;</span>: <span class="string">&quot;study&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;table&quot;</span>: <span class="string">&quot;app_user&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;mockStartIndex&quot;</span>: <span class="string">&quot;auto&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;mockCount&quot;</span>: <span class="number">100000</span>,</span><br><span class="line">  <span class="attr">&quot;mockValueReference&quot;</span>: <span class="string">&quot;http://mockjs.com/examples.html#DPD&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;mock&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;bigint&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;$mockIndex&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;varchar&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;@string(&#x27;lower&#x27;,5)&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;email&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;varchar&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;@string(&#x27;lower&#x27;,5)&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;phone&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;varchar&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;@string(&#x27;lower&#x27;,5)&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;gender&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;tinyint&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;@integer(0,1)&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;password&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;varchar&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;@string(&#x27;lower&#x27;,5)&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;tinyint&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;@integer(0,100)&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;create_time&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;datetime&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;@now(&#x27;yyyy-MM-dd HH:mm:ss&#x27;)&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;update_time&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;timestamp&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;@now(&#x27;yyyy-MM-dd HH:mm:ss&#x27;)&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li><li><p>性能测试</p><ul><li><p>无索引下 select 耗时 &amp; 搜索行数</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">study&gt; SELECT</span><br><span class="line">        *</span><br><span class="line">      FROM</span><br><span class="line">        app_user</span><br><span class="line">      WHERE</span><br><span class="line">          name = <span class="string">&#x27;wkjvo&#x27;</span></span><br><span class="line">[<span class="number">2021</span><span class="number">-03</span><span class="number">-17</span> <span class="number">12</span>:<span class="number">06</span>:<span class="number">29</span>] 在 <span class="number">202</span> ms (execution: <span class="number">72</span> ms, fetching: <span class="number">130</span> ms) 中从 <span class="number">1</span> 开始检索到<span class="number">1</span> 行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rows: <span class="number">99946</span></span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>添加索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> idx_app_user_name <span class="keyword">ON</span> app_user(<span class="keyword">name</span>);</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>有索引的 select</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">study&gt; SELECT</span><br><span class="line">        *</span><br><span class="line">      FROM</span><br><span class="line">        app_user</span><br><span class="line">      WHERE</span><br><span class="line">          name = <span class="string">&#x27;wkjvo&#x27;</span></span><br><span class="line">[<span class="number">2021</span><span class="number">-03</span><span class="number">-17</span> <span class="number">12</span>:<span class="number">12</span>:<span class="number">11</span>] 在 <span class="number">100</span> ms (execution: <span class="number">6</span> ms, fetching: <span class="number">94</span> ms) 中从 <span class="number">1</span> 开始检索到<span class="number">1</span> 行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rows: <span class="number">1</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><h2 id="索引规矩"><a href="#索引规矩" class="headerlink" title="索引规矩"></a>索引规矩</h2><ul><li><p>无索引时是暴力遍历搜索,数据表越大越慢;有索引时是对特定数据结构索引,搜索速度快,但是在增删改时有额外性能开销.</p><ol><li>不要对<code>经常变动</code>的数据加索引</li><li><code>小数据量</code>的表建议不要加索引</li><li>一般只在查找条件的字段索引</li></ol></li><li><p>索引数据结构</p><ol><li>hash 单个索引快,范围索引慢</li><li>Btree</li></ol></li><li><p>不同的数据库引擎所支持的索引类型以及索引数据结构不同</p><ul><li>InnoDB 支持事务，支持行级别锁定，支持 B-tree、Full-text 等索引，不支持 Hash 索引</li><li>MyISAM 不支持事务，支持表级别锁定，支持 B-tree、Full-text 等索引，不支持 Hash 索引</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 笔记 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>😍妆容打扮.</title>
      <link href="post/life/%E5%A6%86%E5%AE%B9%E6%89%93%E6%89%AE/"/>
      <url>post/life/%E5%A6%86%E5%AE%B9%E6%89%93%E6%89%AE/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-15 10:08:57 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\life\妆容打扮.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%89%8D%E6%83%85%E6%8F%90%E8%A6%81">前情提要</a></li><li><a href="#%E9%9D%A2%E9%83%A8">面部</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><ul><li><p>回望大学之前,我对衣装打扮之类的并不在意,能穿就行那种;</p><ul><li><p>但随着个人追求和品味的提升,这方面好像也蠢蠢欲动哈</p></li><li><p>倒也并不止打扮好看点为了吸引谁,更多的像是<code>&quot;精致的利己主义者&quot;</code></p></li></ul></li></ul><hr><ul><li><p>我自认为并不是相貌出众,仅仅相貌平平吧 (不卑不亢挺好的)</p><ul><li><p>所以,至少为了不在这方面太差,需要下一点功夫提升提升.</p></li><li><p>其实也不用太过刻薄,这方面大家都耳闻目染的了解,妆容不错的人确实身上会带一点 buff</p></li></ul></li></ul><hr><ul><li><p>于是,谨以此篇概要个人所见所闻以及经验.</p></li><li><p>多数信息采集自课代表,质量较高的或者经人试用过的产品,<code>此篇绝不存在推销意向</code></p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="面部"><a href="#面部" class="headerlink" title="面部"></a>面部</h1><p>面部发黄爱出油、肤色不均 痘印难消、红色痘印变黑色痘印</p><ul><li><p>第一点：皮肤在受紫外线照射后，皮肤中的色素细胞会更活跃，导致皮肤黑和肤色不均</p></li><li><p>第二点：痘痘好了之后留下的红色痘印，验证过后由红色痘印转为黑色痘印</p></li><li><p>第三点：面部出油严重，油脂被氧化变成黄色后整个面部也会出现皮肤发黄暗沉</p><hr></li></ul><p>抑制黑色素、抗炎调节皮肤水油平衡 就可以达到有效美白<br>推荐产品：PMPM 白钻松露瓶</p><ul><li>① 白松露提取物（贵妇级成分）50 余种活性营养精华、8 种维生素和 18 种氨基酸<br>美白抑黑、提亮去黄的效果非常明显</li><li>② 复配了高浓度的的酵母菌发酵产物滤液<br>可以促进皮肤微生态平衡，抗炎、抗氧化、还能促进细胞新生，嫩肤。</li><li>③AA2G，作为高稳定性的 VC 衍生物（大牌常用成分）<br>通过抑制黑色素形成 还原已合成黑色素 实现安全且高效的提亮效果</li><li>④ 烟酰胺 美白提亮肤色</li><li>⑤ 柠檬酸 改善面部油脂平衡促进肌肤新陈代谢</li></ul>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>低成本-无线-VR解决方案</title>
      <link href="post/others/%E4%BD%8E%E6%88%90%E6%9C%AC-%E6%97%A0%E7%BA%BF-VR%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>post/others/%E4%BD%8E%E6%88%90%E6%9C%AC-%E6%97%A0%E7%BA%BF-VR%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:10:31 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\others\低成本-无线-VR解决方案.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E8%BF%99%E6%98%AF%E5%95%A5%E5%AD%90">这是啥子?</a></li><li><a href="#%E9%9C%80%E6%B1%82%E8%A1%A8">需求表</a></li><li><a href="#%E8%BF%9E%E6%8E%A5%E5%B1%8F%E5%B9%95">连接屏幕</a></li><li><a href="#%E8%AE%BE%E7%BD%AE%E8%A7%86%E9%A2%91">设置视频</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="这是啥子"><a href="#这是啥子" class="headerlink" title="这是啥子?"></a>这是啥子?</h1><ul><li>这是一篇关于如何低成本满足 <code>VR 观影</code>体验的 <code>介绍/推荐</code> 方案教程.</li></ul><hr><h1 id="需求表"><a href="#需求表" class="headerlink" title="需求表"></a>需求表</h1><ul><li><p>硬件: 手机,电脑,VR 眼镜 (网购几十元的放手机的那种)</p></li><li><p>软件: spacedesk(手机和电脑都要安装),potplayer(或者其他有 VR/3D 功能的播放器也行)</p><blockquote><p><a href="https://spacedesk.net/">spacedesk 官网</a></p></blockquote><blockquote><p><a href="https://potplayer.daum.net/">potplayer 官网</a></p></blockquote></li><li><p>这里插一句,其实不用电脑也行,手机上有些 app 支持 VR 播放功能,直接把电影传到手机上开 VR 播放更简单.</p></li></ul><hr><h1 id="连接屏幕"><a href="#连接屏幕" class="headerlink" title="连接屏幕"></a>连接屏幕</h1><ul><li><p>安装完 spacedesk<code>必须重启</code>才能用手机扫描到并连接上 (注意电脑和手机需要在同一网络环境下才能扫描到)</p></li><li><p>一般情况不需要找电脑内网 IP 地址,手机可以自动扫描到,连接后可以有如下四种选择</p><ul><li>按<code>Fn + F8</code>进入投影,也可以在右下角通知中心找到</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210313183255.png" alt="20210313183255" /><ul><li><code>推荐</code>用第二个”复制”,第三个”扩展”有可能会花屏</li></ul></li></ul><hr><h1 id="设置视频"><a href="#设置视频" class="headerlink" title="设置视频"></a>设置视频</h1><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210313183727.png" alt="20210313183727" /><ul><li>然后没了,带上眼镜看就对了.</li></ul>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐 </tag>
            
            <tag> VR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>💧摄影方面的细节收集.</title>
      <link href="post/design/%E6%91%84%E5%BD%B1/"/>
      <url>post/design/%E6%91%84%E5%BD%B1/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-13 18:10:57 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\design\摄影.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%85%89%E5%BD%B1">光影</a></li><li><a href="#%E8%A7%92%E5%BA%A6">角度</a><ul><li><a href="#%E4%BB%B0%E8%A7%92">仰角</a></li><li><a href="#%E6%88%91%E6%83%B3%E8%81%8A%E8%81%8A%E7%9A%84">我想聊聊的:</a></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="光影"><a href="#光影" class="headerlink" title="光影"></a>光影</h1><blockquote><p><a href="https://www.bilibili.com/video/BV18J411B7or">当一部电影少了灯光师会变成什么样？是时候让国内导演看看了</a></p></blockquote><blockquote><p>人眼本能就是第一眼看明暗对比最强烈的地方，紧跟着注意力放松，关注点逐渐往暗面涣散，被暗面中隐约的细节吸引。不使用任何一种构图法的情况下，优秀的灯光布置可以独立完成视觉引导的工作，对画面最终的展示效果大大增色。所有视觉设计相关的工作都能从学习灯光中获得裨益。​</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="角度"><a href="#角度" class="headerlink" title="角度"></a>角度</h1><h2 id="仰角"><a href="#仰角" class="headerlink" title="仰角"></a>仰角</h2><blockquote><p>首先感谢摄影作者及搬运 up 的分享,图片左上角有 up 的名字.</p></blockquote><ul><li><p>拍摄人物时结合<code>仰角+宽镜头+一定距离</code>更能凸显出<code>人与景的融合</code></p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/Screenshot_20210313_171420_tv.danmaku.bili.jpg" alt="Screenshot_20210313_171420_tv.danmaku.bili" /><ul><li>给人以宏大的观感</li></ul><hr></li><li><p>另外还有有一张</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/Screenshot_20210313_171408_tv.danmaku.bili.jpg" alt="Screenshot_20210313_171408_tv.danmaku.bili" /><ul><li>这种照片国内并不是很流行,感觉国内一些摄影方式过于局限在<code>人</code>身上,宽泛却只包括<code>表情,动作</code>,而对于取景这方面没下太大功夫,这种有点<code>非主流</code>的摄影方式确实更能让人眼前一亮.</li></ul><hr></li><li><p>最后一张</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/Screenshot_20210313_171427_tv.danmaku.bili.jpg" alt="Screenshot_20210313_171427_tv.danmaku.bili" /><ul><li><p>正如:<code>画自会说话</code>,一句;</p></li><li><p>也贴合另外一句:<code>一千个人看这个照片有一千种感受</code>,看到这个画面感受挺多,但说不出开具体是哪一种.</p></li><li><p>语文老师常说的: <code>融情于景</code></p></li></ul></li></ul><hr><h2 id="我想聊聊的"><a href="#我想聊聊的" class="headerlink" title="我想聊聊的:"></a>我想聊聊的:</h2><ul><li><p>我个人对国内大部分婚纱摄影(也不单单指婚纱摄影方面)不是很满意,不过想也自然,结婚方对此不是很感冒,婚办方也只想拿钱走人,于是衍生出了如今这种<code>半自动式婚纱摄影</code></p></li><li><p>我所向往的婚纱照,是两人最美好时刻的<code>时间刻印</code>,而非像是<code>任务打关</code>一样在摄影馆一进一出….</p><hr></li><li><p>具体而言,我个人对<code>华丽的西装裙摆,豪华的别墅房车,贵族样得风情庭院</code>,这种土老帽一样的 <code>scene</code> 有些抗拒 🤔</p><ul><li>来个例子(网图),这里打了马赛克了,对人物并无恶意,单单评价摄影方式</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210313180119.png" alt="20210313180119" /><ul><li><p>一是,它真的不好看,还不如一件<code>白丝袜</code>让我鼻血来的刺激 (当然可能大部分女方向往这种的,我不是女生,没经验 🤣)</p></li><li><p>二是,它真的无法把<code>感情融入</code>相片里.你仔细瞅瞅周围亲戚们拍相片时的表情 (是不是略带僵硬?)</p></li><li><p>三是,它真的很难勾魂.谁看到自己的婚纱照会说”我还想再跟你去一次?”</p></li></ul><hr></li><li><p>所以,个人比较倾向的是 <code>双人游拍</code></p><ul><li><p><code>没有人比另一半更能发掘你的美</code> (别说不能 😂)</p></li><li><p>毕竟也不可能请一位摄影师天天守着拍两人秀恩爱的画面</p></li><li><p>最后,我想把对<code>她和景色</code> 的感情,掺杂进镜头,即使是演的,也要演的两人都信以为真,容不得第三人插足此时此刻此情此景.</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计 </tag>
            
            <tag> 摄影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🚀进修MySQL~(贰)</title>
      <link href="post/Java/MySQL/2/"/>
      <url>post/Java/MySQL/2/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-19 00:13:28 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\MySQL\2.md * @Description: * @!: *********************************************************************--><ul><li><a href="#dql-%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2">DQL-数据查询</a><ul><li><a href="#%E6%80%BB%E8%A7%88">总览</a></li><li><a href="#select">SELECT</a></li><li><a href="#%E5%8E%BB%E9%87%8D-distinct">去重 DISTINCT</a></li><li><a href="#%E5%AF%B9%E5%88%97%E4%BD%BF%E7%94%A8%E8%A1%A8%E8%BE%BE%E5%BC%8F">对列使用表达式</a></li><li><a href="#where">where</a></li><li><a href="#%E8%81%94%E8%A1%A8%E6%9F%A5%E8%AF%A2">联表查询</a></li><li><a href="#%E8%87%AA%E8%BF%9E%E6%8E%A5">自连接</a></li><li><a href="#%E6%8E%92%E5%BA%8F">排序</a></li><li><a href="#%E5%88%86%E9%A1%B5">分页</a></li><li><a href="#%E5%AD%90%E6%9F%A5%E8%AF%A2">子查询</a><br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></li></ul></li></ul><h1 id="DQL-数据查询"><a href="#DQL-数据查询" class="headerlink" title="DQL-数据查询"></a>DQL-数据查询</h1><h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><ul><li><p>语句顺序不能变</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210316194554.png" alt="20210316194554" /></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> [<span class="keyword">ALL</span> | <span class="keyword">DISTINCT</span>]</span><br><span class="line">&#123;* | table.* | [table.field1[<span class="keyword">as</span> alias1][,table.field2[<span class="keyword">as</span> alias2]][,...]]&#125;</span><br><span class="line"><span class="keyword">FROM</span> table_name [<span class="keyword">as</span> table_alias]</span><br><span class="line">  [<span class="keyword">left</span> | <span class="keyword">right</span> | <span class="keyword">inner</span> <span class="keyword">join</span> table_name2]  <span class="comment">-- 联合查询</span></span><br><span class="line">  [<span class="keyword">WHERE</span> ...]  <span class="comment">-- 指定结果需满足的条件</span></span><br><span class="line">  [<span class="keyword">GROUP</span> <span class="keyword">BY</span> ...]  <span class="comment">-- 指定结果按照哪几个字段来分组</span></span><br><span class="line">  [<span class="keyword">HAVING</span>]  <span class="comment">-- 过滤分组的记录必须满足的次要条件</span></span><br><span class="line">  [<span class="keyword">ORDER</span> <span class="keyword">BY</span> ...]  <span class="comment">-- 指定查询记录按一个或多个条件排序</span></span><br><span class="line">  [<span class="keyword">LIMIT</span> &#123;[<span class="keyword">offset</span>,]<span class="keyword">row_count</span> | row_countOFFSET <span class="keyword">offset</span>&#125;]; <span class="comment">-- 指定查询的记录从哪条至哪条</span></span><br></pre></td></tr></table></figure><hr><h2 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h2><blockquote><p>SELECT 列名 [AS 显示列名] FROM 表名 [AS 显示表名];</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询所有学生信息</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询指定列</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentid,</span><br><span class="line">  studentname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 这里是为列取别名(as关键词可以省略)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentid <span class="keyword">AS</span> <span class="string">`学 号`</span>,</span><br><span class="line">  studentname <span class="string">`姓 名`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- as也可以为表取别名(并不会显示出来)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentid <span class="keyword">AS</span> <span class="string">`学 号`</span>,</span><br><span class="line">  studentname <span class="keyword">AS</span> <span class="string">`姓 名`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student <span class="keyword">AS</span> <span class="string">`表`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 通过CONCAT()函数拼接字符串</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">CONCAT</span>(<span class="string">&#x27;姓名: &#x27;</span>, studentname) <span class="keyword">AS</span> <span class="string">`拼接后的名字`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student;</span><br></pre></td></tr></table></figure><h2 id="去重-DISTINCT"><a href="#去重-DISTINCT" class="headerlink" title="去重 DISTINCT"></a>去重 DISTINCT</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> * <span class="keyword">FROM</span> student</span><br></pre></td></tr></table></figure><hr><h2 id="对列使用表达式"><a href="#对列使用表达式" class="headerlink" title="对列使用表达式"></a>对列使用表达式</h2><ul><li>数据库中的表达式 : 一般由文本值 , 列值 , NULL , 函数和操作符等组成</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询自增步长</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  @@auto_increment_increment;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询版本号</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">VERSION</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 表达式</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="number">100</span> * <span class="number">3</span> <span class="number">-1</span> <span class="keyword">AS</span> <span class="string">`结果`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 学员考试成绩集体提分一分查看</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentid,</span><br><span class="line">  gradeid + <span class="number">1</span> <span class="keyword">AS</span> <span class="string">&#x27;升级后&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student;</span><br></pre></td></tr></table></figure><hr><h2 id="where"><a href="#where" class="headerlink" title="where"></a>where</h2><blockquote><p>表达式结果必须是 <code>布尔值</code></p></blockquote><ul><li><p>逻辑操作符</p><ul><li>AND &amp;&amp;</li><li>OR ||</li><li>NOT !</li></ul><hr><ul><li><p>例子</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 满足条件的查询</span></span><br><span class="line"><span class="keyword">SELECT</span> Studentno,StudentResult <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询考试成绩在95-100之间的</span></span><br><span class="line"><span class="keyword">SELECT</span> Studentno,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> StudentResult&gt;=<span class="number">95</span> &amp;&amp; StudentResult&lt;=<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 模糊查询</span></span><br><span class="line"><span class="keyword">SELECT</span> Studentno,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> StudentResult <span class="keyword">BETWEEN</span> <span class="number">95</span> <span class="keyword">AND</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 除了1000号同学,要其他同学的成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> studentno,studentresult</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> studentno!=<span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用NOT</span></span><br><span class="line"><span class="keyword">SELECT</span> studentno,studentresult</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> ! studentno=<span class="number">1000</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><ul><li><p>模糊查询</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210312120236.png" alt="20210312120236" /><ul><li><p>例子</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- LIKE like结合使用的通配符:  % (代表0到任意个字符)   _ (一个字符)</span></span><br><span class="line"><span class="comment">-- =============================================</span></span><br><span class="line"><span class="comment">-- 查询姓刘的同学的学号及姓名</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentno,</span><br><span class="line">  studentname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  studentname <span class="keyword">LIKE</span> <span class="string">&#x27;刘%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓刘的同学,后面只有一个字的</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentno,</span><br><span class="line">  studentname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  studentname <span class="keyword">LIKE</span> <span class="string">&#x27;刘_&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓刘的同学,后面只有两个字的</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentno,</span><br><span class="line">  studentname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  studentname <span class="keyword">LIKE</span> <span class="string">&#x27;刘__&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓名中含有 &#x27;嘉&#x27; 字的</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentno,</span><br><span class="line">  studentname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  studentname <span class="keyword">LIKE</span> <span class="string">&#x27;%嘉%&#x27;</span>;</span><br><span class="line"><span class="comment">-- 查询姓名中含有特殊字符的需要使用转义符号 &#x27;\&#x27;</span></span><br><span class="line">  <span class="comment">-- 自定义转义符关键字: ESCAPE &#x27;:&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- IN</span></span><br><span class="line"><span class="comment">-- =============================================</span></span><br><span class="line"><span class="comment">-- 查询学号为1000,1001,1002的学生姓名</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentno,</span><br><span class="line">  studentname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  studentno <span class="keyword">IN</span> (<span class="number">1000</span>, <span class="number">1001</span>, <span class="number">1002</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询地址在北京,南京,河南洛阳的学生</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentno,</span><br><span class="line">  studentname,</span><br><span class="line">  address</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  address <span class="keyword">IN</span> (<span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;南京&#x27;</span>, <span class="string">&#x27;河南洛阳&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 对NULL判断 不能直接写=NULL, 用 is null</span></span><br><span class="line"><span class="comment">-- =============================================</span></span><br><span class="line"><span class="comment">-- 查询出生日期没有填写的同学</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  BornDate <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询出生日期填写的同学</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  BornDate <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询没有写家庭住址的同学</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  Address = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">OR</span> Address <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><h2 id="联表查询"><a href="#联表查询" class="headerlink" title="联表查询"></a>联表查询</h2><ul><li><p>七种 SQL joins</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210313224946.png" alt="20210313224946" /><ul><li><p>共有四种操作符 <code>inner,full outer,left,right</code></p></li><li><p>ON 后面跟的是 A 表与 B 表数据交叉列,是 join 成立的条件.</p></li></ul><hr></li><li><p>例子</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- student和result表中都有studentno,如不指定select那个表中的,会报错&quot;不明确&quot;</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  s.studentno,</span><br><span class="line">  studentname,</span><br><span class="line">  subjectno,</span><br><span class="line">  StudentResult</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student s</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r <span class="keyword">ON</span> r.studentno = s.studentno</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 右连接</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  s.studentno,</span><br><span class="line">  studentname,</span><br><span class="line">  subjectno,</span><br><span class="line">  StudentResult</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student s</span><br><span class="line">  <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r <span class="keyword">ON</span> r.studentno = s.studentno</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 等值连接</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  s.studentno,</span><br><span class="line">  studentname,</span><br><span class="line">  subjectno,</span><br><span class="line">  StudentResult</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student s,</span><br><span class="line">  <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  r.studentno = s.studentno</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 左连接 (查询了所有同学,不考试的也会查出来)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  s.studentno,</span><br><span class="line">  studentname,</span><br><span class="line">  subjectno,</span><br><span class="line">  StudentResult</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student s</span><br><span class="line">  <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r <span class="keyword">ON</span> r.studentno = s.studentno</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查一下缺考的同学(左连接应用场景)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  s.studentno,</span><br><span class="line">  studentname,</span><br><span class="line">  subjectno,</span><br><span class="line">  StudentResult</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student s</span><br><span class="line">  <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r <span class="keyword">ON</span> r.studentno = s.studentno</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  StudentResult <span class="keyword">IS</span> <span class="literal">NULL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询参加了考试的同学信息(学号,学生姓名,科目名,分数)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  s.studentno,</span><br><span class="line">  studentname,</span><br><span class="line">  subjectname,</span><br><span class="line">  StudentResult</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  <span class="string">`student`</span> s</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`result`</span> r <span class="keyword">ON</span> r.studentno = s.studentno</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> sub <span class="keyword">ON</span> sub.subjectno = r.subjectno</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h2><ul><li><p>把一张表视作两张表,然后把<code>同一列</code>的不同数据筛选开<code>作为两列</code>输出</p></li><li><p>初始化数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建一个表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`category`</span> (</span><br><span class="line">  <span class="string">`categoryid`</span> <span class="built_in">INT</span>(<span class="number">10</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">&#x27;主题id&#x27;</span>,</span><br><span class="line">  <span class="string">`pid`</span> <span class="built_in">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;父id&#x27;</span>,</span><br><span class="line">  <span class="string">`categoryName`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;主题名字&#x27;</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`categoryid`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">INNODB</span> AUTO_INCREMENT = <span class="number">9</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span></span><br><span class="line">  <span class="string">`category`</span> (<span class="string">`categoryid`</span>, <span class="string">`pid`</span>, <span class="string">`categoryName`</span>)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;信息技术&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;软件开发&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;数据库&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;美术设计&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;web开发&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;ps技术&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;办公信息&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>select 例子</p><ul><li>把同一张表中 categoryName 这一列 select 出父栏目和子栏目两列数据输出</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  a.categoryName <span class="keyword">AS</span> <span class="string">&#x27;父栏目&#x27;</span>,</span><br><span class="line">  b.categoryName <span class="keyword">AS</span> <span class="string">&#x27;子栏目&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  <span class="keyword">category</span> <span class="keyword">AS</span> a,</span><br><span class="line">  <span class="keyword">category</span> <span class="keyword">AS</span> b</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  a.<span class="string">`categoryid`</span> = b.<span class="string">`pid`</span>;</span><br></pre></td></tr></table></figure></li><li><p>输出</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210315112316.png" alt="20210315112316" /></li><li><p>其他样例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 思考题:查询参加了考试的同学信息(学号,学生姓名,科目名,分数)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  s.studentno,</span><br><span class="line">  studentname,</span><br><span class="line">  subjectname,</span><br><span class="line">  StudentResult</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student s</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r <span class="keyword">ON</span> r.studentno = s.studentno</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> sub <span class="keyword">ON</span> sub.subjectno = r.subjectno;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学员及所属的年级(学号,学生姓名,年级名)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentno <span class="keyword">AS</span> 学 号,</span><br><span class="line">  studentname <span class="keyword">AS</span> 学 生 姓 名,</span><br><span class="line">  gradename <span class="keyword">AS</span> 年 级 名 称</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student s</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> grade g <span class="keyword">ON</span> s.<span class="string">`GradeId`</span> = g.<span class="string">`GradeID`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询科目及所属的年级(科目名称,年级名称)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  subjectname <span class="keyword">AS</span> 科 目 名 称,</span><br><span class="line">  gradename <span class="keyword">AS</span> 年 级 名 称</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  SUBJECT sub</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> grade g <span class="keyword">ON</span> sub.gradeid = g.gradeid;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询 数据库结构-1 的所有考试结果(学号 学生姓名 科目名称 成绩)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  s.studentno,</span><br><span class="line">  studentname,</span><br><span class="line">  subjectname,</span><br><span class="line">  StudentResult</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student s</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r <span class="keyword">ON</span> r.studentno = s.studentno</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> sub <span class="keyword">ON</span> r.subjectno = sub.subjectno</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  subjectname = <span class="string">&#x27;数据库结构-1&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><blockquote><p>ORDER BY 列名 ASC/DESC(升序/降)</p></blockquote><ul><li><p>例子</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 按成绩降序排序</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  s.studentno,</span><br><span class="line">  studentname,</span><br><span class="line">  subjectname,</span><br><span class="line">  StudentResult</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student s</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r <span class="keyword">ON</span> r.studentno = s.studentno</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> sub <span class="keyword">ON</span> r.subjectno = sub.subjectno</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  subjectname = <span class="string">&#x27;数据库结构-1&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  StudentResult <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h2><blockquote><p>LIMIT n,m</p></blockquote><ul><li><p>含义</p><ul><li><p>从第 n 条开始显示</p></li><li><p>每页显示 m 条数</p></li></ul><hr></li><li><p>比如需要每页显示 10 条数据,当前要看第一页</p><ul><li><p><code>LIMIT 0,10</code></p></li><li><p>第 n 页数据就是 <code>LIMIT 10(n-1),10</code></p></li></ul><hr></li><li><p>例子</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 每页显示5条数据</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  s.studentno,</span><br><span class="line">  studentname,</span><br><span class="line">  subjectname,</span><br><span class="line">  StudentResult</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student s</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r <span class="keyword">ON</span> r.studentno = s.studentno</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> sub <span class="keyword">ON</span> r.subjectno = sub.subjectno</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  subjectname = <span class="string">&#x27;数据库结构-1&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  StudentResult <span class="keyword">DESC</span>,</span><br><span class="line">  studentno</span><br><span class="line"><span class="keyword">LIMIT</span></span><br><span class="line">  <span class="number">0</span>, <span class="number">5</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询 JAVA第一学年 课程成绩前10名并且分数大于80的学生信息(学号,姓名,课程名,分数)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  s.studentno,</span><br><span class="line">  studentname,</span><br><span class="line">  subjectname,</span><br><span class="line">  StudentResult</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  student s</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r <span class="keyword">ON</span> r.studentno = s.studentno</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> sub <span class="keyword">ON</span> r.subjectno = sub.subjectno</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  subjectname = <span class="string">&#x27;JAVA第一学年&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  StudentResult <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span></span><br><span class="line">  <span class="number">0</span>, <span class="number">10</span>;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><p>查询语句中 where 中嵌套查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询 数据库结构-1 的考试结果(学号,科目编号,成绩),并且成绩降序排列</span></span><br><span class="line"><span class="comment">-- 方法一:使用连接查询</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentno,</span><br><span class="line">  r.subjectno,</span><br><span class="line">  StudentResult</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  <span class="keyword">result</span> r</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> sub <span class="keyword">ON</span> r.<span class="string">`SubjectNo`</span> = sub.<span class="string">`SubjectNo`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  subjectname = <span class="string">&#x27;数据库结构-1&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  studentresult <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方法二:使用子查询(执行顺序:由里及外)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  studentno,</span><br><span class="line">  subjectno,</span><br><span class="line">  StudentResult</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  subjectno =(</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">      subjectno</span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">      <span class="string">`subject`</span></span><br><span class="line">    <span class="keyword">WHERE</span></span><br><span class="line">      subjectname = <span class="string">&#x27;数据库结构-1&#x27;</span></span><br><span class="line">  )</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  studentresult <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 笔记 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🎇深入解析Window环境变量.</title>
      <link href="post/system/%E6%B7%B1%E5%85%A5%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
      <url>post/system/%E6%B7%B1%E5%85%A5%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-08 00:19:54 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\system\深入环境变量.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%8F%82%E7%85%A7">参照</a></li><li><a href="#%E5%90%AB%E4%B9%89">含义</a></li><li><a href="#%E7%B3%BB%E7%BB%9F%E7%94%A8%E6%88%B7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">系统/用户环境变量</a></li><li><a href="#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%B8%8E-path">环境变量与 Path</a></li><li><a href="#%E4%B8%BE%E4%BE%8B">举例</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h1><blockquote><p>无参照</p></blockquote><hr><h1 id="含义"><a href="#含义" class="headerlink" title="含义"></a>含义</h1><ul><li><p>理解含义很大程度上就能明白自己到底错在哪里,有些问题靠百度很难搜出来,但是真正解决需要的时间可能<code>远小于百度搜的时间</code></p></li><li><p>Windows 系统上一般使用的终端 console 是 cmd(虽然很辣鸡但还是得用它)</p><ul><li><p>这个终端可以直接调用启动<code>.cmd</code>/<code>.bat</code>/<code>.exe</code>这种后缀名的文件</p><ul><li>(你可以在你配置的语言\bin\目录下轻易找到 XXX.exe 等等这种文件)</li></ul></li><li><p>如果不输入这种文件的具体路径,终端没法找到这个文件到底在哪里</p></li><li><p>于是环境变量就相当于在 cmd 上登了记,不写路径直接写名字就能启动,比如环境变量设置为<code>你的JDK\bin\</code>,然后在 cmd 输入<code>java</code>,cmd 就是去找这个目录下有没有<code>java.exe</code>这种文件,有的话,你就配置成功了!</p></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="系统-用户环境变量"><a href="#系统-用户环境变量" class="headerlink" title="系统/用户环境变量"></a>系统/用户环境变量</h1><ul><li><p>这个区别在于你的电脑是否是<code>多用户</code></p><ul><li>如果你在用户环境变量配置好了编程环境,那么在 Windows 的另一个用户上无效</li></ul></li><li><p>所以,看个人选择,一般来说是在<code>用户区</code>添加.</p><ul><li>系统环境变量配置好之后需要<code>重启电脑生效</code>.</li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="环境变量与-Path"><a href="#环境变量与-Path" class="headerlink" title="环境变量与 Path"></a>环境变量与 Path</h1><ul><li>这个是引用关系,比如 Path 里面的<code>%JAVA_HOME%</code>会引用名为<code>JAVA_HOME</code>的环境变量值</li><li>Path 里面从上到下为优先级,上面的优先级高.</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h1><ul><li><p>这是华为的 DevEco,安装时会询问是否添加至环境变量,那,添加到环境变量有什么用呢?</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210307160552.png" alt="20210307160552" /></li><li><p>比如我安装了 VScode,并把 vscode 安装目录它添加环境变量,我们打开一个终端</p><ul><li><p>终端打开的路径是 <code>D:\Desktop\</code> ,在这里执行<code>code</code> 指令,终端首先去找 <code>D:\Desktop\</code> 这个目录下有没有叫 <code>Code</code>的程序,没有的话再去环境变量的路径找,直到找到箭头所指的 VScode 程序本体</p></li><li><p>命令后面可以跟一些参数,比如<code>code .</code>就是让 VScode 打开当前路径(就是划红线的<code>D:\Desktop\</code>)</p></li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210307161139.png" alt="20210307161139" /></li></ul>]]></content>
      
      
      <categories>
          
          <category> system </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机系统 </tag>
            
            <tag> 环境变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🤷‍♂️进程,线程,CPU核心,并行,并发大杂碎!</title>
      <link href="post/system/process-thread/"/>
      <url>post/system/process-thread/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-06 00:30:57 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\system\process-thread.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%BC%95%E5%AD%90">引子</a></li><li><a href="#%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B">进程与线程</a><ul><li><a href="#%E8%BF%9B%E7%A8%8B">进程</a></li><li><a href="#%E7%BA%BF%E7%A8%8B">线程</a></li></ul></li><li><a href="#%E5%87%A0%E6%A0%B8%E5%87%A0%E7%BA%BF%E7%A8%8B">几核几线程</a></li><li><a href="#%E5%B9%B6%E8%A1%8C%E4%B8%8E%E5%B9%B6%E5%8F%91">并行与并发</a></li><li><a href="#%E5%8F%82%E7%85%A7%E6%8E%A8%E8%8D%90%E9%98%85%E8%AF%BB">参照&amp;推荐阅读</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h1><ul><li>谈操作系统会了解到<code>进程与线程</code></li><li>谈 CPU 会听到<code>几核几线程</code></li><li>谈 CPU 调度会存疑<code>并行与并发</code></li></ul><hr><h1 id="进程与线程"><a href="#进程与线程" class="headerlink" title="进程与线程"></a>进程与线程</h1><ul><li>简单层级关系: <code>应用程序-&gt;一至多个进程-&gt;一至多个线程</code></li></ul><blockquote><p>线程是调度的基本单位，而进程则是资源拥有的基本单位。</p></blockquote><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210305222645.png" alt="20210305222645" /><hr><ul><li><p>在前台显示的(有图形窗口的)程序,叫做<code>&quot;应用&quot;</code></p><ul><li>比如 IDEA,酷狗,Edge,QQ 这些都是应用.</li><li>同一个程序,打开多个窗口,其产生的进程也会被归到一个应用下<ul><li>比如打开两个 VScode 窗口,其产生的新进程也会列在 VScode 栏下,并不会出现两个 VScode 栏</li><li>另外,新建窗口不一定会产生新进程(比如打开两个 IDEA 窗口,IDEA 栏下的进程数没变)</li></ul></li><li>关闭窗口后,应用要么被全然关闭,要么转入后台进程<ul><li>就比如 QQ 可以选择整个关掉或者后台挂着,后台挂着时 QQ 不会在<code>&quot;应用&quot;</code>列表出现,会被归到后台进程</li></ul></li></ul><hr></li><li><p>每个应用会有一个至多个进程</p><ul><li>至少有一个<code>&quot;应用&quot;</code>进程和若干<code>&quot;后台进程&quot;</code>.</li><li>比如 IDEA 下面的一排,六个进程</li><li>一个进程 = <code>.exe</code>之类的可执行文件 + 运行时数据<ul><li>也就是说同一个程序运行在不同数据环境下会产生不同进程(比如 IDEA 下的两个 TabNine 进程)</li></ul></li></ul><hr></li><li><p>不同进程之间数据隔离</p><ul><li>也就是说一个进程挂掉只影响这个进程,对其他进程无影响</li><li>比如浏览器,<code>一个页面就是一个进程</code>(如果两个页面相同会共享同一进程),脚本插件另行计算,一个页面崩溃一般只影响这个页面.</li></ul><hr></li><li><p>后台进程</p><ul><li>现在我们可以理解没有界面的程序运行时肯定会被归到<code>后台进程</code><ul><li>比如 <code>aria2c.exe</code>,没有界面,只可能出现在后台进程.</li></ul></li><li>但是,有些程序会<code>两面吃</code>,比如 vscode 运行时,<code>&quot;应用&quot;</code>栏有它,<code>后台进程</code>栏也有它!<ul><li>“应用”栏会归并对当前程序窗口有影响的进程,没影响的叫做<code>&quot;守护进程&quot;</code></li><li>也就是说这些后台进程有他们的作用,但是这作用并不依赖于程序运行(比如说发光发热,对程序没影响,但这个进程有它存在的意义),它们就被归到<code>后台进程</code>去了.</li></ul></li></ul></li></ul><hr><h2 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h2><ul><li><p>轮到线程了:</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210305231739.png" alt="20210305231739" /></li><li><p>这个比较简单了,线程是进程内部的,如上图两个 aria2c 进程中,分别有一个和三个线程</p></li><li><p>一个进程至少一个线程.</p><ul><li><p>不同线程之间共享同一个进程内的资源.</p></li><li><p>一个线程崩溃会牵连所有,整个进程会崩溃.</p></li></ul><hr></li><li><p>多线程主要为了<code>提升性能</code></p><ul><li><p>比如一个进程只有一个线程,那它只能同时靠一个 CPU 逻辑处理器处理</p></li><li><p>如果是多线程,比如 9 个线程,那么在 8 个逻辑处理器的 CPU 上,这个进程可以占有 8 个逻辑处理器的算力,提升运行速度</p></li></ul></li><li><p>如果线程数大于 CPU 逻辑处理器数,其他的线程排队等待.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="几核几线程"><a href="#几核几线程" class="headerlink" title="几核几线程"></a>几核几线程</h1><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210305210405.png" alt="20210305210405" /><ul><li><p>如上图,一个插槽对应一块结结实实的 CPU</p><ul><li><p>这块 CPU 里面被划分出四个隔离的核心 -&gt; <code>四核</code></p></li><li><p>每个核心,又可以分为两个逻辑处理器,一个逻辑处理器只能同时处理一个任务(线程) -&gt; <code>八线程</code></p></li><li><p>上面八个线形图就是每个逻辑处理器的使用率</p></li></ul><hr></li><li><p>运行速度标的是每个核心(core)而非逻辑处理器(processor)的速度</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="并行与并发"><a href="#并行与并发" class="headerlink" title="并行与并发"></a>并行与并发</h1><ul><li><p>实际上,网上对这两个词义一定程度上在混用~</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210306000528.png" alt="20210306000528" /></li><li><p>有个词叫<code>&quot;并行不悖&quot;</code>,记住这个就不会弄混了.</p></li><li><p><code>多进程并发,多线程并行.</code></p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="参照-amp-推荐阅读"><a href="#参照-amp-推荐阅读" class="headerlink" title="参照&amp;推荐阅读"></a>参照&amp;推荐阅读</h1><blockquote><p><a href="https://mp.weixin.qq.com/s?__biz=Mzk0NzE4NTk4Ng==&mid=2247486625&idx=1&sn=f35d340727b0e8e23f82ff7c5182c893&chksm=c37bfc8cf40c759a084effb4c5b253ad50ad0be02b8b8dea073fa333ca6adefce6ef8cb6db9f&mpshare=1&scene=23&srcid=0305mrfN5sGJ1jI9aPxUFqjU&sharer_sharetime=1614936389002&sharer_shareid=ff6bb8cfd138294e80df076b8b76232d#rd">进程和线程基础知识全家桶，30 张图一套带走</a></p></blockquote><blockquote><p><a href="https://blog.csdn.net/cherrycheng_/article/details/51384657">基础知识：线程，进程。多进程，多线程。并发，并行的区别</a></p></blockquote><blockquote><p><a href="https://zhuanlan.zhihu.com/p/86855590">cpu 核心数与线程数</a></p></blockquote><blockquote><p><a href="https://blog.51cto.com/14462329/2427415">为什么 Chrome 在任务管理器里有 4 个进程？</a></p></blockquote><blockquote><p><a href="https://blog.csdn.net/a3192048/article/details/82085422?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_baidulandingword-1&spm=1001.2101.3001.4242">程序，进程，线程的区别和联系</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> system </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机系统 </tag>
            
            <tag> 多线程 </tag>
            
            <tag> 进程 </tag>
            
            <tag> CPU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🚀进修MySQL~(壹)</title>
      <link href="post/Java/MySQL/1/"/>
      <url>post/Java/MySQL/1/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-04-05 14:47:16 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\MySQL\1.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%8F%82%E8%80%83">参考</a></li><li><a href="#%E7%AE%80%E4%BB%8B">简介</a></li><li><a href="#%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE">安装&amp;配置</a><ul><li><a href="#%E5%AE%89%E8%A3%85">安装</a></li><li><a href="#%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81">设置密码</a></li><li><a href="#%E9%85%8D%E7%BD%AE">配置</a></li></ul></li><li><a href="#%E8%BF%9E%E6%8E%A5-mysql">连接 MySQL</a><ul><li><a href="#vscode">VScode</a></li><li><a href="#sqlyog">SQLyog</a></li><li><a href="#dbeaver">DBeaver</a></li><li><a href="#%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C">常用操作</a></li></ul></li><li><a href="#ddl-%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89">DDL-数据定义</a><ul><li><a href="#%E5%88%97%E7%B1%BB%E5%9E%8B">列类型</a><ul><li><a href="#%E6%95%B0%E5%80%BC">数值</a></li><li><a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2">字符串</a></li><li><a href="#%E6%97%A5%E6%9C%9F">日期</a></li><li><a href="#null-%E5%80%BC">NULL 值</a></li></ul></li><li><a href="#%E5%AD%97%E6%AE%B5%E5%B1%9E%E6%80%A7">字段属性</a><ul><li><a href="#%E9%98%BF%E9%87%8C%E8%A7%84%E8%8C%83">阿里规范</a></li></ul></li><li><a href="#%E6%95%B0%E6%8D%AE%E8%A1%A8">数据表</a><ul><li><a href="#%E8%A1%A8%E7%B1%BB%E5%9E%8B">表类型</a></li><li><a href="#%E5%AD%98%E6%94%BE%E4%BD%8D%E7%BD%AE">存放位置</a></li><li><a href="#%E7%BC%96%E7%A0%81">编码</a></li><li><a href="#%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E8%A1%A8">操作数据表</a></li></ul></li><li><a href="#%E6%96%B0%E5%BB%BA%E8%A1%A8-%E4%BE%8B%E5%AD%90">新建表-例子</a></li></ul></li><li><a href="#dml-%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C">DML-数据操作</a><ul><li><a href="#%E5%A4%96%E9%94%AE">外键</a></li><li><a href="#%E6%B7%BB%E5%8A%A0-insert">添加 INSERT</a></li><li><a href="#%E4%BF%AE%E6%94%B9-update">修改 UPDATE</a></li><li><a href="#%E5%88%A0%E9%99%A4-deletetruncate">删除 DELETE/TRUNCATE</a></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><p><a href="https://csp1999.blog.csdn.net/article/details/109526825?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6.control&dist_request_id=&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6.control">狂神说 MySQL 学习笔记</a></p></blockquote><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li><p><code>DB</code> 数据库 ( DataBase )</p><ul><li><p>关系型数据库 ( SQL ),比如 MySQL , Oracle , SQL Server , SQLite</p></li><li><p>非关系型数据库 ( NOSQL ),比如 Redis , MongoDB</p></li></ul><blockquote><p><a href="https://hellogithub.com/report/db-engines/">数据库排行榜</a></p></blockquote></li><li><p><code>DBA</code> 数据库管理员（Database Administrator)</p></li><li><p><code>DBMS</code> 数据库管理系统 ( DataBase Management System )</p></li><li><p>操作分类,对应下文的大标题</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210305104453.png" alt="20210305104453" /></li></ul><hr><h1 id="安装-amp-配置"><a href="#安装-amp-配置" class="headerlink" title="安装&amp;配置"></a>安装&amp;配置</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li><p>使用 scoop 安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install mysql</span><br></pre></td></tr></table></figure></li><li><p>然后注册系统服务</p><ul><li>(这条信息在安装后会提示,需要<code>在管理员模式</code>的命令行下执行)</li></ul><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --install MySQL --defaults-file=&quot;D:<span class="tag">\<span class="name">Game</span></span><span class="tag">\<span class="name">Scoop</span></span><span class="tag">\<span class="name">apps</span></span><span class="tag">\<span class="name">mysql</span></span><span class="tag">\<span class="name">current</span></span><span class="tag">\<span class="name">my</span></span>.ini&quot;</span><br></pre></td></tr></table></figure></li><li><p>然后<code>重启电脑</code>,MySQL 服务会自己跑起来.</p></li></ul><hr><h2 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h2><ul><li><p>(也可以不设置密码,跳过.)</p></li><li><p>在 <code>MySQL/bin/</code>下打开终端</p></li><li><p>进入 MySQL 管理</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysql</span> –u root –p</span><br></pre></td></tr></table></figure></li><li><p>更新密码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> mysql.<span class="keyword">user</span> <span class="keyword">set</span> authentication_string=<span class="keyword">password</span>(<span class="string">&#x27;2333&#x27;</span>) <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">&#x27;root&#x27;</span><span class="keyword">and</span> Host = <span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>刷新权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure></li><li><p>重启 MySQL 服务</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> stop mysql</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> mysql</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><blockquote><p>找到 <code>MySQL/my.ini</code> ,这是 MySQL 配置文件</p></blockquote><blockquote><p><a href="https://www.cnblogs.com/ray-xujianguo/p/3322455.html">MySQL 配置文件-my.ini</a></p></blockquote><ul><li><p>我的配置</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#[client]和[mysql]都是客户端,[mysqld]是服务端</span></span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">datadir</span>=D:/Game/Scoop/persist/mysql/data</span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"><span class="comment">#port=3306</span></span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">user</span>=root</span><br><span class="line"><span class="comment">#port=3306</span></span><br><span class="line"></span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure><blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></blockquote></li></ul><h1 id="连接-MySQL"><a href="#连接-MySQL" class="headerlink" title="连接 MySQL"></a>连接 MySQL</h1><h2 id="VScode"><a href="#VScode" class="headerlink" title="VScode"></a>VScode</h2><ul><li><p>VScode 连接,需要安装 SQL 扩展(随便选一个)</p></li><li><p>安装插件后只需要填写需要的信息,就可以连接上了.</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210304094732.png" alt="20210304094732" /></li></ul><hr><h2 id="SQLyog"><a href="#SQLyog" class="headerlink" title="SQLyog"></a>SQLyog</h2><ul><li><p>跟上面一样</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210304233850.png" alt="20210304233850" /></li></ul><hr><h2 id="DBeaver"><a href="#DBeaver" class="headerlink" title="DBeaver"></a>DBeaver</h2><ul><li><p>个人在后续学习中发现的数据库管理工具,比我用过的(包括 MYSQL workbench,IDEA,VScode,SQLYog) 都要好用,优点:</p><ul><li><p>社区版免费,没广告 (SQLYog 略带广告)</p></li><li><p>中文界面,很友好,操作手感好</p></li><li><p>有方便的 ER 图工具,这个<code>非常非常非常赞!!!</code></p></li><li><p>….不再赘述,建议用这个,如下图:</p></li></ul></li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210405144227.png" alt="20210405144227" /><hr><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> <span class="keyword">password</span>=<span class="keyword">password</span>(<span class="string">&#x27;123456&#x27;</span>)<span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">&#x27;root&#x27;</span>; <span class="comment">--修改密码</span></span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>; <span class="comment">--刷新数据库权限</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>; <span class="comment">--显示所有数据库</span></span><br><span class="line"><span class="keyword">use</span> dbname; <span class="comment">--打开某个数据库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> [<span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span>] 数据库名; <span class="comment">--创建数据库</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> [<span class="keyword">if</span> <span class="keyword">exists</span>] 数据库名; <span class="comment">--删除数据库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>; <span class="comment">--显示数据库 mysql 中所有的表</span></span><br><span class="line">desc user; <span class="comment">--显示表user 表的信息</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">name</span>; <span class="comment">--创建数据库</span></span><br><span class="line"><span class="keyword">use</span> databasename; <span class="comment">--选择数据库</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 单行注释</span></span><br><span class="line"><span class="comment">/* 多行注释 */</span></span><br></pre></td></tr></table></figure><ul><li><p>使用 SQLyog</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210305111225.png" alt="20210305111225" /><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210305111244.png" alt="20210305111244" /></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="DDL-数据定义"><a href="#DDL-数据定义" class="headerlink" title="DDL-数据定义"></a>DDL-数据定义</h1><h2 id="列类型"><a href="#列类型" class="headerlink" title="列类型"></a>列类型</h2><ul><li>标红的为常用的.</li></ul><h3 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h3><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210305115939.png" alt="20210305115939" /><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210305115957.png" alt="20210305115957" /><h3 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h3><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210305120011.png" alt="20210305120011" /><h3 id="NULL-值"><a href="#NULL-值" class="headerlink" title="NULL 值"></a>NULL 值</h3><ul><li>不要用 NULL 进行算术运算 , 结果仍为 NULL</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h2 id="字段属性"><a href="#字段属性" class="headerlink" title="字段属性"></a>字段属性</h2><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210305155250.png" alt="20210305155250" /><ul><li><p>UnSigned</p><ul><li>无符号的</li><li>声明该数据列不允许负数 .</li></ul></li><li><p>ZEROFILL</p><ul><li>0 填充的</li><li>不足位数的用 0 来填充 , 如 int(3),5 则为 005</li></ul></li><li><p>Auto_InCrement</p><ul><li>自动增长的 , 每添加一条数据 , 自动在上一个记录数上加 1(默认)</li><li>通常用于设置主键 , 且为整数类型</li><li>可定义起始值和步长,当前表设置步长(AUTO_INCREMENT=100) : 只影响当前表</li><li>SET @@auto_increment_increment=5 ; 影响所有使用自增的表(全局)</li></ul></li><li><p>NOT NULL</p><ul><li>默认为 NULL , 即没有插入该列的数值</li><li>如果设置为 NOT NULL , 则该列必须有值</li></ul></li><li><p>DEFAULT</p><ul><li>默认的,用于设置默认值</li><li>例如,性别字段,默认为”男” , 否则为 “女” ; 若无指定该列的值 , 则默认值为”男”的值</li></ul></li></ul><hr><h3 id="阿里规范"><a href="#阿里规范" class="headerlink" title="阿里规范"></a>阿里规范</h3><ul><li><p>每个表必须有的五个字段属性</p><ul><li>id 主键</li><li>version 乐观锁</li><li>is_delete 伪删除</li><li>gmt_create 创建时间</li><li>gmt_update 修改时间</li></ul></li></ul><hr><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h2 id="数据表"><a href="#数据表" class="headerlink" title="数据表"></a>数据表</h2><h3 id="表类型"><a href="#表类型" class="headerlink" title="表类型"></a>表类型</h3><blockquote><p><a href="https://www.cnblogs.com/EasonJim/p/7741164.html">MySQL 常用的七种表类型（转）</a></p></blockquote><ul><li><p>有十多种类型了,但常用的就两种:<code>MyISAM</code> 与 <code>InnoDB</code>,对比:</p><table><thead><tr><th align="center"></th><th>MyISAM</th><th>InnoDB</th></tr></thead><tbody><tr><td align="center">事务处理</td><td>不支持</td><td>支持</td></tr><tr><td align="center">数据行锁定</td><td>不支持</td><td>支持</td></tr><tr><td align="center">外键约束</td><td>不支持</td><td>支持</td></tr><tr><td align="center">全文索引</td><td>支持</td><td>不支持</td></tr><tr><td align="center">空间占用</td><td>较小</td><td>较大(约两倍)</td></tr></tbody></table><hr></li><li><p>适用场景:</p><ul><li>MyISAM : 节约空间及相应速度</li><li>InnoDB : 安全性 , 事务处理及多用户操作数据表</li></ul></li></ul><hr><h3 id="存放位置"><a href="#存放位置" class="headerlink" title="存放位置"></a>存放位置</h3><blockquote><p>Mysql 安装目录/data/对应表名/</p></blockquote><hr><h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><ul><li><p>默认是 Latin1 编码,不支持中文</p><ul><li>可以在 MySQL 配置文件中修改默认编码</li></ul></li><li><p>也可以在创建表时指定编码为 <code>utf8</code></p></li></ul><hr><h3 id="操作数据表"><a href="#操作数据表" class="headerlink" title="操作数据表"></a>操作数据表</h3><ul><li><p>修改表名</p><ul><li>ALTER TABLE 旧表名 RENAME AS 新表名</li></ul></li><li><p>删除数据表</p><ul><li>DROP TABLE [IF EXISTS] 表名</li></ul><hr></li><li><p>添加字段</p><ul><li>ALTER TABLE 表名 ADD 字段名 列属性[属性值]</li></ul></li><li><p>修改字段</p><ul><li><p>ALTER TABLE 表名 MODIFY 字段名 列类型[属性值]</p></li><li><p>ALTER TABLE 表名 CHANGE 旧字段名 新字段名 列属性[属性值]</p></li></ul></li><li><p>删除字段</p><ul><li>ALTER TABLE 表名 DROP 字段名</li></ul></li></ul><hr><h2 id="新建表-例子"><a href="#新建表-例子" class="headerlink" title="新建表-例子"></a>新建表-例子</h2><ul><li><p>板栗</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`student`</span>(</span><br><span class="line">  <span class="comment">-- CREATE TABLE [IF NOT EXISTS] `表名`(</span></span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> primary <span class="keyword">key</span> AUTO_INCREMENT <span class="keyword">comment</span> <span class="string">&#x27;primary key&#x27;</span>,</span><br><span class="line">  create_time DATETIME <span class="keyword">COMMENT</span> <span class="string">&#x27;create time&#x27;</span>,</span><br><span class="line">  update_time DATETIME <span class="keyword">COMMENT</span> <span class="string">&#x27;update time&#x27;</span>,</span><br><span class="line">  <span class="comment">-- `字段名` 列类型 [字段属性] [索引] [注释],</span></span><br><span class="line">  <span class="comment">-- `字段名` 列类型 [字段属性] [索引] [注释],</span></span><br><span class="line">  <span class="comment">-- `字段名` 列类型 [字段属性] [索引] [注释],</span></span><br><span class="line">) <span class="keyword">default</span> <span class="keyword">charset</span> utf8 <span class="keyword">comment</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="comment">-- ) [表类型] [字符集] [注释];</span></span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>举例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  创建一个school数据库-&gt;创建学生表(列,字段)</span></span><br><span class="line"><span class="comment">  学号int 登录密码varchar(20) 姓名,性别varchar(2),出生日期(datatime),家庭住址,email</span></span><br><span class="line"><span class="comment">  创建表之前 , 一定要先选择数据库</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="string">`school`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`stu_data`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">  <span class="string">`pwd`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  <span class="string">`sex`</span> <span class="built_in">varchar</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">  <span class="string">`birthday`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;生日&#x27;</span>,</span><br><span class="line">  <span class="string">`address`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;地址&#x27;</span>,</span><br><span class="line">  <span class="string">`email`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="DML-数据操作"><a href="#DML-数据操作" class="headerlink" title="DML-数据操作"></a>DML-数据操作</h1><h2 id="外键"><a href="#外键" class="headerlink" title="外键"></a>外键</h2><ul><li><p>一个表内的某<code>列</code>引用另外一个表中的一<code>列</code>,被引用的表是<code>主表</code>,引用的表是<code>从表</code>,从表通过建立列的索引来引用另一个表的索引,这个关系叫做外键.</p><ul><li><p>主表中被引用的列必须有索引(比如 PRIMARY,KEY 类型)</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210307123305.png" alt="20210307123305" /></li><li><p>在外键存在的情况下,主表无法被删除,主从表的关联索引也无法被删除,但可以修改(类型).</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210307124315.png" alt="20210307124315" /></li></ul><hr></li><li><p>建立方法</p><ol><li>创建两张表</li><li>主从表各创建一个索引(PRIMARY 或者 KEY 都可以)</li><li>把从表的索引约束到主表的索引上</li><li>外键建立成功!</li></ol><hr></li><li><p>代码形式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 年级表 (id,年级名称)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`grade`</span> (</span><br><span class="line">  <span class="string">`gradeid`</span> <span class="built_in">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">&#x27;年级ID&#x27;</span>,</span><br><span class="line">  <span class="string">`gradename`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;年级名称&#x27;</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`gradeid`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 学生信息表 (学号,姓名,性别,年级,手机,地址,出生日期,邮箱,身份证号)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`student`</span> (</span><br><span class="line">  <span class="string">`studentid`</span> <span class="built_in">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">  <span class="string">`studentname`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">  <span class="string">`sex`</span> <span class="built_in">TINYINT</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">  <span class="string">`gradeid`</span> <span class="built_in">INT</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;年级&#x27;</span>,</span><br><span class="line">  <span class="string">`phoneNum`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;手机&#x27;</span>,</span><br><span class="line">  <span class="string">`address`</span> <span class="built_in">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;地址&#x27;</span>,</span><br><span class="line">  <span class="string">`borndate`</span> DATETIME <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;生日&#x27;</span>,</span><br><span class="line">  <span class="string">`email`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">  <span class="string">`idCard`</span> <span class="built_in">VARCHAR</span>(<span class="number">18</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;身份证号&#x27;</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`studentid`</span>),</span><br><span class="line">  <span class="comment">-- 创 建 外 键 的 方 式 一: 创 建 子 表 同 时 创 建 外 键</span></span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`FK_gradeid`</span> (<span class="string">`gradeid`</span>), <span class="comment">-- 创建一个KEY类型的索引</span></span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`FK_gradeid`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`gradeid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`grade`</span> (<span class="string">`gradeid`</span>) <span class="comment">-- 把索引约束到主表索引</span></span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建外键方式二 : 创建子表完毕后,修改子表添加外键</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span></span><br><span class="line">  <span class="string">`student`</span></span><br><span class="line"><span class="keyword">ADD</span></span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`FK_gradeid`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`gradeid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`grade`</span> (<span class="string">`gradeid`</span>);</span><br></pre></td></tr></table></figure></li><li><p>以上是表的外键,不建议使用数据库级别的外键</p><ul><li><p>以后如需引用多表数据,常用程序实现</p></li><li><p>阿里规范:<code>不能使用外键和级联</code>,在 delete 或 update 时需要考虑外键因素,增加负担</p></li></ul></li></ul><hr><h2 id="添加-INSERT"><a href="#添加-INSERT" class="headerlink" title="添加 INSERT"></a>添加 INSERT</h2><blockquote><p>语法 : INSERT INTO 表名[(字段 1,字段 2,字段 3,…)] VALUES (‘值 1’,’值 2’,’值 3’)</p></blockquote><ul><li><p>字段与值位置对应</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span></span><br><span class="line">  grade(gradename, gradeid)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">&#x27;大一&#x27;</span>, <span class="string">&#x27;2&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>省略字段的话,值得顺序必须与数据表中的字段顺序一致</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span></span><br><span class="line">  grade</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;大二&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>一次插入多条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span></span><br><span class="line">  grade(gradename)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">&#x27;大三&#x27;</span>),(<span class="string">&#x27;大四&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="修改-UPDATE"><a href="#修改-UPDATE" class="headerlink" title="修改 UPDATE"></a>修改 UPDATE</h2><blockquote><p>UPDATE <code>表名</code> SET <code>列名 1</code>=value <code>列名 2</code>=value [WHERE 条件];</p></blockquote><ul><li><p>value 为修改后的数据 , 可以为变量 , 具体值 , 表达式或者嵌套的 SELECT 结果</p></li><li><p>不指定 where 的话,会修改表内所有数据</p></li><li><p>注意 value 用单引号’引起来,不是飘`</p></li><li><p>例子(随机生成 20 条数据后多条件筛选)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span></span><br><span class="line">  <span class="string">`grade`</span></span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">  <span class="string">`gradename`</span> = <span class="string">&#x27;大一&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  gradeid &gt; <span class="number">1</span></span><br><span class="line">  <span class="keyword">AND</span> gradeid &lt; <span class="number">10</span></span><br><span class="line">  <span class="keyword">OR</span> gradeid = <span class="number">15</span>;</span><br></pre></td></tr></table></figure></li><li><p>结果(json)</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;lonrd&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;大一&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;大一&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;4&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;大一&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;5&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;大一&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;6&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;大一&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;7&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;大一&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;8&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;大一&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;9&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;大一&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;10&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;fmtdq&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;11&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;tvyoh&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;12&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;ovhvu&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;13&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;hipnh&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;14&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;kjdxr&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;15&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;大一&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;16&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;xvlbp&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;17&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;bgphq&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;jcpmc&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;19&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;gjuof&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;gradeid&quot;</span>: <span class="string">&quot;20&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gradename&quot;</span>: <span class="string">&quot;owxri&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="删除-DELETE-TRUNCATE"><a href="#删除-DELETE-TRUNCATE" class="headerlink" title="删除 DELETE/TRUNCATE"></a>删除 DELETE/TRUNCATE</h2><blockquote><p>DELETE FROM 表名 [WHERE condition];</p></blockquote><ul><li><p>如不指定 where,会删除表中所有数据</p></li><li><p>例子</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span></span><br><span class="line">  grade</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  gradeid = <span class="number">5</span>;</span><br></pre></td></tr></table></figure></li></ul><hr><blockquote><p>TRUNCATE [TABLE] 表名;</p></blockquote><ul><li><p>清空表,表的结构和索引不变</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> <span class="string">`student`</span></span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>二者都能删除数据,不影响表结构</p><ul><li>DELETE 删除数据后不影响<code>自动增量</code>,会记录日志.</li><li>TRUNCATE 清空表之后会把<code>自动增量</code>归零,不会记录日志.</li></ul><hr></li><li><p>使用 DELETE 清空不同引擎的数据库表数据.重启数据库服务后</p><ul><li><p>InnoDB : 自增列从初始值重新开始 (因为是存储在内存中,断电即失)</p></li><li><p>MyISAM : 自增列依然从上一个自增数据基础上开始 (存在文件中,不会丢失)</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 笔记 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>😁IDE选用指北.</title>
      <link href="post/others/IDEs/"/>
      <url>post/others/IDEs/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-25 11:00:54 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\others\IDEs.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%89%8D%E8%A8%80">前言</a></li><li><a href="#%E5%89%8D%E7%AB%AF">前端</a><ul><li><a href="#%E7%BD%91%E9%A1%B5%E6%9C%8D%E5%8A%A1%E5%99%A8">网页服务器</a></li><li><a href="#vscode">VScode</a></li><li><a href="#idea">IDEA</a></li></ul></li><li><a href="#markdown">Markdown</a></li><li><a href="#tomcat">Tomcat</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><p>开互联网前端课程了,对于工具的选用确实有些杂乱,五花八门</p></li><li><p>下面简单展示两款 IDE 吧–&gt; <code>VScode</code> 与 <code>IDEA</code></p><ul><li><p>VScode 全称 <code>Visual Studio Code</code>,是开源免费的,有编程界最丰富的插件市场</p></li><li><p>IDEA 全称 <code>IntelliJ IDEA</code>,有开源免费版,也有收费版(对大型项目有更好的支持),目前口评最好的 Java 开发工具.</p></li></ul></li></ul><hr><ul><li><p>工具跟随需求,首先我们先探讨下具体需要它做什么?</p><ul><li><p>方便编写前端(HTML,CSS,JavaScript,stylus,less),框架(React,Vue,Angular)等等</p></li><li><p>能架设起网页服务器(localhost:xxxx 可以访问)</p></li><li><p>最好具备一定的插件扩展性.</p></li><li><p>支持读写<code>.md</code>格式的 markdown 文件.</p></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><ul><li>首先,编写方面没啥可说的,VScode 在前端/框架方面支持都是数一数二的,IDEA 的话,拿来写前端其实也相当出色.</li></ul><h2 id="网页服务器"><a href="#网页服务器" class="headerlink" title="网页服务器"></a>网页服务器</h2><ul><li><p>教学老师用的是 MyEclipse+tomcat 架设的网页服务器,搭建时需要搞 MyEclipse,<del>破解</del>,配置 Tomcat(而且 Tomcat 需要 JDK)</p><ul><li>别提多头疼了!</li></ul><hr></li><li><p>我写这个文章就是为了解决这个问题</p><ul><li><p>VScode 很多优秀扩展开箱即用网页服务器!</p></li><li><p>IDEA 原生支持网页服务器!</p></li></ul></li><li><p>下面介绍怎么用:</p><ul><li>可供参考的测试 html 文件:</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-id">#divMove</span> &#123;</span></span><br><span class="line">        width: 500px;</span><br><span class="line">        height: 500px;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ff0000</span>;</span></span><br><span class="line">        font-size: 30px;</span><br><span class="line">        text-align: center;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--要求：获取鼠标当前的一个坐标--&gt;</span></span><br><span class="line">    Mouse <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;mouseMove&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;divMove&quot;</span>&gt;</span>在这里移动鼠标试试<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">      /**</span><br><span class="line">       * ! 当网页元素加载完毕之后，响应事件</span><br><span class="line"><span class="javascript">       * 原型: $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;);</span></span><br><span class="line"><span class="javascript">       * 简化后的: $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;&#125;);</span></span><br><span class="line">       */</span><br><span class="line"><span class="javascript">      $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;#divMove&quot;</span>).mousemove(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          $(<span class="string">&quot;#mouseMove&quot;</span>).text(<span class="string">&quot;X: &quot;</span> + e.pageX + <span class="string">&quot;Y: &quot;</span> + e.pageY);</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="VScode"><a href="#VScode" class="headerlink" title="VScode"></a>VScode</h2><ul><li><p>安装,汉化,之后搜下面的插件,两个都非常不错,个人更推荐第二个</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210302223844.png" alt="20210302223844" /><hr><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210302224003.png" alt="20210302224003" /></li><li><p>然后随便打开一个.html 文件,按照文档使用就好了</p><ul><li>比如我用的第二款,右键菜单就可以直接打开网页服务器</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210302224353.png" alt="20210302224353" /></li><li><p>效果如下</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210302224509.png" alt="20210302224509" /><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210302224806.png" alt="20210302224806" /></li></ul><hr><h2 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h2><ul><li><p>直接打开一个 HTML 文件,右上角会出现开启网页服务器的小标志</p><ul><li>有什么浏览器点什么就好</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210302225318.png" alt="20210302225318" /></li><li><p>效果</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210302225450.png" alt="20210302225450" /></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><ul><li><p>废话不多说,先展示下我写博客时的样子</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210302220625.png" alt="20210302220625" /><ul><li>VScode 与 IDEA 原生支持读写 markdown 文件,而且支持都很不错</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210302221020.png" alt="20210302221020" /><hr></li><li><p>个人使用 VScode 写比较多,因为有很多提升效率的扩展</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h1><blockquote><p>此处抽离到另一篇文章了: <a href="../../tools/Tomcat">🐱‍🏍Maven+Tomcat 开发 webapp.</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VScode </tag>
            
            <tag> IDEA </tag>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
            <tag> JavaScript </tag>
            
            <tag> 推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🟢&lt;&lt;代码之外的生存指南&gt;&gt;读记.</title>
      <link href="post/life/outside-of-code/"/>
      <url>post/life/outside-of-code/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-04-16 15:35:37 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\life\outside-of-code.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%89%8D%E8%A8%80">前言</a></li><li><a href="#%E8%81%8C%E4%B8%9A">职业</a><ul><li><a href="#%E4%B8%8D%E8%A6%81%E5%81%9A%E4%BB%96%E4%BA%BA%E9%83%BD%E5%9C%A8%E5%81%9A%E7%9A%84%E4%BA%8B">不要做他人都在做的事</a></li><li><a href="#%E4%BD%A0%E7%9A%84%E7%9B%AE%E6%A0%87%E6%98%AF%E4%BB%80%E4%B9%88">你的目标是什么</a></li><li><a href="#%E4%BA%BA%E9%99%85%E4%BA%A4%E5%BE%80%E8%83%BD%E5%8A%9B%E8%BF%9C%E6%AF%94%E4%BD%A0%E6%83%B3%E8%B1%A1%E7%9A%84%E9%87%8D%E8%A6%81">人际交往能力：远比你想象的重要</a></li><li><a href="#%E7%A0%B4%E8%A7%A3%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93">破解面试之道</a></li><li><a href="#%E5%B0%B1%E4%B8%9A%E9%80%89%E6%8B%A9%E5%88%97%E5%87%BA%E4%BD%A0%E7%9A%84%E9%80%89%E6%8B%A9">就业选择：列出你的选择</a></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>网上很火的一本书,大佬们也很追捧,尝试读了一下,感觉很棒.</li></ul><hr><blockquote><p>当我说到“优秀的软件开发人员”时，我并不是说要精于编码之道，善于解决缺陷，通晓单元测试。相反，我所说的“优秀 的软件开发人员”，是那些能够把控自己的职业生涯、达成目标、享受生活的人。</p></blockquote><h1 id="职业"><a href="#职业" class="headerlink" title="职业"></a>职业</h1><h2 id="不要做他人都在做的事"><a href="#不要做他人都在做的事" class="headerlink" title="不要做他人都在做的事"></a>不要做他人都在做的事</h2><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210228231643.png" alt="20210228231643" /><blockquote><ul><li>不要被愚弄了，当你为了谋生一头扎进写代码的世界时，其实<code>你和中世纪小镇上开铁匠铺的铁匠没什么差别。</code></li><li>首先，要有一个产品或服务。不能 提供东西的企业是没办法赚钱的，因为没有东西可卖。你有什么可以卖？你的产品或服务是什么？</li></ul></blockquote><p>通常 软件开发人员售卖的就是他们把一个想法变成一个数字化的现实产品的能力。</p><p>作为一名软件开发人员，你提供的服务具备有形价值，你要传达的不仅是这款软件 的价值是什么，还有它与别的成千上万款软件开发人员提供的服务有何不同。</p><p>你需要认识到仅有 服务或产品是不够的。想赚到钱，你就必须能让潜在的客户了解该产品或服务。</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210304114711.png" alt="20210304114711" /><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210304115641.png" alt="20210304115641" /><hr><h2 id="你的目标是什么"><a href="#你的目标是什么" class="headerlink" title="你的目标是什么"></a>你的目标是什么</h2><p>大多数人处于被安排,没有目的的自然状态</p><ul><li><p>一些意识到这个问题的又会存在一些顾此失彼,殚精竭虑的状态:</p><blockquote><p>如果这条路错了我该怎么办呢？ 如果我不喜欢自己选的路又该怎么办呢？</p></blockquote><hr></li><li><p>之前在 B 站评论区挖掘到的,感觉有所触动:</p><blockquote><p>不要光听别人说做什么好，做什么有前途，你现在做什么没前途。有多少人敢做一件事啊</p></blockquote><hr></li><li><p>为了安逸,我们很容易陷入 <code>被安排做事&lt;--&gt;被安排做人</code> 的圈套中,我感觉这与当代国内教育关系很大:</p><ul><li><p>在大学前,甚至即使是大学毕业前,我们一直处于老师,家长的安排之下,在牺牲孩子决策力培养的前提下,拉满学习能力</p></li><li><p>这不是学校,老师或者家长任何一方面的单一问题,是整个社会陷入了这个危机</p></li></ul></li><li><p>关联性的谈一下:</p><ul><li><p>WPS 每日点击调查中,出现了令我非常诧异的一个结果:</p><p>有 52%的人从事专业与所学专业不一致.</p><p>当然,这个数据很有局限性和偏差(WPS 的用户更偏向文管类),不过上万人的数据量挺大的,确确实实能反映一定问题</p></li></ul><blockquote><p>如果你被学校安排得明明白白,那么毕业时也会被社会安排得明明白白. –杨学”安排定律”</p></blockquote><hr></li><li><p>我个人目前也是个大学生,个人认为比起如何好好学习提升成绩,我们更需要首先<code>关注我们自身需求</code></p><ul><li><p>就像上面所说,我们很多人毕业之后,要么转行,要么不得不敷敷衍衍的干着”本职工作”</p></li><li><p>也许,如果大学时意识到这一点,会有所缓解 (不想用”改变”这个词,很虚缈)</p></li><li><p>问问你自己,<code>你需要什么,想要成为谁? </code>这是比盲目努力攀高更值得优先探索的高地.</p></li></ul><hr><p>制定目标非常重要,尤其是需要大目标和小目标结合起来,<code>前者是方向,后者是驱使.</code></p><p>一般大目标比较模糊,但是小目标需要具体一些,平时注意追踪更新自己的小目标,并做一些关键性调整和反思</p></li></ul><hr><h2 id="人际交往能力：远比你想象的重要"><a href="#人际交往能力：远比你想象的重要" class="headerlink" title="人际交往能力：远比你想象的重要"></a>人际交往能力：远比你想象的重要</h2><ul><li><p>我们,臭写代码的,好像比较容易进入一种状态:</p><blockquote><p>别管我，我只想一个人安静地写代码！</p></blockquote><p>实际上在学习上这么干没问题,但是转移到职场上的话,不进行社交,其他员工和老板都会觉得你在无作为,刚刚看到一个例子:</p><p>公众号@公子龙的一个好友,是 C9 级别的技术岗,也是纯走技术性流派的人,结果因为被认为价值不匹配被裁员了.</p><p>在这里写下这么个事件(例子)并不只是作为例证来引以为戒,而是这种隐患可能实实在在的存在于我们身上,所以,尽管可能很烦,还是需要跟同事老板吃吃饭,多沟通一下.</p><hr></li><li><p>另外,从编程方面解释,人际交往能力远比人机交互能力重要:</p><ul><li><p>大多数开发,是多人合作进行的任务,每个开发者只是片面的与机器沟通.</p></li><li><p>我们 coder 同事间,谁不写代码注释还得挨顿骂呢</p></li></ul><hr></li><li><p>如何与别人打交道?</p><blockquote><p>以自己为核心，每个人都希望自己很重要。</p></blockquote><p>这对于自己和他人都适用,把握好核心距离,尽量让别人认为<code>这个人对我很重要</code>,当然,要注意好,表现不是欺骗.</p><p>表现力在人际交往中可以说起到<code>决定性作用</code></p><hr></li><li><p>永远不要批评</p><blockquote><p>“批评” 是一项很少能够达成你期望结果的工具</p></blockquote><p>不出意外的话,这本书的读者,大多是 90/00 后,我们会发现我们经历的教育,大多是打击式教育 (少有通情达理的老师吧..尽管我们都知道这是所谓的为我们好)</p><p>有幸遇到过几位特别和蔼可亲的老师,灌溉了我们暗淡的少年,真的可以说是叫<code>灌溉</code>.</p><p>小学时,被批评我会颤抖哭泣;初中时,我会挺委屈的;高中时,竟是觉得不以为然了;到了大学,被批评就会感觉挺诙谐的 🤣</p><p>喰种上有句话,大意是: <code>任何不符合自己意向的事情发生,都是自己能力不足所致.</code></p><p>不用想这句话有没有道理,回想过去所有让我生气的事,好像大多数确实是能力不达导致的.</p><blockquote><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210416125110.png" alt="20210416125110" /></blockquote><hr></li><li><p>换位思考</p><p>太过以个人为中心的话,就很有容易失去更多身外之物</p><p>个人更倾向以”第三者”身份生活,只要不触及我内心的事物,我会习惯性的用第三者眼光看待 (生活的参与者,灵魂的旁观者)</p><p>可以通过一个潜意识细节判断一个人的”自我”程度: <code>每句话中&quot;我&quot;这个字出现的频率</code> (比如”我….,我….”)</p><p>生活中留意的话,应该可以发现: 那些自我意识低,喜欢关注别人的人,更容易受到别人喜欢 (当然不是指互联网上的”关注”)</p><p>当双方意见有分歧时,我们经常面红耳赤的想要给对方输入自己的观点,而对方也是,这就是死锁,必须得有个人把注意力转移到对方身上,即使是假装,把对方的观点听完,再解释自己的</p><p>其实说来容易,做起来难,更多的情况是: <code>到那个节骨眼上,放不下</code></p><p>这样来看,见人说人话,见鬼说鬼话的能力,还是挺难的</p><blockquote><p>既然逻辑和纯粹的理性无助于说服一个尖声大叫的小孩明白睡觉能让他得到充分的休息，那么，你也不可能依此方法来说服一位备受轻视的同事接受 我做事的方式才是最好的 。</p></blockquote><blockquote><p>据我所知，普天之下解决争吵的灵丹妙药只有一个，那就是避免争吵，像躲避响尾蛇和地震一样地远离争吵。 –人性的弱点</p></blockquote><hr></li><li><p>看这本书之前,我还在认为金钱是社会上最通用的价值</p><blockquote><p>你会发现，当你学会了如何以令人愉悦的方式与他人互动和交往的时候，自己的生活也越来越愉快。通过习得这些技能，你积累了让自己获益终生的财富，它的价值无法用金钱衡量。</p></blockquote><p>还真是,交往能力直接关系到日常心情与生活,贯穿我们一生,而且无法以金钱来衡量.</p></li></ul><hr><h2 id="破解面试之道"><a href="#破解面试之道" class="headerlink" title="破解面试之道"></a>破解面试之道</h2><blockquote><p>当许多技术过硬的开发人员都在竞争同一个工作岗位时，决定胜负的最大因素已经不再是技术能力了。</p></blockquote><ul><li><p>如何获得关注</p><blockquote><p>我花了一些时间研究这家公司，找出这个公司有哪些开发人员在写博客。我开始关注为这家公司工作的开发人员的所有博客，并开始在他们的博客文章下留下经过深思熟虑的评论。慢慢地，许多在这家公司供职的开发人员开始认识我了，并通过我给他们博客做出的评论知道了我是谁。他们中的一些人甚至开始读我的博客。</p></blockquote><p>一个很棒的思路,在条件允许的情况下可以试试 (其实国内的大环境都是海投简历,可以得到面试机会的也就几家)</p><p>确实,我们经常会在互联网上看到一些企业员工的内推信息,甚至有些企业直接做一些宣传片来推广企业招揽员工,我们可以通过这种方式来与企业内部进行沟通.</p></li><li><p>注重点:</p><p>我们面试者在面试场景下应该更加注重表现自己的<code>主动性</code></p><p>因为在 JD 上明码标价的技术栈和薪资,来的人水平一般不会差太多,这时主动性就是更能吸引面试官的法宝了.</p><p>无论现在是否有找工作的需求,<code>提前布局,营造技术影响力</code>,不同岗位的技术能力可能不容易解释,而影响力是互通的</p></li></ul><hr><h2 id="就业选择：列出你的选择"><a href="#就业选择：列出你的选择" class="headerlink" title="就业选择：列出你的选择"></a>就业选择：列出你的选择</h2>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哲学 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🎶Java网络编程</title>
      <link href="post/Java/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/1/"/>
      <url>post/Java/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/1/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-19 00:14:29 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\网络编程\1.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%8F%82%E8%80%83">参考</a></li><li><a href="#%E7%AE%80%E4%BB%8B">简介</a></li><li><a href="#ip">IP</a></li><li><a href="#%E7%AB%AF%E5%8F%A3">端口</a></li><li><a href="#%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE">通信协议</a><ul><li><a href="#tcp">TCP</a></li><li><a href="#udp">UDP</a></li></ul></li><li><a href="#tcp-%E8%BF%9E%E6%8E%A5">TCP 连接</a><ul><li><a href="#server-%E7%AB%AF">Server 端</a></li><li><a href="#client-%E7%AB%AF">Client 端</a></li></ul></li><li><a href="#%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93">文件传输</a><ul><li><a href="#server">Server</a></li><li><a href="#client">Client</a></li></ul></li><li><a href="#udp-%E8%BF%9E%E6%8E%A5">UDP 连接</a><ul><li><a href="#server-1">Server</a></li><li><a href="#client-1">Client</a></li></ul></li><li><a href="#udp-%E5%BE%AA%E7%8E%AF%E5%8F%91%E9%80%81">UDP 循环发送</a><ul><li><a href="#server-2">Server</a></li><li><a href="#client-2">Client</a></li></ul></li><li><a href="#%E5%8F%8C%E5%90%91%E8%81%8A%E5%A4%A9">双向聊天</a><ul><li><a href="#%E5%8F%91%E9%80%81%E7%BA%BF%E7%A8%8B">发送线程</a></li><li><a href="#%E6%8E%A5%E6%94%B6%E7%BA%BF%E7%A8%8B">接收线程</a></li><li><a href="#%E8%80%81%E5%B8%88">老师</a></li><li><a href="#%E5%AD%A6%E7%94%9F">学生</a></li></ul></li><li><a href="#url">URL</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><p><a href="https://blog.csdn.net/weixin_45717355/article/details/110945343">【狂神说 Java】网络编程</a></p></blockquote><hr><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li><p>架构区分</p><ul><li>网页编程: B/S</li><li>网络编程: C/S</li></ul><hr></li><li><p>通信要素(TCP/IP)</p><ul><li>IP</li><li>端口</li></ul><hr></li><li><p>协议参考</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210228232437.png" alt="20210228232437" /><blockquote><p>更为详细的: <a href="http://www.colasoft.com.cn/download/protocols_map.php">科来网络通讯协议图 2020 版</a></p></blockquote><ul><li>此处针对传输层 TCP/UDP 学习.</li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Ip</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// write your code here</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 获取本机内网IP地址</span></span><br><span class="line">      InetAddress inetAddress1 = InetAddress.getByName(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">      System.out.println(inetAddress1);</span><br><span class="line">      InetAddress inetAddress2 = InetAddress.getByName(<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">      System.out.println(inetAddress2);</span><br><span class="line">      InetAddress inetAddress3 = InetAddress.getLocalHost();</span><br><span class="line">      System.out.println(inetAddress3);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//查询网站ip地址</span></span><br><span class="line">      InetAddress inetAddress4 = InetAddress.getByName(<span class="string">&quot;www.bilibili.com&quot;</span>);</span><br><span class="line">      System.out.println(inetAddress4);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//常用方法</span></span><br><span class="line">      System.out.println(inetAddress4.getAddress());</span><br><span class="line">      System.out.println(inetAddress4.getCanonicalHostName()); <span class="comment">//规范的名字</span></span><br><span class="line">      System.out.println(inetAddress4.getHostAddress()); <span class="comment">//ip</span></span><br><span class="line">      System.out.println(inetAddress4.getHostName()); <span class="comment">//域名，或者自己电脑的名字</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    /127.0.0.1</span></span><br><span class="line"><span class="comment">    localhost/127.0.0.1</span></span><br><span class="line"><span class="comment">    DESKTOP-CTDDD3K/192.168.114.1</span></span><br><span class="line"><span class="comment">    www.bilibili.com/121.17.123.130</span></span><br><span class="line"><span class="comment">    [B@2a3046da</span></span><br><span class="line"><span class="comment">    121.17.123.130</span></span><br><span class="line"><span class="comment">    121.17.123.130</span></span><br><span class="line"><span class="comment">    www.bilibili.com</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h1><ul><li><p>TCP 与 UDP 各有 65535 个端口</p><ul><li><p>两个协议间不冲突</p></li><li><p>但是一个协议下的一个端口只能同时被一个软件占用.</p></li></ul><hr></li><li><p>端口分类</p><ul><li><p>公有端口 0 ~ 1023</p><ul><li><p>HTTP：80</p></li><li><p>HTTPS：443</p></li><li><p>FTP：21</p></li><li><p>Telent：23</p></li></ul></li><li><p>程序注册端口：1024 ~ 49151，分配给用户或者程序</p><ul><li><p>Tomcat：8080</p></li><li><p>MySQL：3306</p></li><li><p>Oracle：1512</p></li></ul></li><li><p>动态、私有：49152 ~ 65535</p></li></ul><hr></li><li><p>常用 shell 指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano #查看所有的端口</span><br><span class="line">netstat -ano | finstr &quot;5900&quot; #查看指定的端口</span><br><span class="line">tasklist | findstr &quot;8696&quot; #查看指定端口的进程</span><br></pre></td></tr></table></figure></li><li><p>InetSocketAddress</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Port</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    InetSocketAddress socketAddress = <span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;localhost&quot;</span>, <span class="number">8080</span>);</span><br><span class="line">    System.out.println(socketAddress);</span><br><span class="line"></span><br><span class="line">    System.out.println(socketAddress.getAddress());</span><br><span class="line">    System.out.println(socketAddress.getHostName());</span><br><span class="line">    System.out.println(socketAddress.getPort());</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    localhost/127.0.0.1:8080</span></span><br><span class="line"><span class="comment">    localhost/127.0.0.1</span></span><br><span class="line"><span class="comment">    localhost</span></span><br><span class="line"><span class="comment">    8080</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="通信协议"><a href="#通信协议" class="headerlink" title="通信协议"></a>通信协议</h1><ul><li><p>通过约定协议来管控通信的速率,码率等问题</p></li><li><p>并通过协议分层来简化复杂度</p><hr></li><li><p>几种协议</p><ul><li><p>TCP:用户传输协议</p></li><li><p>UDP:用户数据报协议</p></li><li><p>IP:网络互连协议</p></li><li><p>TCP/IP 协议簇:是一组协议 (四层概念模型)</p></li></ul></li></ul><hr><h2 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h2><ul><li><p>TCP 是客户端&lt;–&gt;服务端双向的信息沟通,可长时间稳定连接</p></li><li><p>稳定连接最小验证<code>三次握手,四次挥手</code></p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">最少需要三次，保证稳定连接！</span><br><span class="line"><span class="keyword">A</span>：你瞅啥？</span><br><span class="line">B：瞅你咋地？</span><br><span class="line"><span class="keyword">A</span>：干一场！</span><br><span class="line"></span><br><span class="line">至少四次,双方才能都断开连接</span><br><span class="line"><span class="keyword">A</span>：我要走了</span><br><span class="line">B：你真的要走了吗？</span><br><span class="line">B：你真的真的要走了吗？</span><br><span class="line"><span class="keyword">A</span>：我真的要走了</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h2><ul><li><p>单向的信息传递</p></li><li><p>没有客户端与服务端界限</p></li><li><p>无论有没有接收方,无论接收方是否接收,发送方只管发送</p></li><li><p>常见的<code>DDOS攻击</code>,让大量垃圾信息污染服务器接收端口,使其瘫痪.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="TCP-连接"><a href="#TCP-连接" class="headerlink" title="TCP 连接"></a>TCP 连接</h1><ul><li>Server 服务端与 Client 客户端通过 TCP 方式创建数据连接.</li></ul><h2 id="Server-端"><a href="#Server-端" class="headerlink" title="Server 端"></a>Server 端</h2><ul><li><p>建立服务的端口 ServerScoket</p></li><li><p>等待用户的连接 accept</p></li><li><p>接收用户的消息</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Server</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//1、我得有一个地址</span></span><br><span class="line">    ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">9999</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123; <span class="comment">// 连续接收数据</span></span><br><span class="line">      <span class="comment">//2、等待客户端连接过来</span></span><br><span class="line">      Socket accept = serverSocket.accept();</span><br><span class="line"></span><br><span class="line">      <span class="comment">//3、读取客户端的消息</span></span><br><span class="line">      InputStream inputStream = accept.getInputStream();</span><br><span class="line"></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 通常IO方式,如果是长数据传输,会导致出错</span></span><br><span class="line"><span class="comment">       *</span></span><br><span class="line"><span class="comment">        byte[] buffer = new byte[1024];</span></span><br><span class="line"><span class="comment">        int length;</span></span><br><span class="line"><span class="comment">        while ((length = inputStream.read(buffer)) != -1) &#123;</span></span><br><span class="line"><span class="comment">        String s = new String(buffer, 0, length);</span></span><br><span class="line"><span class="comment">        System.out.println(s);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//4. 管道流接收数据</span></span><br><span class="line">      ByteArrayOutputStream byteArrayOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">      <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">      <span class="keyword">int</span> length;</span><br><span class="line">      <span class="keyword">while</span> ((length = inputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">        byteArrayOutputStream.write(buffer, <span class="number">0</span>, length);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (byteArrayOutputStream.toString().matches(<span class="string">&quot;quit&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(byteArrayOutputStream.toString());</span><br><span class="line">        byteArrayOutputStream.close();</span><br><span class="line">        inputStream.close();</span><br><span class="line">        accept.close();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5. 最后关闭</span></span><br><span class="line">    serverSocket.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="Client-端"><a href="#Client-端" class="headerlink" title="Client 端"></a>Client 端</h2><ul><li><p>连接服务器 Socket</p></li><li><p>发送消息</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//1、要知道服务器的地址，端口号</span></span><br><span class="line">    InetAddress address = InetAddress.getLocalHost();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> port = <span class="number">9999</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、创建一个socket连接</span></span><br><span class="line">    Socket socket = <span class="keyword">new</span> Socket(address, port);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、发送消息 IO流</span></span><br><span class="line">    OutputStream outputStream = socket.getOutputStream();</span><br><span class="line">    outputStream.write(<span class="string">&quot;Weidows connecting here.&quot;</span>.getBytes());</span><br><span class="line">    <span class="comment">// outputStream.write(&quot;quit&quot;.getBytes());</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.关闭通道</span></span><br><span class="line">    outputStream.close();</span><br><span class="line">    socket.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h1><h2 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Server</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//1、创建服务</span></span><br><span class="line">    ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">9999</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、监听客户端的连接</span></span><br><span class="line">    Socket socket = serverSocket.accept(); <span class="comment">//阻塞式监听，会一直等待客户端连接</span></span><br><span class="line">    System.out.println(<span class="string">&quot;Server开始监听.&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、获取输入流</span></span><br><span class="line">    InputStream is = socket.getInputStream();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4、文件输出</span></span><br><span class="line">    FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(<span class="string">&quot;Java/src/main/java/twenty_one/net/file_upload/receive.png&quot;</span>));</span><br><span class="line">    <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    <span class="keyword">while</span> ((len = is.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">      fos.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;Server接收完毕.&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通知客户端我接收完毕了</span></span><br><span class="line">    OutputStream os = socket.getOutputStream();</span><br><span class="line">    os.write(<span class="string">&quot;Server通知:接受完毕，Client可以断开了&quot;</span>.getBytes());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5、关闭资源</span></span><br><span class="line">    fos.close();</span><br><span class="line">    is.close();</span><br><span class="line">    socket.close();</span><br><span class="line">    serverSocket.close();</span><br><span class="line">    System.out.println(<span class="string">&quot;Server已发送验证并断开连接.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    Server开始监听.</span></span><br><span class="line"><span class="comment">    Server接收完毕.</span></span><br><span class="line"><span class="comment">    Server已发送验证并断开连接.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="Client"><a href="#Client" class="headerlink" title="Client"></a>Client</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//1、创建一个Socket连接</span></span><br><span class="line">    Socket socket = <span class="keyword">new</span> Socket(InetAddress.getByName(<span class="string">&quot;localhost&quot;</span>), <span class="number">9999</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、创建一个输出流</span></span><br><span class="line">    OutputStream os = socket.getOutputStream();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、读取文件</span></span><br><span class="line">    FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="keyword">new</span> File(<span class="string">&quot;Java/src/main/java/twenty_one/net/file_upload/upload.png&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4、写出文件</span></span><br><span class="line">    <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    <span class="keyword">while</span> ((len = fis.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">      os.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;Client传输完毕.&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通知服务器，我已经结束了</span></span><br><span class="line">    socket.shutdownOutput(); <span class="comment">//我已经传输完了！</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//确定服务器接收完毕，才能够断开连接</span></span><br><span class="line">    InputStream inputStream = socket.getInputStream();</span><br><span class="line">    <span class="comment">//String byte[]</span></span><br><span class="line">    ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">    <span class="keyword">byte</span>[] buffer2 = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">int</span> len2;</span><br><span class="line">    <span class="keyword">while</span> ((len2 = inputStream.read(buffer2)) != -<span class="number">1</span>) &#123;</span><br><span class="line">      baos.write(buffer2, <span class="number">0</span>, len2);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(baos.toString());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5、关闭资源</span></span><br><span class="line">    baos.close();</span><br><span class="line">    inputStream.close();</span><br><span class="line">    fis.close();</span><br><span class="line">    os.close();</span><br><span class="line">    socket.close();</span><br><span class="line">    System.out.println(<span class="string">&quot;Client已接收到验证并断开连接&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    Client传输完毕.</span></span><br><span class="line"><span class="comment">    Server通知:接受完毕，Client可以断开了</span></span><br><span class="line"><span class="comment">    Client已接收到验证并断开连接</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="UDP-连接"><a href="#UDP-连接" class="headerlink" title="UDP 连接"></a>UDP 连接</h1><h2 id="Server-1"><a href="#Server-1" class="headerlink" title="Server"></a>Server</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Server</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 1.开放端口</span></span><br><span class="line">    DatagramSocket datagramSocket = <span class="keyword">new</span> DatagramSocket(<span class="number">9999</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;等待数据传入中...&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.接收数据</span></span><br><span class="line">    <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    DatagramPacket datagramPacket = <span class="keyword">new</span> DatagramPacket(buffer, buffer.length);</span><br><span class="line">    datagramSocket.receive(datagramPacket); <span class="comment">//阻塞接收</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.输出</span></span><br><span class="line">    System.out.println(<span class="string">&quot;Server接收到数据:&quot;</span> + <span class="keyword">new</span> String(datagramPacket.getData()));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.关闭</span></span><br><span class="line">    datagramSocket.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="Client-1"><a href="#Client-1" class="headerlink" title="Client"></a>Client</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 1.创建数据包</span></span><br><span class="line">    InetAddress localHost = InetAddress.getLocalHost();</span><br><span class="line">    <span class="keyword">int</span> port = <span class="number">9999</span>;</span><br><span class="line">    <span class="keyword">byte</span>[] data = <span class="string">&quot;这是Client发送的数据.&quot;</span>.getBytes();</span><br><span class="line">    DatagramPacket datagramPacket = <span class="keyword">new</span> DatagramPacket(data, data.length, localHost, port);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.创建Socket</span></span><br><span class="line">    DatagramSocket datagramSocket = <span class="keyword">new</span> DatagramSocket();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.发送数据</span></span><br><span class="line">    datagramSocket.send(datagramPacket);</span><br><span class="line">    System.out.println(<span class="string">&quot;传输成功.&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.关闭连接</span></span><br><span class="line">    datagramSocket.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="UDP-循环发送"><a href="#UDP-循环发送" class="headerlink" title="UDP 循环发送"></a>UDP 循环发送</h1><h2 id="Server-2"><a href="#Server-2" class="headerlink" title="Server"></a>Server</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Server2</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 1.准备连接</span></span><br><span class="line">    DatagramSocket datagramSocket = <span class="keyword">new</span> DatagramSocket(<span class="number">9999</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">      <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">      DatagramPacket datagramPacket = <span class="keyword">new</span> DatagramPacket(bytes, bytes.length);</span><br><span class="line">      System.out.println(<span class="string">&quot;Server准备接收数据中.&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2.接收数据</span></span><br><span class="line">      datagramSocket.receive(datagramPacket);</span><br><span class="line">      String string = <span class="keyword">new</span> String(datagramPacket.getData());</span><br><span class="line">      System.out.println(<span class="string">&quot;接收到数据:\t&quot;</span> + datagramPacket.getAddress() + <span class="string">&quot;:&quot;</span> + datagramPacket.getPort() + <span class="string">&quot;\t&quot;</span> + string);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 这里的string=&quot;quitxxxxxxxxxxxxxx&quot;,总长为上面的1024,用.equals()无法判断.</span></span><br><span class="line">      <span class="keyword">if</span> (string.contains(<span class="string">&quot;quit&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.断开连接</span></span><br><span class="line">    datagramSocket.close();</span><br><span class="line">    System.out.println(<span class="string">&quot;Server已关闭连接.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="Client-2"><a href="#Client-2" class="headerlink" title="Client"></a>Client</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client2</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 0.准备连接</span></span><br><span class="line">    BufferedReader bufferedReader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">    DatagramSocket datagramSocket = <span class="keyword">new</span> DatagramSocket();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">      <span class="comment">// 1.准备数据</span></span><br><span class="line">      System.out.println(<span class="string">&quot;Client准备读取Terminal数据:&quot;</span>);</span><br><span class="line">      String readLine = bufferedReader.readLine();</span><br><span class="line">      <span class="keyword">byte</span>[] bytes = readLine.getBytes();</span><br><span class="line">      DatagramPacket datagramPacket = <span class="keyword">new</span> DatagramPacket(bytes, bytes.length, <span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;localhost&quot;</span>, <span class="number">9999</span>));</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2.发送数据</span></span><br><span class="line">      datagramSocket.send(datagramPacket);</span><br><span class="line">      System.out.println(<span class="string">&quot;Client已经发送数据.&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (readLine.equals(<span class="string">&quot;quit&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.断开连接</span></span><br><span class="line">    datagramSocket.close();</span><br><span class="line">    System.out.println(<span class="string">&quot;Client已关闭连接.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="双向聊天"><a href="#双向聊天" class="headerlink" title="双向聊天"></a>双向聊天</h1><ul><li><p>实现<code>发送</code>,<code>接收</code>两个线程类</p></li><li><p>老师和学生各开上面两个线程,实现<code>发,收</code>功能.</p></li></ul><h2 id="发送线程"><a href="#发送线程" class="headerlink" title="发送线程"></a>发送线程</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TalkSend</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">  BufferedReader bufferedReader = <span class="keyword">null</span>;</span><br><span class="line">  DatagramSocket datagramSocket = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> String targetIP;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> targetPort;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">TalkSend</span><span class="params">(String targetIP, <span class="keyword">int</span> targetPort)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.targetIP = targetIP;</span><br><span class="line">    <span class="keyword">this</span>.targetPort = targetPort;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 0.准备连接</span></span><br><span class="line">      bufferedReader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">      datagramSocket = <span class="keyword">new</span> DatagramSocket();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SocketException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">      <span class="comment">// 1.准备数据</span></span><br><span class="line">      System.out.println(<span class="string">&quot;Client准备读取Terminal数据:&quot;</span>);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        String readLine = bufferedReader.readLine();</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = readLine.getBytes();</span><br><span class="line">        DatagramPacket datagramPacket = <span class="keyword">new</span> DatagramPacket(bytes, bytes.length,</span><br><span class="line">            <span class="keyword">new</span> InetSocketAddress(targetIP, targetPort));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.发送数据</span></span><br><span class="line">        datagramSocket.send(datagramPacket);</span><br><span class="line">        System.out.println(<span class="string">&quot;Client已经发送数据.&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (readLine.equals(<span class="string">&quot;quit&quot;</span>)) &#123;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.断开连接</span></span><br><span class="line">    datagramSocket.close();</span><br><span class="line">    System.out.println(<span class="string">&quot;Client已关闭连接.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="接收线程"><a href="#接收线程" class="headerlink" title="接收线程"></a>接收线程</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TalkReceive</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">  DatagramSocket datagramSocket = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> localPort;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">TalkReceive</span><span class="params">(<span class="keyword">int</span> localPort)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.localPort = localPort;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      datagramSocket = <span class="keyword">new</span> DatagramSocket(<span class="keyword">this</span>.localPort);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SocketException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 1.准备连接</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        DatagramPacket datagramPacket = <span class="keyword">new</span> DatagramPacket(bytes, bytes.length);</span><br><span class="line">        System.out.println(<span class="string">&quot;Server准备接收数据中.&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.接收数据</span></span><br><span class="line">        datagramSocket.receive(datagramPacket);</span><br><span class="line"></span><br><span class="line">        String string = <span class="keyword">new</span> String(datagramPacket.getData());</span><br><span class="line">        System.out.println(<span class="string">&quot;接收到数据:\t&quot;</span> + datagramPacket.getAddress() + <span class="string">&quot;:&quot;</span> + datagramPacket.getPort() + <span class="string">&quot;\t&quot;</span> + string);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里的string=&quot;quitxxxxxxxxxxxxxx&quot;,总长为上面的1024,用.equals()无法判断.</span></span><br><span class="line">        <span class="keyword">if</span> (string.contains(<span class="string">&quot;quit&quot;</span>)) &#123;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.断开连接</span></span><br><span class="line">    datagramSocket.close();</span><br><span class="line">    System.out.println(<span class="string">&quot;Server已关闭连接.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="老师"><a href="#老师" class="headerlink" title="老师"></a>老师</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 老师</span></span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> TalkReceive(<span class="number">7777</span>)).start();</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> TalkSend(<span class="string">&quot;localhost&quot;</span>, <span class="number">8888</span>)).start();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    Server准备接收数据中.</span></span><br><span class="line"><span class="comment">    Client准备读取Terminal数据:</span></span><br><span class="line"><span class="comment">    接收到数据:     /127.0.0.1:50277        15465</span></span><br><span class="line"><span class="comment">    Server准备接收数据中.</span></span><br><span class="line"><span class="comment">    123456</span></span><br><span class="line"><span class="comment">    Client已经发送数据.</span></span><br><span class="line"><span class="comment">    Client准备读取Terminal数据:</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="学生"><a href="#学生" class="headerlink" title="学生"></a>学生</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 学生</span></span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> TalkReceive(<span class="number">8888</span>)).start();</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> TalkSend(<span class="string">&quot;localhost&quot;</span>, <span class="number">7777</span>)).start();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    Server准备接收数据中.</span></span><br><span class="line"><span class="comment">    Client准备读取Terminal数据:</span></span><br><span class="line"><span class="comment">    15465</span></span><br><span class="line"><span class="comment">    Client已经发送数据.</span></span><br><span class="line"><span class="comment">    Client准备读取Terminal数据:</span></span><br><span class="line"><span class="comment">    接收到数据:     /127.0.0.1:50279        123456</span></span><br><span class="line"><span class="comment">    Server准备接收数据中.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h1><ul><li>文件下载</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetURL</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 1.设置URL和文件路径</span></span><br><span class="line">    URL url = <span class="keyword">new</span> URL(<span class="string">&quot;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&quot;</span>);</span><br><span class="line">    String path = <span class="string">&quot;Java/src/main/java/twenty_one/net/&quot;</span>;</span><br><span class="line">    String fileName = url.getPath().substring(url.getPath().lastIndexOf(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ! URL类用法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">      System.out.println(url.getProtocol());</span></span><br><span class="line"><span class="comment">      System.out.println(url.getHost());</span></span><br><span class="line"><span class="comment">      System.out.println(url.getPort());</span></span><br><span class="line"><span class="comment">      System.out.println(url.getPath());</span></span><br><span class="line"><span class="comment">      System.out.println(url.getFile());</span></span><br><span class="line"><span class="comment">      System.out.println(url.getQuery());</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">      https</span></span><br><span class="line"><span class="comment">      cdn.jsdelivr.net</span></span><br><span class="line"><span class="comment">      /gh/Weidows/Images@master/img/divider.png</span></span><br><span class="line"><span class="comment">      /gh/Weidows/Images@master/img/divider.png</span></span><br><span class="line"><span class="comment">      null</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.输入输出流</span></span><br><span class="line">    InputStream openStream = url.openStream();</span><br><span class="line">    FileOutputStream fileOutputStream = <span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(path + fileName));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.传输数据</span></span><br><span class="line">    <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">    <span class="keyword">while</span> ((length = openStream.read(bytes)) != -<span class="number">1</span>) &#123;</span><br><span class="line">      fileOutputStream.write(bytes, <span class="number">0</span>, length);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.关闭连接</span></span><br><span class="line">    fileOutputStream.close();</span><br><span class="line">    openStream.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 网络编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🔥Java注解与反射复习~(贰)</title>
      <link href="post/Java/%E6%B3%A8%E8%A7%A3%E4%B8%8E%E5%8F%8D%E5%B0%84/2/"/>
      <url>post/Java/%E6%B3%A8%E8%A7%A3%E4%B8%8E%E5%8F%8D%E5%B0%84/2/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-02-28 18:15:20 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\注解与反射\2.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E6%93%8D%E4%BD%9C-class-%E5%AF%B9%E8%B1%A1">操作 Class 对象</a></li><li><a href="#%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90">性能分析</a></li><li><a href="#%E5%8F%8D%E5%B0%84%E6%93%8D%E4%BD%9C%E6%B3%9B%E5%9E%8B">反射操作泛型</a></li><li><a href="#%E5%8F%8D%E5%B0%84%E6%93%8D%E4%BD%9C%E6%B3%A8%E8%A7%A3">反射操作注解</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="操作-Class-对象"><a href="#操作-Class-对象" class="headerlink" title="操作 Class 对象"></a>操作 Class 对象</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo6</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//获得class对象</span></span><br><span class="line">    Class c1 = User.class;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建一个对象</span></span><br><span class="line">    User user = (User) c1.newInstance();<span class="comment">//本质是调用了类的无参构造器</span></span><br><span class="line">    System.out.println(user);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过构造器创建对象</span></span><br><span class="line">    System.out.println(<span class="string">&quot;============================&quot;</span>);</span><br><span class="line">    Constructor constructor = c1.getDeclaredConstructor(String.class, <span class="keyword">int</span>.class);</span><br><span class="line">    User user2 = (User) constructor.newInstance(<span class="string">&quot;打爆&quot;</span>, <span class="number">22</span>);</span><br><span class="line">    System.out.println(user2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过反射获取一个方法</span></span><br><span class="line">    System.out.println(<span class="string">&quot;============================&quot;</span>);</span><br><span class="line">    Method setName = c1.getDeclaredMethod(<span class="string">&quot;setName&quot;</span>, String.class);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * invoke: 激活</span></span><br><span class="line"><span class="comment">     * invoke(执行方法的对象+原方法的参数1+原方法的参数2+...)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    setName.invoke(user, <span class="string">&quot;Weidows&quot;</span>);</span><br><span class="line">    System.out.println(user.getName());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过反射操作属性</span></span><br><span class="line">    System.out.println(<span class="string">&quot;============================&quot;</span>);</span><br><span class="line">    User user3 = (User) c1.newInstance();</span><br><span class="line">    Field name = c1.getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">    <span class="comment">//不能直接操作私有属性，我们需要关闭程序的安全监测，属性或方法的setAccessible(true)</span></span><br><span class="line">    name.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">    name.set(user3, <span class="string">&quot;齐下无贰&quot;</span>);</span><br><span class="line">    System.out.println(user3.getName());</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">      twenty_one.reflection.User@59f95c5d</span></span><br><span class="line"><span class="comment">      ============================</span></span><br><span class="line"><span class="comment">      twenty_one.reflection.User@5c8da962</span></span><br><span class="line"><span class="comment">      ============================</span></span><br><span class="line"><span class="comment">      Weidows</span></span><br><span class="line"><span class="comment">      ============================</span></span><br><span class="line"><span class="comment">      齐下无贰</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PerformanceInfluence</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    test1();</span><br><span class="line">    test2();</span><br><span class="line">    test3();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">      普通方式执行4ms</span></span><br><span class="line"><span class="comment">      反射方式,开启检测执行2794ms</span></span><br><span class="line"><span class="comment">      反射方式,关闭检测执行1771ms</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000000000</span>; i++) &#123;</span><br><span class="line">      user.getName();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">    System.out.println(<span class="string">&quot;普通方式执行&quot;</span> + (end - start) + <span class="string">&quot;ms&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    Class c1 = user.getClass();</span><br><span class="line">    Method getName = c1.getDeclaredMethod(<span class="string">&quot;getName&quot;</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000000000</span>; i++) &#123;</span><br><span class="line">      getName.invoke(user, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">    System.out.println(<span class="string">&quot;反射方式,开启检测执行&quot;</span> + (end - start) + <span class="string">&quot;ms&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    Class c1 = user.getClass();</span><br><span class="line">    Method getName = c1.getDeclaredMethod(<span class="string">&quot;getName&quot;</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">    getName.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000000000</span>; i++) &#123;</span><br><span class="line">      getName.invoke(user, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">    System.out.println(<span class="string">&quot;反射方式,关闭检测执行&quot;</span> + (end - start) + <span class="string">&quot;ms&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可见使用<code>反射方式执行效率远远远远低于正常执行</code>,关闭访问权限检测也只能降低部分性能损耗</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="反射操作泛型"><a href="#反射操作泛型" class="headerlink" title="反射操作泛型"></a>反射操作泛型</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.ParameterizedType;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Type;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Generic</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">(Map&lt;String, User&gt; map, List&lt;User&gt; list)</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Map&lt;String, User&gt; <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchMethodException </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取参数(map,list)的泛型参数(String,User)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Method method = Generic.class.getMethod(&quot;test01&quot;, Map.class, List.class);</span><br><span class="line">    Type[] genericParameterTypes = method.getGenericParameterTypes();</span><br><span class="line">    <span class="keyword">for</span> (Type genericParameterType : genericParameterTypes) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;范型参数&quot;</span> + genericParameterType);</span><br><span class="line">      <span class="keyword">if</span> (genericParameterType <span class="keyword">instanceof</span> ParameterizedType) &#123;</span><br><span class="line">        Type[] actualTypeAnguments = ((ParameterizedType) genericParameterType).getActualTypeArguments();</span><br><span class="line">        <span class="keyword">for</span> (Type actualTypeAngument : actualTypeAnguments) &#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;  实际参数范型&quot;</span> + actualTypeAngument);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;--------------------------------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取返回值的泛型参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Method method1 = Generic.class.getMethod(&quot;test02&quot;, <span class="keyword">null</span>);</span><br><span class="line">    Type getGenericReturnType = method1.getGenericReturnType();</span><br><span class="line">    <span class="keyword">if</span> (getGenericReturnType <span class="keyword">instanceof</span> ParameterizedType) &#123;</span><br><span class="line">      Type[] actualTypeArguments = ((ParameterizedType) getGenericReturnType).getActualTypeArguments();</span><br><span class="line">      <span class="keyword">for</span> (Type actualTypeArgument : actualTypeArguments) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;返回值范型&quot;</span> + actualTypeArgument);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    范型参数java.util.Map&lt;java.lang.String, twenty_one.reflection.User&gt;</span></span><br><span class="line"><span class="comment">    实际参数范型class java.lang.String</span></span><br><span class="line"><span class="comment">    实际参数范型class twenty_one.reflection.User</span></span><br><span class="line"><span class="comment">    范型参数java.util.List&lt;twenty_one.reflection.User&gt;</span></span><br><span class="line"><span class="comment">    实际参数范型class twenty_one.reflection.User</span></span><br><span class="line"><span class="comment">    --------------------------------------------</span></span><br><span class="line"><span class="comment">    返回值范型class java.lang.String</span></span><br><span class="line"><span class="comment">    返回值范型class twenty_one.reflection.User</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="反射操作注解"><a href="#反射操作注解" class="headerlink" title="反射操作注解"></a>反射操作注解</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Annotation</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, SecurityException </span>&#123;</span><br><span class="line">    <span class="comment">// * 通过反射获取注解</span></span><br><span class="line">    java.lang.annotation.Annotation[] annotations = Student1.class.getAnnotations();</span><br><span class="line">    <span class="keyword">for</span> (java.lang.annotation.Annotation annotation : annotations) &#123;</span><br><span class="line">      System.out.println(annotation);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// * 获取注解的value</span></span><br><span class="line">    Table annotation = Student1.class.getAnnotation(Table.class); //获取Student1类上Table类型的注解</span><br><span class="line">    System.out.println(annotation.value());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// * 获取指定的value</span></span><br><span class="line">    java.lang.reflect.Field f = Student1.class.getDeclaredField(&quot;name&quot;);</span><br><span class="line">    Field annotation1 = f.getAnnotation(Field.class);</span><br><span class="line">    System.out.println(annotation1.columnName() + <span class="string">&quot;\t&quot;</span> + annotation1.type() + <span class="string">&quot;\t&quot;</span> + annotation1.length());</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    <span class="doctag">@twenty</span>_one.reflection.Table(value=&quot;db_student&quot;)</span></span><br><span class="line"><span class="comment">    db_student</span></span><br><span class="line"><span class="comment">    db_name varchar 3</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Table(value = &quot;db_student&quot;)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student1</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Field(columnName = &quot;db_id&quot;, type = &quot;int&quot;, length = 10)</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">  <span class="meta">@Field(columnName = &quot;db_age&quot;, type = &quot;int&quot;, length = 10)</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">  <span class="meta">@Field(columnName = &quot;db_name&quot;, type = &quot;varchar&quot;, length = 3)</span></span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Student1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Student1</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> age, String name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.id = id;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.id = id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> age;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Student [age=&quot;</span> + age + <span class="string">&quot;, id=&quot;</span> + id + <span class="string">&quot;, name=&quot;</span> + name + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ! 类名的注解</span></span><br><span class="line"><span class="meta">@Target(ElementType.TYPE)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> Table &#123;</span><br><span class="line">  <span class="function">String <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ! 属性的注解</span></span><br><span class="line"><span class="meta">@Target(ElementType.FIELD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> Field &#123;</span><br><span class="line">  <span class="function">String <span class="title">columnName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">String <span class="title">type</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">length</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 注解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 注解 </tag>
            
            <tag> 反射 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🔥Java注解与反射复习~(壹)</title>
      <link href="post/Java/%E6%B3%A8%E8%A7%A3%E4%B8%8E%E5%8F%8D%E5%B0%84/1/"/>
      <url>post/Java/%E6%B3%A8%E8%A7%A3%E4%B8%8E%E5%8F%8D%E5%B0%84/1/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-19 00:14:17 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\注解与反射\1.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%86%85%E7%BD%AE%E6%B3%A8%E8%A7%A3">内置注解</a></li><li><a href="#%E5%85%83%E6%B3%A8%E8%A7%A3">元注解</a></li><li><a href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3">自定义注解</a></li><li><a href="#%E5%8F%8D%E5%B0%84">反射</a><ul><li><a href="#class-%E7%B1%BB">Class 类</a></li><li><a href="#%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B">类的加载过程</a></li></ul></li><li><a href="#%E5%AE%9E%E4%BE%8B%E5%8C%96%E4%B8%8E-static-%E5%8A%A0%E8%BD%BD">实例化与 static 加载</a><ul><li><a href="#%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E4%BC%9A%E5%8F%91%E7%94%9F%E7%B1%BB%E5%88%9D%E5%A7%8B%E5%8C%96">什么时候会发生类初始化?</a></li></ul></li><li><a href="#%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8">类加载器</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="内置注解"><a href="#内置注解" class="headerlink" title="内置注解"></a>内置注解</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Anno1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span> <span class="comment">//重写方法</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.toString();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Deprecated</span> <span class="comment">//表示弃用方法,但仍可使用</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@SuppressWarnings(&quot;all&quot;)</span> <span class="comment">//抑制警告</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    test();</span><br><span class="line">    test01();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="元注解"><a href="#元注解" class="headerlink" title="元注解"></a>元注解</h1><ul><li><p><code>作用于其他注解的注解</code></p></li><li><p>在 java.lang.annotation 包中可以找到.( @ Target , @Retention，@Documented , @Inherited )</p><ul><li>@Target :用于描述注解的使用范围(即:被描述的注解可以用在什么地方)</li><li>@Retention :表示需要在什么级别保存该注释信息,用于描述注解的生命周期(SOURCE &lt; CLASS &lt; RUNTIME)</li><li>@Document:说明该注解将被包含在 javadoc 中</li><li>@Inherited: 说明子类可以继承父类中的该注解</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@MyAnnotation</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Anno2</span> </span>&#123;</span><br><span class="line">  <span class="meta">@MyAnnotation</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Target 表示我们的注解可以用在哪些地方.</span></span><br><span class="line"><span class="meta">@Target(value = &#123; ElementType.METHOD, ElementType.TYPE &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Retention表示我们的注解在什么地方还有效。runtime&gt;class&gt;sources</span></span><br><span class="line"><span class="meta">@Retention(value = RetentionPolicy.RUNTIME)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Documented表示是否将我们的注解生成在Javadoc中</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Inherited子类可以继承父类的注解</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@interface</span> MyAnnotation &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h1><ul><li>使用@interface 自定义注解时,自动继承了 java.lang .annotation.Annotation 接口</li><li>@interface 用来声明一个注解,格式: public @ interface 注解名{定义内容}<ol><li>其中的每一个方法实际上是声明了一个配置参数.</li><li>方法的名称就是参数的名称.</li><li>返回值类型就是参数的类型(返回值只能是基本类型,Class , String , enum ).</li><li>可以通过 default 来声明参数的默认值</li><li>如果只有一个参数成员, 一般参数名为 value</li><li>注解元素必须要有值，我们定义注解元素时,经常使用空字符串，0 作为默认值.</li></ol></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Anno3</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//注解可以显示赋值，如果没有默认值 ，我们就必须给注解赋值</span></span><br><span class="line">  <span class="meta">@MyAnnotation2(name = &#123;&quot;Weidows&quot;, &quot;齐下无贰&quot;&#125;, age = 21)</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@MyAnnotation3(&quot;Weidows&quot;)</span> <span class="comment">//参数只有一个，且参数名为value</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD, ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> MyAnnotation2 &#123;</span><br><span class="line">  <span class="comment">//注解的参数:参数类型+参数名();</span></span><br><span class="line">  String[] name() <span class="keyword">default</span> &#123;<span class="string">&quot;&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">age</span><span class="params">()</span> <span class="keyword">default</span> 0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">id</span><span class="params">()</span> <span class="keyword">default</span> -1</span>; <span class="comment">// 如果默认值为-1,代表不存在。</span></span><br><span class="line"></span><br><span class="line">  <span class="function">String <span class="title">schools</span><span class="params">()</span> <span class="keyword">default</span> &quot;家里蹲大学&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Target</span>(value = &#123; ElementType.TYPE, ElementType.METHOD &#125;)</span></span><br><span class="line"><span class="comment"> * 只有一个参数时可以省略参数名,多个参数时不可省略</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE, ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> MyAnnotation3 &#123;</span><br><span class="line">  <span class="comment">//只有一个参数时，参数名为value时，使用时不需参数名</span></span><br><span class="line">  <span class="function">String <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>现在,注解定义和使用结束了,下面结合反射来读取注解数据.</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h1><ul><li>可以在运行时实现动态创建对象和编译,有很大的灵活性,但会影响一定性能</li></ul><h2 id="Class-类"><a href="#Class-类" class="headerlink" title="Class 类"></a>Class 类</h2><ul><li><p>Class 类时反射机制的根源,常用方法如下:</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210226151038.png" alt="20210226151038" /></li><li><p>获取 Class 类的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">    <span class="comment">//方式一：通过对象获取</span></span><br><span class="line">    Class c1 = <span class="keyword">new</span> Student().getClass();</span><br><span class="line">    System.out.println(c1);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方式二：通过forname获取</span></span><br><span class="line">    Class c2 = Class.forName(<span class="string">&quot;twenty_one.reflection.Person&quot;</span>);</span><br><span class="line">    System.out.println(c2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过类名.class获得(最可靠,高效)</span></span><br><span class="line">    Class c3 = Student.class;</span><br><span class="line">    System.out.println(c3);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方式四：基本内置类型的包装类都有一个TYPE属性</span></span><br><span class="line">    Class c4 = Integer.TYPE;</span><br><span class="line">    System.out.println(c4);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> String name;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Person&#123;&quot;</span> + <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = <span class="string">&quot;Student&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">extends</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Teacher</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = <span class="string">&quot;Teacher&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li><li><p>Class 对象类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Class c1 = Object.class; //类</span><br><span class="line">    Class c2 = Runnable.class; //接口</span><br><span class="line">    Class c3 = String[].class; //- -维数组</span><br><span class="line">    Class c4 = <span class="keyword">int</span>[][].class; //二维数组</span><br><span class="line">    Class c5 = Override.class; //注解</span><br><span class="line">    Class c6 = ElementType.class; //枚举</span><br><span class="line">    Class c7 = Integer.class; //基本数据类型</span><br><span class="line">    Class c8 = <span class="keyword">void</span>.class; //<span class="keyword">void</span></span><br><span class="line">    Class c9 = Class.class; //Class</span><br><span class="line">    System.out.println(c1);<span class="comment">//class java.lang.Object</span></span><br><span class="line">    System.out.println(c2);<span class="comment">//interface java.lang.Comparable</span></span><br><span class="line">    System.out.println(c3);<span class="comment">//class [Ljava.lang.String;</span></span><br><span class="line">    System.out.println(c4);<span class="comment">//class [[I</span></span><br><span class="line">    System.out.println(c5);<span class="comment">//interface java.lang.Override</span></span><br><span class="line">    System.out.println(c6);<span class="comment">//class java.lang.annotation.ElementType</span></span><br><span class="line">    System.out.println(c7);<span class="comment">//class java.lang.Integer</span></span><br><span class="line">    System.out.println(c8);<span class="comment">//void</span></span><br><span class="line">    System.out.println(c9);<span class="comment">//class java.lang.Class</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h2 id="类的加载过程"><a href="#类的加载过程" class="headerlink" title="类的加载过程"></a>类的加载过程</h2><ol><li><p>加载: 首先类加载器读取.class 字节码文件到方法区内存,转换数据结构为运行时,并生成 java.lang.Class 对象.</p><ul><li>在反射中获取 Class 对象并不是创建,而是从内存中获取.</li></ul></li><li><p>链接:将 Java 类的二进制代码合并到 JVM 的运行状态之中的过程。</p><ul><li>验证:确保加载的类信息符合 JVM 规范，没有安全方面的问题</li><li>准备:正式为类变量(static) 分配内存并设置类变量默认初始值的阶段,这些内存都将在方法区中进行分配。</li><li>解析:虚拟机常量池内的符号引用(常量名)替换为直接引用(地址)的过程。</li></ul></li><li><p>初始化:</p><ul><li>执行类构造器&lt; clinit&gt; ()方法的过程。<code>类构造器&lt; clinit&gt; ()方法是由编译期自动收集类中所有类变量的赋值动作和静态代码块中的语句合并产生的。</code>(类构造 器是构造类信息的，不是构造该类对象的构造器)。</li><li>当初始化一个类的时候，如果发现其父类还没有进行初始化，则需要先触发其父类的初始化。</li><li>虚拟机会保证一 个类的 ()方法在多线程环境中被正确加锁和同步。</li></ul><hr></li></ol><ul><li><p>例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    A a = <span class="keyword">new</span> A();</span><br><span class="line">    System.out.println(A.m);<span class="comment">//300</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      1.加载到内存，产生一个类对应Class对象</span></span><br><span class="line"><span class="comment">      2.链接，链接结束后m=◎</span></span><br><span class="line"><span class="comment">      3.初始化</span></span><br><span class="line"><span class="comment">      &lt;clinit&gt;()&#123;</span></span><br><span class="line"><span class="comment">          m=100;</span></span><br><span class="line"><span class="comment">          System.out.println( &quot;A类静态代码块初始化&quot;);</span></span><br><span class="line"><span class="comment">          m = 300;</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">  <span class="comment">// * 1.1</span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">int</span> m = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// * 1.2</span></span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;A类静态代码块初始化&quot;</span>);</span><br><span class="line">    m = <span class="number">300</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// * 2</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">A</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;A类的构造初始化&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210226172346.png" alt="20210226172346" /></li></ul><hr><h1 id="实例化与-static-加载"><a href="#实例化与-static-加载" class="headerlink" title="实例化与 static 加载"></a>实例化与 static 加载</h1><ul><li><p>尝试下实例化与否对 static 资源调用的影响</p></li><li><p>实例化+调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    A a = <span class="keyword">new</span> A();</span><br><span class="line">    System.out.println(A.m);<span class="comment">//300</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">A</span>类静态代码块初始化</span><br><span class="line"><span class="keyword">A</span>类的构造初始化</span><br><span class="line"><span class="number">300</span></span><br></pre></td></tr></table></figure><hr></li><li><p>实例化+不调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    A a = <span class="keyword">new</span> A();</span><br><span class="line">    <span class="comment">// System.out.println(A.m);//300</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">A</span>类静态代码块初始化</span><br><span class="line"><span class="keyword">A</span>类的构造初始化</span><br></pre></td></tr></table></figure><hr></li><li><p>不实例化+调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// A a = new A();</span></span><br><span class="line">    System.out.println(A.m);<span class="comment">//300</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A类静态代码块初始化</span><br><span class="line"><span class="number">300</span></span><br></pre></td></tr></table></figure></li><li><p>可以发现在实例化对象之后调用 static 资源,并不会再次执行静态代码块</p><ul><li>如果没实例化的情况下调取 static 资源,类会加载,但不会执行构造器</li></ul></li></ul><hr><h2 id="什么时候会发生类初始化"><a href="#什么时候会发生类初始化" class="headerlink" title="什么时候会发生类初始化?"></a>什么时候会发生类初始化?</h2><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210226172913.png" alt="20210226172913" /><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo4</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;main类被加载&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">    <span class="comment">//1.主动引用</span></span><br><span class="line">    <span class="comment">// Son son = new Son();</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * main类被加载</span></span><br><span class="line"><span class="comment">    * 父类被加载</span></span><br><span class="line"><span class="comment">    * 子类被加载</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//反射也会产生主动引用</span></span><br><span class="line">    <span class="comment">// Class.forName(&quot;twenty_one.reflection.Son&quot;);</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * main类被加载</span></span><br><span class="line"><span class="comment">     * 父类被加载</span></span><br><span class="line"><span class="comment">     * 子类被加载</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//不会产生类的引用的方法</span></span><br><span class="line">    <span class="comment">// System.out.println(Son.b);</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * main类被加载</span></span><br><span class="line"><span class="comment">    * 父类被加载</span></span><br><span class="line"><span class="comment">    * 2</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//只会main类被加载</span></span><br><span class="line">    <span class="comment">// System.out.println(Son.M);</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * main类被加载</span></span><br><span class="line"><span class="comment">     * 1</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//全加载</span></span><br><span class="line">    System.out.println(Son.m);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * main类被加载</span></span><br><span class="line"><span class="comment">     * 父类被加载</span></span><br><span class="line"><span class="comment">     * 子类被加载</span></span><br><span class="line"><span class="comment">     * 100</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">int</span> b = <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;父类被加载&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;子类被加载&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">int</span> m = <span class="number">100</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> M = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="类加载器"><a href="#类加载器" class="headerlink" title="类加载器"></a>类加载器</h1><ul><li><p>作用</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210227171646.png" alt="20210227171646" /></li><li><p>分类</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210227172006.png" alt="20210227172006" /><hr></li><li><p>操作类加载器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo5</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">    <span class="comment">//获取系统的类加载器</span></span><br><span class="line">    ClassLoader systemClassLoader = ClassLoader.getSystemClassLoader();</span><br><span class="line">    System.out.println(systemClassLoader);<span class="comment">//jdk.internal.loader.ClassLoaders$AppClassLoader@4459eb14</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取系统类加载器的父类加载器--&gt;扩展类加载器</span></span><br><span class="line">    ClassLoader parent = systemClassLoader.getParent();</span><br><span class="line">    System.out.println(parent);<span class="comment">//jdk.internal.loader.ClassLoaders$PlatformClassLoader@7960847b</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取扩展类加载器的父类加载器--&gt;根加载器(C/C++)</span></span><br><span class="line">    ClassLoader grantparent = parent.getParent();</span><br><span class="line">    System.out.println(grantparent);<span class="comment">//null</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//测试当前类是哪个加载器加载的</span></span><br><span class="line">    ClassLoader classLoader = Demo5.class.getClassLoader();</span><br><span class="line">    System.out.println(classLoader);<span class="comment">//jdk.internal.loader.ClassLoaders$AppClassLoader@4459eb14</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//测试JDK内置的类是谁加载的</span></span><br><span class="line">    ClassLoader classLoader1 = Class.forName(<span class="string">&quot;java.lang.Object&quot;</span>).getClassLoader();</span><br><span class="line">    System.out.println(classLoader1);<span class="comment">//null</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//如何获得系统类加载器可以加载的路径</span></span><br><span class="line">    System.out.println(System.getProperty(<span class="string">&quot;java.class.path&quot;</span>));<span class="comment">//D:\Game\Weidows\Java\target\classes;D:\Game\Scoop\persist\maven\mvn-repository\commons-io\commons-io\2.8.0\commons-io-2.8.0.jar</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 注解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 注解 </tag>
            
            <tag> 反射 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🌭回顾一下Java多线程~(叁)</title>
      <link href="post/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/3/"/>
      <url>post/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/3/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-19 00:14:47 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\多线程\3.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81-reentrantlock">可重入锁 ReentrantLock</a></li><li><a href="#%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8E%E5%BE%AA%E7%8E%AF%E6%8E%A7%E5%88%B6">多线程与循环控制</a></li><li><a href="#%E5%BB%B6%E8%BF%9F%E5%AF%B9%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%BD%B1%E5%93%8D">延迟对多线程的影响</a><ul><li><a href="#%E4%B8%80">一</a></li><li><a href="#%E4%BA%8C">二</a></li><li><a href="#%E4%B8%89">三</a></li></ul></li><li><a href="#%E7%BA%BF%E7%A8%8B%E9%80%9A%E4%BF%A1">线程通信</a></li><li><a href="#%E7%BA%BF%E7%A8%8B%E6%B1%A0">线程池</a></li><li><a href="#over">Over</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="可重入锁-ReentrantLock"><a href="#可重入锁-ReentrantLock" class="headerlink" title="可重入锁 ReentrantLock"></a>可重入锁 ReentrantLock</h1><ul><li><p>ReentrantLock 类实现了 java.util.concurrent.locks.Lock 接口</p></li><li><p>与 synchronized 区别:</p><ul><li>ReentrantLock 是显式加解锁,它只能锁代码块</li><li>性能比 synchronized 好</li></ul></li><li><p>使用优先度</p><ul><li>Lock &gt;同步代码块(已经进入了方法体，分配了相应资源) &gt;同步方法(在方法体之外)</li></ul></li><li><p>注意点: 加解锁最好要在 try-finally 里</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  lock.lock(); <span class="comment">// 加锁</span></span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">  lock.unlock(); <span class="comment">// 解锁</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestLock</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> ticketNums = <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">new</span> ReentrantLock(); <span class="comment">// 定义Lock锁</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        lock.lock(); <span class="comment">// 加锁</span></span><br><span class="line">        <span class="keyword">if</span> (ticketNums &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          System.out.println(Thread.currentThread().getName() + <span class="string">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class="string">&quot;票&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock(); <span class="comment">// 解锁</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          Thread.sleep(<span class="number">500</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    TestLock testLock = <span class="keyword">new</span> TestLock();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Thread(testLock, <span class="string">&quot;a&quot;</span>).start();</span><br><span class="line">    <span class="keyword">new</span> Thread(testLock, <span class="string">&quot;b&quot;</span>).start();</span><br><span class="line">    <span class="keyword">new</span> Thread(testLock, <span class="string">&quot;c&quot;</span>).start();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>结果</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">a</span>--&gt;</span>拿到了第<span class="number">10</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">9</span>票</span><br><span class="line"><span class="function"><span class="title">b</span>--&gt;</span>拿到了第<span class="number">8</span>票</span><br><span class="line"><span class="function"><span class="title">b</span>--&gt;</span>拿到了第<span class="number">7</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">6</span>票</span><br><span class="line"><span class="function"><span class="title">a</span>--&gt;</span>拿到了第<span class="number">5</span>票</span><br><span class="line"><span class="function"><span class="title">b</span>--&gt;</span>拿到了第<span class="number">4</span>票</span><br><span class="line"><span class="function"><span class="title">a</span>--&gt;</span>拿到了第<span class="number">3</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">2</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">1</span>票</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="多线程与循环控制"><a href="#多线程与循环控制" class="headerlink" title="多线程与循环控制"></a>多线程与循环控制</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestLock</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> ticketNums = <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">new</span> ReentrantLock(); <span class="comment">// 定义Lock锁</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (ticketNums &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        lock.lock(); <span class="comment">// 加锁</span></span><br><span class="line">        Thread.sleep(<span class="number">500</span>);</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class="string">&quot;票&quot;</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock(); <span class="comment">// 解锁</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    TestLock testLock = <span class="keyword">new</span> TestLock();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Thread(testLock, <span class="string">&quot;a&quot;</span>).start();</span><br><span class="line">    <span class="keyword">new</span> Thread(testLock, <span class="string">&quot;b&quot;</span>).start();</span><br><span class="line">    <span class="keyword">new</span> Thread(testLock, <span class="string">&quot;c&quot;</span>).start();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>上面代码 while 循环会存在判断失误</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">10</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">9</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">8</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">7</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">6</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">5</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">4</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">3</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">2</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">1</span>票</span><br><span class="line"><span class="function"><span class="title">b</span>--&gt;</span>拿到了第<span class="number">0</span>票</span><br><span class="line"><span class="function"><span class="title">a</span>--&gt;</span>拿到了第-<span class="number">1</span>票</span><br></pre></td></tr></table></figure></li><li><p>ticketNums 在判断之后被多次修改</p><ul><li>上面 10~1 次都是 c 线程执行的,它执行后轮到 b 和 a</li><li>但是 b 与 a 线程实际上是在<code>ticketNums=10</code>时进入的循环,所以会导致<code>-1</code>出现</li></ul></li><li><p>所以建议是:</p><ul><li>遇到多线程循环控制时,直接<code>while(true)</code>,然后在内部用<code>if</code></li></ul></li></ul><hr><h1 id="延迟对多线程的影响"><a href="#延迟对多线程的影响" class="headerlink" title="延迟对多线程的影响"></a>延迟对多线程的影响</h1><blockquote><p>下面三个例子数据都没错,关键看并发数量和执行时间</p></blockquote><h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><ul><li><p>瞬间执行完,资源被单一线程全部抢占</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestLock</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> ticketNums = <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">new</span> ReentrantLock(); <span class="comment">// 定义Lock锁</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        lock.lock(); <span class="comment">// 加锁</span></span><br><span class="line">        <span class="keyword">if</span> (ticketNums &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          System.out.println(Thread.currentThread().getName() + <span class="string">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class="string">&quot;票&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock(); <span class="comment">// 解锁</span></span><br><span class="line">        <span class="comment">// try &#123;</span></span><br><span class="line">        <span class="comment">//   Thread.sleep(500);</span></span><br><span class="line">        <span class="comment">// &#125; catch (InterruptedException e) &#123;</span></span><br><span class="line">        <span class="comment">//   e.printStackTrace();</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    TestLock testLock = <span class="keyword">new</span> TestLock();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Thread(testLock, <span class="string">&quot;a&quot;</span>).start();</span><br><span class="line">    <span class="keyword">new</span> Thread(testLock, <span class="string">&quot;b&quot;</span>).start();</span><br><span class="line">    <span class="keyword">new</span> Thread(testLock, <span class="string">&quot;c&quot;</span>).start();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">9</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">8</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">7</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">6</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">5</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">4</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">3</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">2</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">1</span>票</span><br></pre></td></tr></table></figure><hr></li></ul><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><ul><li><p>给他加个延迟试试:</p><ul><li>三线程并发,资源分配合理</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      lock.lock(); <span class="comment">// 加锁</span></span><br><span class="line">      <span class="keyword">if</span> (ticketNums &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class="string">&quot;票&quot;</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      lock.unlock(); <span class="comment">// 解锁</span></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        Thread.sleep(<span class="number">500</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">b</span>--&gt;</span>拿到了第<span class="number">10</span>票</span><br><span class="line"><span class="function"><span class="title">a</span>--&gt;</span>拿到了第<span class="number">9</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">8</span>票</span><br><span class="line"><span class="function"><span class="title">b</span>--&gt;</span>拿到了第<span class="number">7</span>票</span><br><span class="line"><span class="function"><span class="title">a</span>--&gt;</span>拿到了第<span class="number">6</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">5</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">4</span>票</span><br><span class="line"><span class="function"><span class="title">a</span>--&gt;</span>拿到了第<span class="number">3</span>票</span><br><span class="line"><span class="function"><span class="title">b</span>--&gt;</span>拿到了第<span class="number">2</span>票</span><br><span class="line"><span class="function"><span class="title">b</span>--&gt;</span>拿到了第<span class="number">1</span>票</span><br></pre></td></tr></table></figure><hr></li></ul><h2 id="三"><a href="#三" class="headerlink" title="三"></a>三</h2><ul><li><p>再试试延迟之后解开同步锁</p><ul><li>单线执行,资源分配不平衡</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      lock.lock(); <span class="comment">// 加锁</span></span><br><span class="line">      <span class="keyword">if</span> (ticketNums &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class="string">&quot;票&quot;</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        Thread.sleep(<span class="number">500</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">      lock.unlock(); <span class="comment">// 解锁</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">a</span>--&gt;</span>拿到了第<span class="number">10</span>票</span><br><span class="line"><span class="function"><span class="title">a</span>--&gt;</span>拿到了第<span class="number">9</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">8</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">7</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">6</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">5</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">4</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">3</span>票</span><br><span class="line"><span class="function"><span class="title">c</span>--&gt;</span>拿到了第<span class="number">2</span>票</span><br><span class="line"><span class="function"><span class="title">b</span>--&gt;</span>拿到了第<span class="number">1</span>票</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="线程通信"><a href="#线程通信" class="headerlink" title="线程通信"></a>线程通信</h1><blockquote><p><a href="https://github.com/Weidows/Weidows/blob/master/Java/src/main/java/twenty/november/thread/producer_and_customer/Test.java">生产者与消费者模型</a></p></blockquote><hr><h1 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h1><ul><li><p>线程池的出现是为了方便大量的线程创建,回收和管理</p></li><li><p>需要了解 <code>ExecutorService</code> 线程池接口;以及 <code>Executors</code> 线程池工具类.</p><ul><li><p>corePoolSize: 核心池的大小</p></li><li><p>maximumPoolSize:最大线程数</p></li><li><p>keepAliveTime: 线程没有任务时最多保持多长时间后会终止</p></li><li><p>void execute(Runnable command) :执行任务/命令,没有返回值，一般用来执 Runnable</p></li><li><p><T> Future<T> submit(Callable<T> task) :执行任务,有返回值，一般用来执行 Callable</p></li></ul></li><li><p>例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThreadPool</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 1.创建服务，创建线程池</span></span><br><span class="line">    ExecutorService service = Executors.newFixedThreadPool(<span class="number">10</span>); <span class="comment">// 参数为线程池大小</span></span><br><span class="line">    Runnable myThread = () -&gt; &#123;</span><br><span class="line">      System.out.println(Thread.currentThread().getName());</span><br><span class="line">    &#125;;</span><br><span class="line">    Callable&lt;String&gt; myThread2 = () -&gt; &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;Running in &quot;</span> + Thread.currentThread().getName();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 执行:前五个是Runnable,后五个是Callable</span></span><br><span class="line">    service.execute(myThread);</span><br><span class="line">    service.execute(myThread);</span><br><span class="line">    service.execute(myThread);</span><br><span class="line">    service.execute(myThread);</span><br><span class="line">    service.execute(myThread);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      System.out.println(service.submit(myThread2).get());</span><br><span class="line">      System.out.println(service.submit(myThread2).get());</span><br><span class="line">      System.out.println(service.submit(myThread2).get());</span><br><span class="line">      System.out.println(service.submit(myThread2).get());</span><br><span class="line">      System.out.println(service.submit(myThread2).get());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException | ExecutionException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.关闭连接</span></span><br><span class="line">    service.shutdown();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// class MyThread implements Runnable &#123;</span></span><br><span class="line"><span class="comment">//   @Override</span></span><br><span class="line"><span class="comment">//   public void run() &#123;</span></span><br><span class="line"><span class="comment">//     System.out.println(Thread.currentThread().getName());</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// class MyThread2 implements Callable &#123;</span></span><br><span class="line"><span class="comment">//   @Override</span></span><br><span class="line"><span class="comment">//   public Object call() throws Exception &#123;</span></span><br><span class="line"><span class="comment">//     return &quot;Running in &quot; + Thread.currentThread().getName();</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure></li><li><p>结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pool<span class="number">-1</span>-thread<span class="number">-2</span></span><br><span class="line">Running <span class="keyword">in</span> pool<span class="number">-1</span>-thread<span class="number">-6</span></span><br><span class="line">pool<span class="number">-1</span>-thread<span class="number">-4</span></span><br><span class="line">pool<span class="number">-1</span>-thread<span class="number">-5</span></span><br><span class="line">pool<span class="number">-1</span>-thread<span class="number">-3</span></span><br><span class="line">pool<span class="number">-1</span>-thread<span class="number">-1</span></span><br><span class="line">Running <span class="keyword">in</span> pool<span class="number">-1</span>-thread<span class="number">-7</span></span><br><span class="line">Running <span class="keyword">in</span> pool<span class="number">-1</span>-thread<span class="number">-8</span></span><br><span class="line">Running <span class="keyword">in</span> pool<span class="number">-1</span>-thread<span class="number">-9</span></span><br><span class="line">Running <span class="keyword">in</span> pool<span class="number">-1</span>-thread<span class="number">-10</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="Over"><a href="#Over" class="headerlink" title="Over"></a>Over</h1>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 多线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 多线程 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🌭回顾一下Java多线程~(贰)</title>
      <link href="post/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/2/"/>
      <url>post/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/2/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-02-24 17:17:20 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\多线程\2.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E7%BA%BF%E7%A8%8B%E7%8A%B6%E6%80%81">线程状态</a></li><li><a href="#%E7%BA%BF%E7%A8%8B%E4%BC%98%E5%85%88%E7%BA%A7">线程优先级</a></li><li><a href="#%E5%AE%88%E6%8A%A4%E7%BA%BF%E7%A8%8B-daemon">守护线程 daemon</a></li><li><a href="#%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5">线程同步</a><ul><li><a href="#%E4%B9%B0%E7%A5%A8">买票</a></li><li><a href="#%E9%93%B6%E8%A1%8C%E5%8F%96%E6%AC%BE">银行取款</a><ul><li><a href="#%E8%AF%95%E9%94%99">试错</a></li></ul></li><li><a href="#list">List</a></li></ul></li><li><a href="#%E6%AD%BB%E9%94%81">死锁</a><ul><li><a href="#%E4%BA%A7%E7%94%9F%E6%9D%A1%E4%BB%B6">产生条件</a></li><li><a href="#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">解决方案</a></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="线程状态"><a href="#线程状态" class="headerlink" title="线程状态"></a>线程状态</h1><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210221232406.png" alt="20210221232406" /><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestState</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    Thread thread = <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      System.out.println(<span class="string">&quot;///&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//观察状态</span></span><br><span class="line">    Thread.State state = thread.getState();</span><br><span class="line">    System.out.println(state); <span class="comment">//NEW</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//观察后启动</span></span><br><span class="line">    thread.start(); <span class="comment">//启动线程</span></span><br><span class="line">    state = thread.getState();</span><br><span class="line">    System.out.println(); <span class="comment">//Run</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (state != Thread.State.TERMINATED) &#123; <span class="comment">//只要线程不停止，就一直输出状态</span></span><br><span class="line">      Thread.sleep(<span class="number">100</span>);</span><br><span class="line">      state = thread.getState(); <span class="comment">//更新线程状态</span></span><br><span class="line">      System.out.println(state); <span class="comment">//输出状态</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//thread.start();   报错，因为已经死亡的线程不能再启动</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="线程优先级"><a href="#线程优先级" class="headerlink" title="线程优先级"></a>线程优先级</h1><ul><li><p>线程的优先级用数字表示，范围从 1~10.</p><ul><li>Thread.MIN_PRIORITY = 1;</li><li>Thread.MAX_PRIORITY = 10;</li><li>Thread.NORM_PRIORITY = 5;</li></ul></li><li><p>使用一下方法改变或获取优先级</p><ul><li>​.getPriority()</li><li>.setPriority(int xxx)</li></ul></li><li><p>不做举例了,跳过.</p></li></ul><hr><h1 id="守护线程-daemon"><a href="#守护线程-daemon" class="headerlink" title="守护线程 daemon"></a>守护线程 daemon</h1><ul><li>线程分为<code>用户线程</code>和<code>守护线程</code>,用户线程必须执行完毕程序才终止,而守护线程不做要求.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDaemon</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ! 上帝</span></span><br><span class="line">    Runnable god = () -&gt; &#123;</span><br><span class="line">      <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;上帝保佑你&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// ! 你</span></span><br><span class="line">    Runnable you = () -&gt; &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;你一生都开心的活着&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      System.out.println(<span class="string">&quot;GoodBye World&quot;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    Thread godThread = <span class="keyword">new</span> Thread(god);</span><br><span class="line">    godThread.setDaemon(<span class="keyword">true</span>); <span class="comment">//默认false表示是用户线程，正常的线程都是用户线程</span></span><br><span class="line">    godThread.start();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Thread(you).start();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>结果: “you”线程终止时程序就结束了.</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">...</span></span><br><span class="line">上帝保佑你</span><br><span class="line">上帝保佑你</span><br><span class="line">你一生都开心的活着</span><br><span class="line">你一生都开心的活着</span><br><span class="line">你一生都开心的活着</span><br><span class="line">你一生都开心的活着</span><br><span class="line">上帝保佑你</span><br><span class="line">上帝保佑你</span><br><span class="line">上帝保佑你</span><br><span class="line">上帝保佑你</span><br><span class="line">上帝保佑你</span><br><span class="line">上帝保佑你</span><br><span class="line">上帝保佑你</span><br><span class="line">上帝保佑你</span><br><span class="line">上帝保佑你</span><br><span class="line">上帝保佑你</span><br><span class="line">上帝保佑你</span><br><span class="line">上帝保佑你</span><br><span class="line">GoodBye World</span><br><span class="line">上帝保佑你</span><br><span class="line">上帝保佑你</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h1><ul><li>多个线程操作同一资源时会有问题出现,用 <code>synchronized</code> 同步.</li></ul><h2 id="买票"><a href="#买票" class="headerlink" title="买票"></a>买票</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Ticket</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> ticketNums = <span class="number">10</span>; <span class="comment">//票数</span></span><br><span class="line">  <span class="keyword">boolean</span> flag = <span class="keyword">true</span>; <span class="comment">//外部停止方法</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">      buy();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">buy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//判断是否有票</span></span><br><span class="line">    <span class="keyword">if</span> (ticketNums &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">      flag = <span class="keyword">false</span>;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//模拟延时</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      Thread.sleep(<span class="number">200</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(Thread.currentThread().getName() + <span class="string">&quot;--&gt;得到倒数第&quot;</span> + ticketNums-- + <span class="string">&quot;票&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Ticket ticket = <span class="keyword">new</span> Ticket();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Thread(ticket, <span class="string">&quot;小明&quot;</span>).start();</span><br><span class="line">    <span class="keyword">new</span> Thread(ticket, <span class="string">&quot;老师&quot;</span>).start();</span><br><span class="line">    <span class="keyword">new</span> Thread(ticket, <span class="string">&quot;黄牛&quot;</span>).start();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>结果</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">小明<span class="comment">--&gt;得到倒数第10票</span></span><br><span class="line">小明<span class="comment">--&gt;得到倒数第9票</span></span><br><span class="line">小明<span class="comment">--&gt;得到倒数第8票</span></span><br><span class="line">小明<span class="comment">--&gt;得到倒数第7票</span></span><br><span class="line">小明<span class="comment">--&gt;得到倒数第6票</span></span><br><span class="line">小明<span class="comment">--&gt;得到倒数第5票</span></span><br><span class="line">小明<span class="comment">--&gt;得到倒数第4票</span></span><br><span class="line">小明<span class="comment">--&gt;得到倒数第3票</span></span><br><span class="line">小明<span class="comment">--&gt;得到倒数第2票</span></span><br><span class="line">小明<span class="comment">--&gt;得到倒数第1票</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="银行取款"><a href="#银行取款" class="headerlink" title="银行取款"></a>银行取款</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Bank</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Account account = <span class="keyword">new</span> Account(<span class="keyword">new</span> BigDecimal(<span class="number">100</span>), <span class="string">&quot;我的账户&quot;</span>);</span><br><span class="line"></span><br><span class="line">    DrawingChannel a = <span class="keyword">new</span> DrawingChannel(account, <span class="keyword">new</span> BigDecimal(<span class="number">50</span>), <span class="string">&quot;A&quot;</span>);</span><br><span class="line">    DrawingChannel b = <span class="keyword">new</span> DrawingChannel(account, <span class="keyword">new</span> BigDecimal(<span class="number">100</span>), <span class="string">&quot;B&quot;</span>);</span><br><span class="line"></span><br><span class="line">    a.start();</span><br><span class="line">    b.start();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//账户</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Account</span> </span>&#123;</span><br><span class="line">  BigDecimal balance;<span class="comment">//余额</span></span><br><span class="line">  <span class="keyword">final</span> String name; <span class="comment">//卡名</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Account</span><span class="params">(BigDecimal balance, String name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.balance = balance;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 银行：模拟取款</span></span><br><span class="line"><span class="comment"> * * 这里之所以没用实现Runnable接口的方式是为了调用Thread类中一些方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DrawingChannel</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> Account account; <span class="comment">//账户</span></span><br><span class="line">  BigDecimal drawingMoney; <span class="comment">//取了多少钱</span></span><br><span class="line">  BigDecimal nowMoney; <span class="comment">//现在手里有多少钱</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">DrawingChannel</span><span class="params">(Account account, BigDecimal drawingMoney, String name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(name);</span><br><span class="line">    <span class="keyword">this</span>.account = account;</span><br><span class="line">    <span class="keyword">this</span>.drawingMoney = drawingMoney;</span><br><span class="line">    <span class="keyword">this</span>.nowMoney = <span class="keyword">new</span> BigDecimal(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (account) &#123;</span><br><span class="line">      <span class="comment">//判断有没有钱</span></span><br><span class="line">      <span class="keyword">if</span> (account.balance.compareTo(drawingMoney) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        System.out.println(account.name + <span class="string">&quot;钱不够&quot;</span> + drawingMoney + <span class="string">&quot;,&quot;</span> + <span class="keyword">this</span>.getName() + <span class="string">&quot;无法取走&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 放大错误</span></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        sleep(<span class="number">1000</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">      draw();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//卡内余额 = 余额 - 取的钱</span></span><br><span class="line">    account.balance = account.balance.subtract(drawingMoney);</span><br><span class="line">    System.out.println(<span class="keyword">this</span>.getName() + <span class="string">&quot;取走&quot;</span> + drawingMoney);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//手里的钱</span></span><br><span class="line">    nowMoney = nowMoney.add(drawingMoney);</span><br><span class="line"></span><br><span class="line">    System.out.println(account.name + <span class="string">&quot;余额为：&quot;</span> + account.balance);</span><br><span class="line">    System.out.println(<span class="keyword">this</span>.getName() + <span class="string">&quot;手里的钱：&quot;</span> + nowMoney);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>预期结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A取走<span class="number">50</span></span><br><span class="line">我的账户余额为：<span class="number">50</span></span><br><span class="line">A手里的钱：<span class="number">50</span></span><br><span class="line">我的账户钱不够<span class="number">100</span>,B无法取走</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="试错"><a href="#试错" class="headerlink" title="试错"></a>试错</h3><ul><li><p>熟练使用.sleep()试错</p><ul><li><p>试错前</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我的账户钱不够<span class="number">100</span>,B无法取走</span><br><span class="line">我的账户余额为：<span class="number">50</span></span><br><span class="line">A手里的钱：<span class="number">50</span></span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>试错后</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">B 取走 <span class="number">100</span></span><br><span class="line">A 取走 <span class="number">50</span></span><br><span class="line">我的账户余额为：<span class="number">50</span></span><br><span class="line">我的账户余额为：<span class="number">50</span></span><br><span class="line">A 手里的钱：<span class="number">50</span></span><br><span class="line">B 手里的钱：<span class="number">100</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><ul><li><p>多个线程同时操作 List 对象时可能会存在覆写(线程不安全)</p></li><li><p>非线程同步</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestList</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">        list.add(Thread.currentThread().getName());</span><br><span class="line">      &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line">    Thread.sleep(<span class="number">3000</span>); <span class="comment">// 延时,为了等上面执行完毕</span></span><br><span class="line">    System.out.println(list.size());<span class="comment">//输出：9992</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li><li><p>线程同步</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestList</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (list) &#123;</span><br><span class="line">          list.add(Thread.currentThread().getName());</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line">    Thread.sleep(<span class="number">3000</span>); <span class="comment">// 延时,为了等上面执行完毕</span></span><br><span class="line">    System.out.println(list.size());<span class="comment">//输出：10000</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li><li><p>线程安全 List</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CopyOnWriteArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JUC</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    List&lt;String&gt; list = <span class="keyword">new</span> CopyOnWriteArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">        list.add(Thread.currentThread().getName());</span><br><span class="line">      &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(list.size());<span class="comment">//输出：10000</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h1><ul><li><p>两线程在各自拥有一个对象的锁时都等待对方线程释放对象的锁</p></li><li><p>也有可能很多线程产生环形死锁或者更复杂的.</p></li><li><p>如下例子就会产生死锁</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//死锁：多个线程互相抱着对方需要的资源</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeadLock</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Makeup m1 = <span class="keyword">new</span> Makeup(<span class="number">0</span>, <span class="string">&quot;小黑&quot;</span>);</span><br><span class="line">    Makeup m2 = <span class="keyword">new</span> Makeup(<span class="number">1</span>, <span class="string">&quot;小白&quot;</span>);</span><br><span class="line"></span><br><span class="line">    m1.start();</span><br><span class="line">    m2.start();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//口红</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lipstick</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//镜子</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mirror</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//化妆</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Makeup</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">  <span class="comment">//需要的资源只有一份，用static来保证只有一份</span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">final</span> Lipstick lipstick = <span class="keyword">new</span> Lipstick();</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">final</span> Mirror mirror = <span class="keyword">new</span> Mirror();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> choice; <span class="comment">//选择</span></span><br><span class="line">  String name; <span class="comment">//使用化妆品的人</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Makeup</span><span class="params">(<span class="keyword">int</span> choice, String name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.choice = choice;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//化妆</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      makeup();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//化妆，互相持有对方的锁，就是需要拿到对方的资源</span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">makeup</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (choice == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">synchronized</span> (lipstick) &#123; <span class="comment">//获得口红的锁</span></span><br><span class="line">        System.out.println(<span class="keyword">this</span>.name + <span class="string">&quot;获得口红的锁&quot;</span>);</span><br><span class="line">        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">synchronized</span> (mirror) &#123; <span class="comment">//一秒钟后想获得镜子的锁</span></span><br><span class="line">          System.out.println(<span class="keyword">this</span>.name + <span class="string">&quot;获得镜子的锁&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">synchronized</span> (mirror) &#123; <span class="comment">//获得镜子的锁</span></span><br><span class="line">        System.out.println(<span class="keyword">this</span>.name + <span class="string">&quot;获得镜子的锁&quot;</span>);</span><br><span class="line">        Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">        <span class="keyword">synchronized</span> (lipstick) &#123; <span class="comment">//两秒钟后想获得口红的锁</span></span><br><span class="line">          System.out.println(<span class="keyword">this</span>.name + <span class="string">&quot;获得口红的锁&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="产生条件"><a href="#产生条件" class="headerlink" title="产生条件"></a>产生条件</h2><ul><li><p>四个必要条件:</p><ol><li>互斥条件：一个资源每次只能被一个进程使用。</li><li>请求与保持条件：一个进程因请求资源而阻塞时，对已获得的资源保持不放。</li><li>不剥夺条件：进程已获得的资源，在未使用完之前不能强行剥夺。</li><li>循环等待条件：若干进程之间形成一种头尾相接的循环等待资源关系。</li></ol></li></ul><hr><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ul><li><p>使用完同步对象后立即释放</p><ul><li>比如上面的例子中使用完<code>口红</code>或者<code>镜子</code>后未释放,再去获取另一个对象的锁,就会产生死锁了</li><li>修改: 把 makeup 改为如下</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">makeup</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (choice == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (lipstick) &#123; <span class="comment">// 获得口红的锁</span></span><br><span class="line">      System.out.println(<span class="keyword">this</span>.name + <span class="string">&quot;获得口红的锁&quot;</span>);</span><br><span class="line">      Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">synchronized</span> (mirror) &#123; <span class="comment">// 一秒钟后想获得镜子的锁</span></span><br><span class="line">      System.out.println(<span class="keyword">this</span>.name + <span class="string">&quot;获得镜子的锁&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (mirror) &#123; <span class="comment">// 获得镜子的锁</span></span><br><span class="line">      System.out.println(<span class="keyword">this</span>.name + <span class="string">&quot;获得镜子的锁&quot;</span>);</span><br><span class="line">      Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">synchronized</span> (lipstick) &#123; <span class="comment">// 两秒钟后想获得口红的锁</span></span><br><span class="line">      System.out.println(<span class="keyword">this</span>.name + <span class="string">&quot;获得口红的锁&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 多线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 多线程 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大学wangke&lt;--&gt;Coder</title>
      <link href="post/others/%E7%BD%91%E8%AF%BE/"/>
      <url>post/others/%E7%BD%91%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:10:39 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\others\网课.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%A3%B0%E6%98%8E">声明</a></li><li><a href="#%E9%9C%80%E8%A6%81">需要</a></li><li><a href="#%E5%AE%89%E8%A3%85-tampermonkey">安装 Tampermonkey</a></li><li><a href="#%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC">安装脚本</a></li><li><a href="#%E5%A5%BD%E5%95%A6">好啦</a></li><li><a href="#%E5%B0%8F%E5%B0%BE%E5%B7%B4">小尾巴</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><ul><li><p>特意叫<code>wangke</code>是因为不想被 SEO 索引量太高,避免惹上一些麻烦事</p></li><li><p>这篇文章可能会影响到一些<code>二道贩子</code>的生意,希望别太生气…</p></li><li><p>对于脚本开发者来说,用户量提升显然是更好,所以此文章<code>对脚本开发者抱有支持肯定态度</code>,崇尚技术是我们的本分.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="需要"><a href="#需要" class="headerlink" title="需要"></a>需要</h1><ul><li><p>电脑或者笔记本一个</p></li><li><p>浏览器一个</p><ul><li><p>(比如 Chrome,Edge,360,QQ,火狐浏览器都行)</p></li><li><p><code>IE浏览器不行!</code></p></li><li><p><code>最好是 Edge</code>,Windows 自带,而且安装插件不需要梯子.</p></li></ul></li></ul><hr><h1 id="安装-Tampermonkey"><a href="#安装-Tampermonkey" class="headerlink" title="安装 Tampermonkey"></a>安装 Tampermonkey</h1><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210220172439.png" alt="20210220172439" /><ul><li><p>点扩展,进去搜<code>tampermonkey</code></p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210220172533.png" alt="20210220172533" /></li><li><p>第一个就是,点获取</p></li></ul><hr><h1 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h1><ul><li>上面的 tampermonkey 是脚本管理器,然后需要找脚本来安装</li></ul><blockquote><p><a href="https://greasyfork.org/zh-CN">Greasy Fork</a></p></blockquote><ul><li><p>进入上面的链接,直接搜需要的脚本,比如<code>超*</code>,<code>学x通</code></p></li><li><p>然后随便找随便试,有很多脚本是失效的或者开发中的,有 bug,具体用哪个看个人喜好了,此处不做推荐.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="好啦"><a href="#好啦" class="headerlink" title="好啦"></a>好啦</h1><ul><li>装好了就打开对应 wangke 页面试试,可以的话就好,不行的话再换其他的脚本再试.</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="小尾巴"><a href="#小尾巴" class="headerlink" title="小尾巴"></a>小尾巴</h1><ul><li>其实…对于做技术的写这么个文章是非常羞耻の…</li></ul>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 推荐 </tag>
            
            <tag> 网课 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🍔Lambda表达式</title>
      <link href="post/Java/lambda/"/>
      <url>post/Java/lambda/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-02-19 23:58:06 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\lambda.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%8F%82%E7%85%A7">参照</a></li><li><a href="#%E7%AE%80%E5%8D%95%E8%AE%B2%E8%A7%A3">简单讲解</a></li><li><a href="#%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B">快速上手</a></li><li><a href="#%E8%BF%9B%E4%B8%80%E6%AD%A5">进一步</a></li><li><a href="#%E4%BD%9C%E7%94%A8%E5%9F%9F">作用域</a></li><li><a href="#foreach">forEach</a></li><li><a href="#%E5%A4%9A%E7%BA%BF%E7%A8%8B">多线程</a><ul><li><a href="#%E5%88%9B%E5%BB%BA%E6%96%B0%E7%B1%BB">创建新类</a></li><li><a href="#%E5%8C%BF%E5%90%8D%E5%86%85%E9%83%A8%E7%B1%BB">匿名内部类</a></li><li><a href="#lambda">Lambda</a></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h1><blockquote><p><a href="https://www.runoob.com/java/java8-lambda-expressions.html">Java Lambda 表达式</a></p></blockquote><blockquote><p><a href="https://objcoding.com/2019/03/04/lambda/">关于 Java Lambda 表达式看这一篇就够了</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="简单讲解"><a href="#简单讲解" class="headerlink" title="简单讲解"></a>简单讲解</h1><ul><li><p>Lambda 是函数话编程,Java8 引入的特性,有广泛使用.</p></li><li><p>主要是用作解决匿名内部类 <code>overwrite</code> 的问题,替代可函数化的 <code>interface</code> 作为参数进行传递</p></li></ul><hr><h1 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h1><ul><li><p>比如这里有如下代码,写线程时很常见,Runnable 是一个函数化的接口,可以用 Lambda 简化</p><ul><li><code>函数化接口,就是内部只有一个抽象方法的接口.</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123; <span class="comment">// 接口名</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123; <span class="comment">// 方法名</span></span><br><span class="line">    System.out.println(<span class="string">&quot;Thread run()&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure></li><li><p>如下</p><ul><li>省略接口名和方法名</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(() -&gt; System.out.println(<span class="string">&quot;新的线程&quot;</span>)).start();</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="进一步"><a href="#进一步" class="headerlink" title="进一步"></a>进一步</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Lambda</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Lambda tester = <span class="keyword">new</span> Lambda();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 类型声明</span></span><br><span class="line">    MathOperation addition = (<span class="keyword">int</span> a, <span class="keyword">int</span> b) -&gt; a + b;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不用类型声明</span></span><br><span class="line">    MathOperation subtraction = (a, b) -&gt; a - b;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 大括号中的返回语句</span></span><br><span class="line">    MathOperation multiplication = (<span class="keyword">int</span> a, <span class="keyword">int</span> b) -&gt; &#123;</span><br><span class="line">      <span class="keyword">return</span> a * b;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 没有大括号及返回语句</span></span><br><span class="line">    MathOperation division = (<span class="keyword">int</span> a, <span class="keyword">int</span> b) -&gt; a / b;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;10 + 5 = &quot;</span> + tester.operate(<span class="number">10</span>, <span class="number">5</span>, addition));</span><br><span class="line">    System.out.println(<span class="string">&quot;10 - 5 = &quot;</span> + tester.operate(<span class="number">10</span>, <span class="number">5</span>, subtraction));</span><br><span class="line">    System.out.println(<span class="string">&quot;10 x 5 = &quot;</span> + tester.operate(<span class="number">10</span>, <span class="number">5</span>, multiplication));</span><br><span class="line">    System.out.println(<span class="string">&quot;10 / 5 = &quot;</span> + tester.operate(<span class="number">10</span>, <span class="number">5</span>, division));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不用括号</span></span><br><span class="line">    GreetingService greetService1 = message -&gt; System.out.println(<span class="string">&quot;Hello &quot;</span> + message);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用括号</span></span><br><span class="line">    GreetingService greetService2 = (message) -&gt; System.out.println(<span class="string">&quot;Hello &quot;</span> + message);</span><br><span class="line"></span><br><span class="line">    greetService1.sayMessage(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">    greetService2.sayMessage(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">operate</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, MathOperation mathOperation)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mathOperation.operation(a, b);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    10 + 5 = 15</span></span><br><span class="line"><span class="comment">    10 - 5 = 5</span></span><br><span class="line"><span class="comment">    10 x 5 = 50</span></span><br><span class="line"><span class="comment">    10 / 5 = 2</span></span><br><span class="line"><span class="comment">    Hello Runoob</span></span><br><span class="line"><span class="comment">    Hello Google</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">MathOperation</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">operation</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">GreetingService</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">sayMessage</span><span class="params">(String message)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// void sayMessage1(String message, String message1); // 比如这里出现第二个抽象方法,这个接口就不是函数化接口了.无法使用lambda表达式</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Lambda2</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 这里的局部变量就算不声明final也可以被Lambda表达式引用</span></span><br><span class="line"><span class="comment">     * 但是无论声不声明,被引用后后续都不可修改,会报错</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    Converter&lt;Integer, String&gt; s = (param) -&gt; System.out.println(String.valueOf(param + num));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Lambda表达式参数不能与外部变量同名,编译报错</span></span><br><span class="line">    <span class="comment">// Converter&lt;Integer, String&gt; s1 = (num) -&gt; System.out.println(num);</span></span><br><span class="line"></span><br><span class="line">    s.convert(<span class="number">2</span>); <span class="comment">// 输出结果为 3</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Converter</span>&lt;<span class="title">T1</span>, <span class="title">T2</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">convert</span><span class="params">(<span class="keyword">int</span> i)</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForEach</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;(Arrays.asList(<span class="string">&quot;I&quot;</span>, <span class="string">&quot;love&quot;</span>, <span class="string">&quot;you&quot;</span>, <span class="string">&quot;too&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用增强for循环迭代</span></span><br><span class="line">    <span class="keyword">for</span> (String str : list) &#123;</span><br><span class="line">      <span class="keyword">if</span> (str.length() &gt; <span class="number">3</span>)</span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// implement Consumer interface</span></span><br><span class="line">    list.forEach(<span class="keyword">new</span> Consumer&lt;String&gt;() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">accept</span><span class="params">(String t)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (t.length() &gt; <span class="number">3</span>)</span><br><span class="line">          System.out.println(t);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Lambda implement Consumer</span></span><br><span class="line">    list.forEach(s -&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (s.length() &gt; <span class="number">3</span>)</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1><ul><li><p>例如我们需要一个实现 Runnable 接口的名为 <code>myYield</code>的对象</p></li><li><p>下面是三种方法:</p></li></ul><hr><h2 id="创建新类"><a href="#创建新类" class="headerlink" title="创建新类"></a>创建新类</h2><ul><li>复杂,对于像是 Runnable 这种函数化接口,这样实现起来麻烦</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestYield</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    MyYield myYield = <span class="keyword">new</span> MyYield();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Thread(myYield, <span class="string">&quot;a&quot;</span>).start();</span><br><span class="line">    <span class="keyword">new</span> Thread(myYield, <span class="string">&quot;b&quot;</span>).start();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyYield</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(Thread.currentThread().getName() + <span class="string">&quot;线程开始执行&quot;</span>);</span><br><span class="line">    Thread.yield(); <span class="comment">//礼让</span></span><br><span class="line">    System.out.println(Thread.currentThread().getName() + <span class="string">&quot;线程停止执行&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="匿名内部类"><a href="#匿名内部类" class="headerlink" title="匿名内部类"></a>匿名内部类</h2><ul><li>比上面的简单些,但还可以用 Lambda 更简化</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestYield</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Runnable myYield = <span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;线程开始执行&quot;</span>);</span><br><span class="line">        Thread.yield(); <span class="comment">//礼让</span></span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;线程停止执行&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Thread(myYield, <span class="string">&quot;a&quot;</span>).start();</span><br><span class="line">    <span class="keyword">new</span> Thread(myYield, <span class="string">&quot;b&quot;</span>).start();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="Lambda"><a href="#Lambda" class="headerlink" title="Lambda"></a>Lambda</h2><ul><li>在会用 Lambda 情况下,代码可读性和简洁度大于匿名内部类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestYield</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Runnable myYield = () -&gt; &#123;</span><br><span class="line">      System.out.println(Thread.currentThread().getName() + <span class="string">&quot;线程开始执行&quot;</span>);</span><br><span class="line">      Thread.yield(); <span class="comment">//礼让</span></span><br><span class="line">      System.out.println(Thread.currentThread().getName() + <span class="string">&quot;线程停止执行&quot;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Thread(myYield, <span class="string">&quot;a&quot;</span>).start();</span><br><span class="line">    <span class="keyword">new</span> Thread(myYield, <span class="string">&quot;b&quot;</span>).start();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Lambda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>😎日常健身小技巧</title>
      <link href="post/life/%E5%81%A5%E8%BA%AB/"/>
      <url>post/life/%E5%81%A5%E8%BA%AB/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-02-17 16:55:58 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\life\健身.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E8%B5%B7%E5%9B%A0">起因</a></li><li><a href="#%E7%AE%80%E8%BF%B0">简述</a></li><li><a href="#%E5%86%85%E9%83%A8%E5%9B%A0%E7%B4%A0">内部因素</a></li><li><a href="#%E8%A1%94%E6%8E%A5">衔接</a></li><li><a href="#%E5%A4%96%E9%83%A8%E5%9B%A0%E7%B4%A0">外部因素</a></li><li><a href="#%E7%BB%93%E5%B0%BE">结尾</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><ul><li><p>我们为甚么要<code>健身</code>?</p><ol><li><p>为了增肌塑形</p></li><li><p>为了保持身材</p></li><li><p>为了减肥</p></li><li><p>为了理想和追求</p></li><li><p>为了吃饭</p></li></ol><hr></li></ul><blockquote><p>发展体育运动，增强人民体质。体育于吾人占第一之位置。体育之效，在于强筋骨，增知识，调感情，强意志。体育者，人类自养生之道，是身体平均发达，而有规则次序之可言者也。德志皆寄予体，无体是无德志也。文明其精神，野蛮其体魄。——毛泽东</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210217155546.png" alt="20210217155546" /><hr><h1 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h1><ul><li><p>我身材是第一与第二种中间的,身材在<code>走形</code>与<code>塑形</code>之间摇摆~,不过是为了第四种健身.</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/25b219760d8fe18a.gif" alt="25b219760d8fe18a" /></li><li><p>刚刚锻炼完,跟打了鸡血一样,看时间是不到十二点,晚上.</p><ul><li>于是寻思随随便便写一篇小文章,或许对别人有帮助.</li></ul></li><li><p>ummmm,粗略来算的话,从放假第二天到今天,<code>连续 50 多天</code>了,其实也有<code>想偷懒</code>或者<code>退缩</code>的时候</p><ul><li><p>对我个人而言其实没啥,这个日常锻炼是我由心而发的,并没有什么<code>外部要求</code>或者<code>计划</code>.</p></li><li><p>每天锻炼时间,强度,动作都是有变化的</p></li></ul></li><li><p>这里可没有什么<code>特殊动作</code>能让你一下子爱上健身或者快速减肥.</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210217155428.png" alt="20210217155428" /></li><li><p>下面说说我是怎么坚持下来的,也不能说是坚持,应该说是<code>融入</code>进来的吧:</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210217155403.png" alt="20210217155403" /></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="内部因素"><a href="#内部因素" class="headerlink" title="内部因素"></a>内部因素</h1><blockquote><p>多多少少人是受思想控制的生物,控制不好的话还是先学学怎么<code>静心</code>好啦~</p></blockquote><ul><li><p>就比如我们健身初期很容易遇到</p><ol><li><p><code>啊,今天好累,算了吧</code></p></li><li><p><code>这辈子也练不出来腹肌了...</code></p></li><li><p><code>健身干啥?我身材还行啊?</code></p></li></ol><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210217155331.png" alt="20210217155331" /></li></ul><hr><ul><li><p>比如第一条,也是几乎<code>百分之百的人</code>会遇到的<code>瓶颈</code>,其实反过来讲,出现这种状况不是偶然,是因为今天完全没给健身做铺垫.</p><blockquote><p>我们所经历的比较顺利的事情大多是铺垫比较好的,无论这个垫是自己铺的还是别人铺的.</p></blockquote><ul><li><p>如今这个时代,我感觉身体就像是打工人,自己的思想就像是主任,我们被别人压榨后还要无止尽作贱自己的身体,哈哈哈,恶性循环</p></li><li><p>所以,多多少少给身体留出点时间吧!我在这替你身子球球你了 😝</p></li></ul><blockquote><p><code>你需要做的,不必逼迫今天的自己,好好休息就好,也别放过明天的你,合理安排,空出半小时!</code></p></blockquote><hr></li><li><p>不知道您对第二条的态度如何,我是认为这是没有认真健身:</p><ul><li><p>健身会给人一种<code>人格性</code>的魅力,不只是在别人看来,对自己也是一样,要是说的话应该叫<code>&quot;内外兼修&quot;</code></p></li><li><p>能坚持健身的人绝不会怠惰和自卑至此,喜欢运动的人笑起来都很灿烂.</p></li><li><p>可以在周围的圈子找找,那些单纯喜欢运动的人,无论美丑,都自带一种<code>魅力气场</code>😎</p></li><li><p>啊,褒贬有些过度了…(我不是体育生啊)</p></li><li><p>认认真真的走进这个道门,你会发现自己的仙力与美丽的!</p></li></ul><hr></li><li><p>其实,我感觉第三条这种是最要命的…</p><ul><li><p>好的来说是”满足于现状”,不好来说是”不思进取”</p></li><li><p>当然,没人会这样明说的,不过多多少少会有这种人,这种人在身边要么你投奔他去,要么你被他拉去…</p></li></ul><blockquote><p><code>想健身或者减肥最快的方法,应该是陪着喜欢健身的人吃吃玩玩,适应与同化过程就是蜕变过程.</code></p></blockquote></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="衔接"><a href="#衔接" class="headerlink" title="衔接"></a>衔接</h1><ul><li><p>上面好一大段字,可是读完了还是不知道怎么做才好</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210217155255.png" alt="20210217155255" /></li><li><p>别怕,怎么做下面再娓娓道来~</p></li></ul><hr><h1 id="外部因素"><a href="#外部因素" class="headerlink" title="外部因素"></a>外部因素</h1><blockquote><p>假舆马者，非利足也，而致千里；假舟楫者，非能水也，而绝江河。君子非生异也，善假于物也</p></blockquote><ul><li><p>合理的利用身体,也是健身的一大要素.</p><hr></li><li><p>健身前务必花几分钟做一下全身热身!<code>很重要很重要很重要!</code></p><ul><li>其实,上面那句话没啥用,没人会注意这种唠叨<del>我推荐的是戴上耳机,播放个比较带感的音乐,全身<code>扭一扭</code>,<code>舔一舔</code>,`泡</del>` 啊跑题了 🤣</li></ul><hr></li><li><p>然后,我个人非常推荐的是:<code>拳击</code></p><ul><li>没错,就是拳击,为啥呢?</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210217155139.png" alt="20210217155139" /><ul><li><p>举个例子:大家都跑过步,拿三千米来说,应该是 1~2 千米时感觉最累了,为啥呢?</p></li><li><p>前一千米会把体内二氧化碳浓度基本拉满了,氧气不够,大脑会抑制你运动,发出<code>好累啊</code>的信号,肾上腺素浓度还没太高,不会致使你太过兴奋</p></li><li><p>过了两千米,基本身体适应了,肾上腺素浓度上来了,就感觉<code>我好兴奋,能跑十公里</code></p></li><li><p>所以说有个阶段性,一公里和二公里差别很大,三公里和四公里差别就没那么大了</p></li><li><p>一定程度上得益于<code>肾上腺素</code>.</p></li></ul><hr></li><li><p>回归正题,为啥是<code>拳击</code>?</p><ul><li><p><code>拳击可以利用相对较小的能量激发很猛烈的肾上腺素</code></p></li><li><p>一是刚热身后最好不要太过猛烈的运动,而且多数人也不会选择用猛烈运动健身</p></li><li><p>二是拳击简单有效,不依赖场地设备.打上几个重拳就能做到一个百米冲刺的心跳感,你选哪个?</p></li></ul><hr></li><li><p>打几组拳击,鸡血上头了!</p><ul><li><p>这时你会发现,就算你不喜欢运动,自己也会想动动身体</p></li><li><p>注意这个鸡血其实是有时效性的,效果下降很快,所以带好耳机,最好不要中途拿起手机玩起来,热血劲儿下去了就不想动了.</p></li><li><p>这是<code>我最推荐</code>的健身方式,有些原始和小野蛮,毕竟人也是兽啊.</p></li></ul><blockquote><p>失去人性,失去很多;失去兽性,失去一切.</p></blockquote></li><li><p>另外,其实对于大多数人来讲,<code>不建议磕蛋白粉</code>,运动量绝对不够,会长肉肉的~,有条件的话可以试试<code>氮泵</code>,或者直接红牛也可以,都是兴奋剂.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><ul><li>偷懒真香( 🤣</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210217155228.png" alt="20210217155228" />]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 健身 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>💯Vue.log~(壹)</title>
      <link href="post/Web/Vue/Vue-1/"/>
      <url>post/Web/Vue/Vue-1/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-17 23:48:29 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Web\Vue\Vue-1.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%89%8D%E7%AB%AF%E5%88%86%E7%A6%BB">前端分离</a><ul><li><a href="#%E9%80%BB%E8%BE%91">逻辑</a></li><li><a href="#%E4%BA%8B%E4%BB%B6">事件</a></li></ul></li><li><a href="#%E8%A7%86%E5%9B%BE">视图</a></li><li><a href="#%E9%80%9A%E4%BF%A1">通信</a></li><li><a href="#vue-%E7%AE%80%E6%9E%90">Vue 简析</a><ul><li><a href="#%E8%A7%86%E5%9B%BE-1">视图</a></li><li><a href="#%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1">网络通信</a></li><li><a href="#%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC">页面跳转</a></li><li><a href="#%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86">状态管理</a></li><li><a href="#vue-ui">Vue-UI</a></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="前端分离"><a href="#前端分离" class="headerlink" title="前端分离"></a>前端分离</h1><h2 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a>逻辑</h2><ul><li>判断</li><li>循环</li></ul><hr><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><ul><li><p>浏览器事件</p><ul><li>window</li><li>document</li></ul></li><li><p>dom 事件</p><ul><li>增删,遍历,修改等元素</li></ul><hr></li><li><p>JQuery</p></li><li><p>Vue</p></li><li><p>React</p></li></ul><hr><h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><blockquote><p>HTML + CSS</p></blockquote><ul><li>BootStrap</li><li>LayUI</li></ul><hr><h1 id="通信"><a href="#通信" class="headerlink" title="通信"></a>通信</h1><ul><li>xhr</li><li>JQuery-&gt;Ajax</li><li>Vue-&gt;axios</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Vue-简析"><a href="#Vue-简析" class="headerlink" title="Vue 简析"></a>Vue 简析</h1><blockquote><p>SOC 关注点分离原则.</p></blockquote><h2 id="视图-1"><a href="#视图-1" class="headerlink" title="视图"></a>视图</h2><ul><li>HTML+css+js</li></ul><hr><h2 id="网络通信"><a href="#网络通信" class="headerlink" title="网络通信"></a>网络通信</h2><ul><li>axios</li></ul><hr><h2 id="页面跳转"><a href="#页面跳转" class="headerlink" title="页面跳转"></a>页面跳转</h2><ul><li>vue-router</li></ul><hr><h2 id="状态管理"><a href="#状态管理" class="headerlink" title="状态管理"></a>状态管理</h2><ul><li>vuex</li></ul><hr><h2 id="Vue-UI"><a href="#Vue-UI" class="headerlink" title="Vue-UI"></a>Vue-UI</h2><ul><li>飞冰 ice (阿里)</li></ul><blockquote><p>搁置 ing</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🌭回顾一下Java多线程~(壹)</title>
      <link href="post/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/1/"/>
      <url>post/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/1/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-02-08 18:59:13 * @LastEditors: Weidows * @LastEditTime: 2021-03-19 00:14:36 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\多线程\1.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%8F%82%E7%85%A7">参照</a></li><li><a href="#%E6%A6%82%E5%BF%B5">概念</a></li><li><a href="#maven-%E8%87%AA%E5%8A%A8%E5%AF%BC%E5%85%A5-jar-%E5%8C%85">Maven 自动导入 jar 包</a></li><li><a href="#%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%B9%B6%E8%A1%8C%E4%B8%8B%E8%BD%BD">多线程并行下载</a><ul><li><a href="#%E5%AE%9E%E7%8E%B0runnable%E6%8E%A5%E5%8F%A3">实现<code>Runnable</code>接口</a></li><li><a href="#%E5%AE%9E%E7%8E%B0callable%E6%8E%A5%E5%8F%A3">实现<code>Callable</code>接口</a></li></ul></li><li><a href="#%E9%9D%99%E6%80%81%E4%BB%A3%E7%90%86">静态代理</a></li><li><a href="#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F">生命周期</a></li><li><a href="#%E5%81%9C%E6%AD%A2%E7%BA%BF%E7%A8%8B">停止线程</a></li><li><a href="#%E7%BA%BF%E7%A8%8B%E4%BC%91%E7%9C%A0">线程休眠</a></li><li><a href="#%E7%BA%BF%E7%A8%8B%E8%AE%A9%E6%AD%A5">线程让步</a></li><li><a href="#%E7%BA%BF%E7%A8%8B-join">线程 Join</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h1><blockquote><p><a href="https://blog.csdn.net/weixin_41963554/article/details/108808824">狂神说多线程笔记</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><ul><li>main()称为主线程，为系统的入口</li><li>一个进程中，如果开辟了多个线程，线程的运行由调度器安排，调度器是与操作系统紧密相关的，先后顺序是不能认为干预的(无法预测线程运行顺序)</li><li>程序运行时,默认会有多个线程,比如 main 和 gc(垃圾回收器)</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Maven-自动导入-jar-包"><a href="#Maven-自动导入-jar-包" class="headerlink" title="Maven 自动导入 jar 包"></a>Maven 自动导入 jar 包</h1><ul><li><p>比如我们需要导入 Apache 的<code>commons-io</code>这个包,去 Maven 仓库搜,可以找到<a href="https://mvnrepository.com/artifact/commons-io/commons-io">这个网址</a></p></li><li><p>然后选择一个版本点进去</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/11/9o3IUqidJxHOADe.png" alt="20210211010341" /></li><li><p>复制框里的内容,找到 Java 项目<code>pom.xml</code>文件,粘贴到如下地方</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/11/EfbaBX43wZks9mh.png" alt="20210211010614" /></li><li><p>然后右键<code>pom.xml</code>-&gt;Maven-&gt;重新加载项目.</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/11/ujDCcqliNEh2U58.png" alt="20210211010920" /></li><li><p>在 VScode 内的话也有这种操作:</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/11/ysPTCunXYpQ5UdV.png" alt="20210211011109" /></li><li><p>当然关闭然后重新打开 IDE 也是可以的,Maven 会自动更新,更新后如下,包就导进来了:</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/11/lZ4x91mzrn2aIKE.png" alt="20210211011240" /></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="多线程并行下载"><a href="#多线程并行下载" class="headerlink" title="多线程并行下载"></a>多线程并行下载</h1><h2 id="实现Runnable接口"><a href="#实现Runnable接口" class="headerlink" title="实现Runnable接口"></a>实现<code>Runnable</code>接口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> twenty.november.thread.downloader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Downloader</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> String url;</span><br><span class="line">  <span class="keyword">private</span> String fileName;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Downloader</span><span class="params">(String url, String fileName)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.url = url;</span><br><span class="line">    <span class="keyword">this</span>.fileName = fileName;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      FileUtils.copyURLToFile(<span class="keyword">new</span> URL(url), <span class="keyword">new</span> File(fileName));</span><br><span class="line">      System.out.println(<span class="string">&quot;Download finished.&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> Downloader(<span class="string">&quot;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&quot;</span>,</span><br><span class="line">        <span class="string">&quot;./Java/src/main/java/twenty/november/thread/downloader/1.png&quot;</span>)).start();</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> Downloader(<span class="string">&quot;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&quot;</span>,</span><br><span class="line">        <span class="string">&quot;./Java/src/main/java/twenty/november/thread/downloader/2.png&quot;</span>)).start();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="实现Callable接口"><a href="#实现Callable接口" class="headerlink" title="实现Callable接口"></a>实现<code>Callable</code>接口</h2><ul><li>Callable 与 Runnable 区别为它可以带有返回值类型,可以抛出异常</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> twenty.november.thread.downloader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Future;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Downloader2</span> <span class="keyword">implements</span> <span class="title">Callable</span>&lt;<span class="title">Object</span>&gt; </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> String url;</span><br><span class="line">  <span class="keyword">private</span> String fileName;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Object <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> MalformedURLException, IOException </span>&#123;</span><br><span class="line">    FileUtils.copyURLToFile(<span class="keyword">new</span> URL(url), <span class="keyword">new</span> File(fileName));</span><br><span class="line">    System.out.println(fileName + <span class="string">&quot;下载完成&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Downloader2</span><span class="params">(String url, String fileName)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.url = url;</span><br><span class="line">    <span class="keyword">this</span>.fileName = fileName;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 创建线程池</span></span><br><span class="line">    ExecutorService ser = Executors.newFixedThreadPool(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提交执行</span></span><br><span class="line">    Future&lt;Object&gt; submit1 = ser</span><br><span class="line">        .submit(<span class="keyword">new</span> Downloader2(<span class="string">&quot;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&quot;</span>,</span><br><span class="line">            <span class="string">&quot;./Java/src/main/java/twenty/november/thread/downloader/1.png&quot;</span>));</span><br><span class="line">    Future&lt;Object&gt; submit2 = ser</span><br><span class="line">        .submit(<span class="keyword">new</span> Downloader2(<span class="string">&quot;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&quot;</span>,</span><br><span class="line">            <span class="string">&quot;./Java/src/main/java/twenty/november/thread/downloader/2.png&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取结果</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      Object result1 = submit1.get();</span><br><span class="line">      Object result2 = submit2.get();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException | ExecutionException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭服务</span></span><br><span class="line">    ser.shutdown();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="静态代理"><a href="#静态代理" class="headerlink" title="静态代理"></a>静态代理</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> twenty.november.proxy.static_proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticProxy</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    MarryProxy proxy = <span class="keyword">new</span> MarryProxy(<span class="keyword">new</span> Me(<span class="string">&quot;Weidows&quot;</span>));</span><br><span class="line">    proxy.Marry();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ! 代理和被代理类都实现Marry接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Marry</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">Marry</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ! 被代理者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Me</span> <span class="keyword">implements</span> <span class="title">Marry</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> String name;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Marry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(name + <span class="string">&quot;结婚了&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Me</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ! 代理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MarryProxy</span> <span class="keyword">implements</span> <span class="title">Marry</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> Me target;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Marry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    before();</span><br><span class="line">    target.Marry();</span><br><span class="line">    after();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(target.name + <span class="string">&quot;结婚后&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(target.name + <span class="string">&quot;结婚前&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">MarryProxy</span><span class="params">(Me target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.target = target;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h1><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210219173514.png" alt="20210219173514" /><hr><h1 id="停止线程"><a href="#停止线程" class="headerlink" title="停止线程"></a>停止线程</h1><ol><li>建议线程正常停止——&gt;利用次数，不建议死循环</li><li>建议使用标志位——&gt;设置一个标志位</li><li><code>不要用</code> stop 或者 destroy 等过时或者 JDK 不建议使用的方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestStop</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">  <span class="comment">//1.设置一个标志位</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>; <span class="comment">// 运行次数</span></span><br><span class="line">    <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Thread.run()运行次数: &quot;</span> + i++);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//2.设置一个公开的方法停止线程，转换标志位</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.flag = <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    TestStop testStop = <span class="keyword">new</span> TestStop();</span><br><span class="line">    <span class="keyword">new</span> Thread(testStop).start();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;main: &quot;</span> + i);</span><br><span class="line">      <span class="keyword">if</span> (i == <span class="number">90</span>) &#123;</span><br><span class="line">        testStop.stop();</span><br><span class="line">        System.out.println(<span class="string">&quot;testStop线程停止了,main线程还在运行&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="线程休眠"><a href="#线程休眠" class="headerlink" title="线程休眠"></a>线程休眠</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSleep</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 十秒倒计时</span></span><br><span class="line">      tenSecondsDown();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 每秒输出系统当前时间</span></span><br><span class="line">      countTime();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">tenSecondsDown</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">      Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">      System.out.println(num--);</span><br><span class="line">      <span class="keyword">if</span> (num == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">countTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Date startTime = <span class="keyword">new</span> Date(System.currentTimeMillis()); <span class="comment">//获取系统当前时间</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        System.out.println(<span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;HH:mm:ss&quot;</span>).format(startTime));</span><br><span class="line">        startTime = <span class="keyword">new</span> Date(System.currentTimeMillis()); <span class="comment">//更新当前时间</span></span><br><span class="line">        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试数据时可以通过延时来放大线程问题的发生性.</li></ul><hr><h1 id="线程让步"><a href="#线程让步" class="headerlink" title="线程让步"></a>线程让步</h1><ul><li>令当前线程<code>暂停但并不阻塞</code>,有可能让步并不成功.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestYield</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// MyYield myYield = new MyYield();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// * 匿名内部类的方式</span></span><br><span class="line">    <span class="comment">// Runnable myYield = new Runnable() &#123;</span></span><br><span class="line">    <span class="comment">//   @Override</span></span><br><span class="line">    <span class="comment">//   public void run() &#123;</span></span><br><span class="line">    <span class="comment">//     System.out.println(Thread.currentThread().getName() + &quot;线程开始执行&quot;);</span></span><br><span class="line">    <span class="comment">//     Thread.yield(); //礼让</span></span><br><span class="line">    <span class="comment">//     System.out.println(Thread.currentThread().getName() + &quot;线程停止执行&quot;);</span></span><br><span class="line">    <span class="comment">//   &#125;</span></span><br><span class="line">    <span class="comment">// &#125;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// * Lambda表达式方式</span></span><br><span class="line">    Runnable myYield = () -&gt; &#123;</span><br><span class="line">      System.out.println(Thread.currentThread().getName() + <span class="string">&quot;线程开始执行&quot;</span>);</span><br><span class="line">      Thread.yield(); <span class="comment">//礼让</span></span><br><span class="line">      System.out.println(Thread.currentThread().getName() + <span class="string">&quot;线程停止执行&quot;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Thread(myYield, <span class="string">&quot;a&quot;</span>).start();</span><br><span class="line">    <span class="keyword">new</span> Thread(myYield, <span class="string">&quot;b&quot;</span>).start();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// * 新建类的方式实现接口</span></span><br><span class="line"><span class="comment">// class MyYield implements Runnable &#123;</span></span><br><span class="line"><span class="comment">//   @Override</span></span><br><span class="line"><span class="comment">//   public void run() &#123;</span></span><br><span class="line"><span class="comment">//     System.out.println(Thread.currentThread().getName() + &quot;线程开始执行&quot;);</span></span><br><span class="line"><span class="comment">//     Thread.yield(); //礼让</span></span><br><span class="line"><span class="comment">//     System.out.println(Thread.currentThread().getName() + &quot;线程停止执行&quot;);</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><ul><li><p>结果</p><ul><li>预期结果,让步成功</li></ul><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">a</span>线程开始执行</span><br><span class="line">b线程开始执行</span><br><span class="line"><span class="keyword">a</span>线程停止执行</span><br><span class="line">b线程停止执行</span><br></pre></td></tr></table></figure><ul><li>让步未成功(但也并不能认为是失败,确确实实让了一下)</li></ul><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">a</span>线程开始执行</span><br><span class="line"><span class="keyword">a</span>线程停止执行</span><br><span class="line">b线程开始执行</span><br><span class="line">b线程停止执行</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="线程-Join"><a href="#线程-Join" class="headerlink" title="线程 Join"></a>线程 Join</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJoin</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    Runnable testJoin = () -&gt; &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;vipThread&quot;</span> + i);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    Thread vipThread = <span class="keyword">new</span> Thread(testJoin);</span><br><span class="line">    vipThread.start();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//主线程</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (i == <span class="number">50</span>) &#123;</span><br><span class="line">        vipThread.join(); <span class="comment">//插队</span></span><br><span class="line">      &#125;</span><br><span class="line">      System.out.println(<span class="string">&quot;main&quot;</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>结果<figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line">mai<span class="symbol">n0</span></span><br><span class="line">vipThread<span class="number">0</span></span><br><span class="line">mai<span class="symbol">n1</span></span><br><span class="line">vipThread<span class="number">1</span></span><br><span class="line">vipThread<span class="number">2</span></span><br><span class="line">mai<span class="symbol">n2</span></span><br><span class="line">mai<span class="symbol">n3</span></span><br><span class="line">vipThread<span class="number">3</span></span><br><span class="line">mai<span class="symbol">n4</span></span><br><span class="line">vipThread<span class="number">4</span></span><br><span class="line">mai<span class="symbol">n5</span></span><br><span class="line">vipThread<span class="number">5</span></span><br><span class="line">mai<span class="symbol">n6</span></span><br><span class="line">vipThread<span class="number">6</span></span><br><span class="line">mai<span class="symbol">n7</span></span><br><span class="line">vipThread<span class="number">7</span></span><br><span class="line">mai<span class="symbol">n8</span></span><br><span class="line">vipThread<span class="number">8</span></span><br><span class="line">mai<span class="symbol">n9</span></span><br><span class="line">vipThread<span class="number">9</span></span><br><span class="line">mai<span class="symbol">n10</span></span><br><span class="line">vipThread<span class="number">10</span></span><br><span class="line">mai<span class="symbol">n11</span></span><br><span class="line">vipThread<span class="number">11</span></span><br><span class="line">mai<span class="symbol">n12</span></span><br><span class="line">vipThread<span class="number">12</span></span><br><span class="line">mai<span class="symbol">n13</span></span><br><span class="line">vipThread<span class="number">13</span></span><br><span class="line">mai<span class="symbol">n14</span></span><br><span class="line">vipThread<span class="number">14</span></span><br><span class="line">mai<span class="symbol">n15</span></span><br><span class="line">vipThread<span class="number">15</span></span><br><span class="line">mai<span class="symbol">n16</span></span><br><span class="line">vipThread<span class="number">16</span></span><br><span class="line">mai<span class="symbol">n17</span></span><br><span class="line">vipThread<span class="number">17</span></span><br><span class="line">mai<span class="symbol">n18</span></span><br><span class="line">vipThread<span class="number">18</span></span><br><span class="line">mai<span class="symbol">n19</span></span><br><span class="line">mai<span class="symbol">n20</span></span><br><span class="line">vipThread<span class="number">19</span></span><br><span class="line">mai<span class="symbol">n21</span></span><br><span class="line">vipThread<span class="number">20</span></span><br><span class="line">vipThread<span class="number">21</span></span><br><span class="line">mai<span class="symbol">n22</span></span><br><span class="line">vipThread<span class="number">22</span></span><br><span class="line">mai<span class="symbol">n23</span></span><br><span class="line">vipThread<span class="number">23</span></span><br><span class="line">mai<span class="symbol">n24</span></span><br><span class="line">mai<span class="symbol">n25</span></span><br><span class="line">vipThread<span class="number">24</span></span><br><span class="line">mai<span class="symbol">n26</span></span><br><span class="line">mai<span class="symbol">n27</span></span><br><span class="line">vipThread<span class="number">25</span></span><br><span class="line">vipThread<span class="number">26</span></span><br><span class="line">mai<span class="symbol">n28</span></span><br><span class="line">mai<span class="symbol">n29</span></span><br><span class="line">vipThread<span class="number">27</span></span><br><span class="line">mai<span class="symbol">n30</span></span><br><span class="line">vipThread<span class="number">28</span></span><br><span class="line">mai<span class="symbol">n31</span></span><br><span class="line">mai<span class="symbol">n32</span></span><br><span class="line">vipThread<span class="number">29</span></span><br><span class="line">vipThread<span class="number">30</span></span><br><span class="line">mai<span class="symbol">n33</span></span><br><span class="line">vipThread<span class="number">31</span></span><br><span class="line">vipThread<span class="number">32</span></span><br><span class="line">vipThread<span class="number">33</span></span><br><span class="line">mai<span class="symbol">n34</span></span><br><span class="line">vipThread<span class="number">34</span></span><br><span class="line">mai<span class="symbol">n35</span></span><br><span class="line">mai<span class="symbol">n36</span></span><br><span class="line">vipThread<span class="number">35</span></span><br><span class="line">vipThread<span class="number">36</span></span><br><span class="line">mai<span class="symbol">n37</span></span><br><span class="line">vipThread<span class="number">37</span></span><br><span class="line">mai<span class="symbol">n38</span></span><br><span class="line">vipThread<span class="number">38</span></span><br><span class="line">mai<span class="symbol">n39</span></span><br><span class="line">vipThread<span class="number">39</span></span><br><span class="line">vipThread<span class="number">40</span></span><br><span class="line">mai<span class="symbol">n40</span></span><br><span class="line">vipThread<span class="number">41</span></span><br><span class="line">mai<span class="symbol">n41</span></span><br><span class="line">vipThread<span class="number">42</span></span><br><span class="line">mai<span class="symbol">n42</span></span><br><span class="line">vipThread<span class="number">43</span></span><br><span class="line">mai<span class="symbol">n43</span></span><br><span class="line">vipThread<span class="number">44</span></span><br><span class="line">mai<span class="symbol">n44</span></span><br><span class="line">vipThread<span class="number">45</span></span><br><span class="line">mai<span class="symbol">n45</span></span><br><span class="line">vipThread<span class="number">46</span></span><br><span class="line">mai<span class="symbol">n46</span></span><br><span class="line">vipThread<span class="number">47</span></span><br><span class="line">mai<span class="symbol">n47</span></span><br><span class="line">vipThread<span class="number">48</span></span><br><span class="line">mai<span class="symbol">n48</span></span><br><span class="line">vipThread<span class="number">49</span></span><br><span class="line">mai<span class="symbol">n49</span></span><br><span class="line">vipThread<span class="number">50</span></span><br><span class="line">vipThread<span class="number">51</span></span><br><span class="line">vipThread<span class="number">52</span></span><br><span class="line">vipThread<span class="number">53</span></span><br><span class="line">vipThread<span class="number">54</span></span><br><span class="line">vipThread<span class="number">55</span></span><br><span class="line">vipThread<span class="number">56</span></span><br><span class="line">vipThread<span class="number">57</span></span><br><span class="line">vipThread<span class="number">58</span></span><br><span class="line">vipThread<span class="number">59</span></span><br><span class="line">vipThread<span class="number">60</span></span><br><span class="line">vipThread<span class="number">61</span></span><br><span class="line">vipThread<span class="number">62</span></span><br><span class="line">vipThread<span class="number">63</span></span><br><span class="line">vipThread<span class="number">64</span></span><br><span class="line">vipThread<span class="number">65</span></span><br><span class="line">vipThread<span class="number">66</span></span><br><span class="line">vipThread<span class="number">67</span></span><br><span class="line">vipThread<span class="number">68</span></span><br><span class="line">vipThread<span class="number">69</span></span><br><span class="line">vipThread<span class="number">70</span></span><br><span class="line">vipThread<span class="number">71</span></span><br><span class="line">vipThread<span class="number">72</span></span><br><span class="line">vipThread<span class="number">73</span></span><br><span class="line">vipThread<span class="number">74</span></span><br><span class="line">vipThread<span class="number">75</span></span><br><span class="line">vipThread<span class="number">76</span></span><br><span class="line">vipThread<span class="number">77</span></span><br><span class="line">vipThread<span class="number">78</span></span><br><span class="line">vipThread<span class="number">79</span></span><br><span class="line">vipThread<span class="number">80</span></span><br><span class="line">vipThread<span class="number">81</span></span><br><span class="line">vipThread<span class="number">82</span></span><br><span class="line">vipThread<span class="number">83</span></span><br><span class="line">vipThread<span class="number">84</span></span><br><span class="line">vipThread<span class="number">85</span></span><br><span class="line">vipThread<span class="number">86</span></span><br><span class="line">vipThread<span class="number">87</span></span><br><span class="line">vipThread<span class="number">88</span></span><br><span class="line">vipThread<span class="number">89</span></span><br><span class="line">vipThread<span class="number">90</span></span><br><span class="line">vipThread<span class="number">91</span></span><br><span class="line">vipThread<span class="number">92</span></span><br><span class="line">vipThread<span class="number">93</span></span><br><span class="line">vipThread<span class="number">94</span></span><br><span class="line">vipThread<span class="number">95</span></span><br><span class="line">vipThread<span class="number">96</span></span><br><span class="line">vipThread<span class="number">97</span></span><br><span class="line">vipThread<span class="number">98</span></span><br><span class="line">vipThread<span class="number">99</span></span><br><span class="line">mai<span class="symbol">n50</span></span><br><span class="line">mai<span class="symbol">n51</span></span><br><span class="line">mai<span class="symbol">n52</span></span><br><span class="line">mai<span class="symbol">n53</span></span><br><span class="line">mai<span class="symbol">n54</span></span><br><span class="line">mai<span class="symbol">n55</span></span><br><span class="line">mai<span class="symbol">n56</span></span><br><span class="line">mai<span class="symbol">n57</span></span><br><span class="line">mai<span class="symbol">n58</span></span><br><span class="line">mai<span class="symbol">n59</span></span><br><span class="line">mai<span class="symbol">n60</span></span><br><span class="line">mai<span class="symbol">n61</span></span><br><span class="line">mai<span class="symbol">n62</span></span><br><span class="line">mai<span class="symbol">n63</span></span><br><span class="line">mai<span class="symbol">n64</span></span><br><span class="line">mai<span class="symbol">n65</span></span><br><span class="line">mai<span class="symbol">n66</span></span><br><span class="line">mai<span class="symbol">n67</span></span><br><span class="line">mai<span class="symbol">n68</span></span><br><span class="line">mai<span class="symbol">n69</span></span><br><span class="line">mai<span class="symbol">n70</span></span><br><span class="line">mai<span class="symbol">n71</span></span><br><span class="line">mai<span class="symbol">n72</span></span><br><span class="line">mai<span class="symbol">n73</span></span><br><span class="line">mai<span class="symbol">n74</span></span><br><span class="line">mai<span class="symbol">n75</span></span><br><span class="line">mai<span class="symbol">n76</span></span><br><span class="line">mai<span class="symbol">n77</span></span><br><span class="line">mai<span class="symbol">n78</span></span><br><span class="line">mai<span class="symbol">n79</span></span><br><span class="line">mai<span class="symbol">n80</span></span><br><span class="line">mai<span class="symbol">n81</span></span><br><span class="line">mai<span class="symbol">n82</span></span><br><span class="line">mai<span class="symbol">n83</span></span><br><span class="line">mai<span class="symbol">n84</span></span><br><span class="line">mai<span class="symbol">n85</span></span><br><span class="line">mai<span class="symbol">n86</span></span><br><span class="line">mai<span class="symbol">n87</span></span><br><span class="line">mai<span class="symbol">n88</span></span><br><span class="line">mai<span class="symbol">n89</span></span><br><span class="line">mai<span class="symbol">n90</span></span><br><span class="line">mai<span class="symbol">n91</span></span><br><span class="line">mai<span class="symbol">n92</span></span><br><span class="line">mai<span class="symbol">n93</span></span><br><span class="line">mai<span class="symbol">n94</span></span><br><span class="line">mai<span class="symbol">n95</span></span><br><span class="line">mai<span class="symbol">n96</span></span><br><span class="line">mai<span class="symbol">n97</span></span><br><span class="line">mai<span class="symbol">n98</span></span><br><span class="line">mai<span class="symbol">n99</span></span><br></pre></td></tr></table></figure></li><li>可以见到 main 和 vipThread 两个线程几乎同步执行,到了 main49 时,vipThread 会主动插队,这时 vipThread 之外的线程阻塞.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 多线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 多线程 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‼Reason for music,roaring my song!</title>
      <link href="post/life/music/"/>
      <url>post/life/music/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-02-08 12:30:24 * @LastEditors: Weidows * @LastEditTime: 2021-02-27 12:46:01 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\life\music.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%BA%8F%E7%AB%A0">序章</a></li><li><a href="#%E7%AB%AF%E5%80%AA">端倪</a></li><li><a href="#%E8%B0%83%E7%94%A8">调用</a></li><li><a href="#%E6%94%B6%E5%B0%BE">收尾</a></li><li><a href="#%E6%89%A9%E5%85%85">扩充</a></li><li><a href="#%E6%91%98%E5%BD%95">摘录</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="序章"><a href="#序章" class="headerlink" title="序章"></a>序章</h1><ul><li><p>关于我为什么更喜欢<code>日文歌</code>而非中文,我自身也一直在寻找答案.</p></li><li><p>直到…</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="端倪"><a href="#端倪" class="headerlink" title="端倪"></a>端倪</h1><ul><li><p>今天刷 B 站,像往常一样,看到了崩坏三的 MV-&gt;周深唱的<code>Rubia</code></p></li><li><p>听着听着就很有感触,突然想到以上的问题!</p></li></ul><hr><ul><li><p>我是偏爱日文歌吗?</p><ul><li>也不是</li><li>中文和英文也听,但是没多少能唱到心里去.</li></ul></li><li><p>这首<code>Rubia</code>,我喜欢她的气息连贯,顿挫自然,与是不是英文歌、我是不是能听懂无关.</p></li><li><p>于是思考到我听日文歌也不是全然能听懂,也是喜欢日文歌那种<code>平滑顿挫性</code></p></li></ul><hr><ul><li><p><em>Found it !</em></p></li><li><p>原来,我是比较喜欢这种<code>连续性</code>与<code>结合性</code>:</p><ul><li><p>看这张图,字符连接<code>很灵性</code>,就像是曲子,每个字与前后的字都有联系,连接紧密性低的话就会略失美感</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/08/YMu816jCtNh5UIW.png" alt="code" /></li><li><p>再如这一张</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/08/GxebVvLDoCl1jIU.png" alt="code" /></li></ul></li></ul><hr><ul><li><p>对比上面两个图可以看出来,虽然审美有差异吧,但是我认为上面的图更具美感</p><ul><li><p>每一个字节对前后两字节的美感做了补充和衬托</p></li><li><p>图下面的符号连接起来成为一个整体,比单调排列更强调<code>组合之美</code></p></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h1><ul><li><p>回归正题,结合实际音乐来谈一下~</p></li><li><p>就比如<code>Rubia</code>,歌中单词连接非常紧密,<code>歌词语言脱离实际意义,就像是本身就是旋律</code></p><ul><li><p>每个音节承前启后,在<code>音调</code>与<code>节奏变换</code>上很<code>平滑</code></p></li><li><p>通俗点讲就像是<code>妈妈唱的儿歌</code>,无论歌词是啥,唱的怎么样都特舒心,让人想睡觉.</p></li></ul></li></ul><hr><ul><li><p>音乐嘛,倒也不是那么单调,有些歌就不能联系紧密,比如摇滚</p><ul><li><p>我特喜欢的一个英+日文歌<code>Re:make</code></p></li><li><p>一个字是一个字,一个词是一个词,这样打击感和对耳膜的冲击感强烈</p></li><li><p>我认为<code>中文在这方面很牛掰</code>,因为中文字节音分辨明显,在 Rap 和摇滚之列的上面更能直击灵魂,就比如<code>野狼Disco</code>,日文在这方面就很…唱出来不是那个味!</p></li></ul></li><li><p>英文在脱离意义的歌词上优势很明显,比如电音时不时拽一句英文,那叫锦上添花.</p><ul><li><p>反观要是拽一句中文,哈哈哈哈哈,不敢想象有多尴尬.</p></li><li><p>日语在这方面也不是很强,不过在假音伴奏方面有一套.</p></li><li><p>中文因为气息变换大,连贯性低,假以伴奏的话,ummm 简单说起来就是抢戏,无论你多大声</p></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="收尾"><a href="#收尾" class="headerlink" title="收尾"></a>收尾</h1><ul><li><p>到这里该收束一下了,我更喜欢日文歌的原因:</p></li><li><p><code>气息感</code></p></li><li><p>就是<code>脱离歌词意义演绎旋律的能力.</code></p></li></ul><hr><ul><li><p>国内我知道的气息感强的比如<code>周杰伦</code>和<code>封茗囧菌</code></p><ul><li><p>简单来说就比如他俩都唱过<code>我的地盘</code>,都是中文,每个字都认识,就是听不出来唱的啥,嘴秃噜皮了也学不会!</p></li><li><p>试试就知道了,这种节奏感和气息把控很难</p></li><li><p>其实说来俄语在气息把控上更加巅峰,难的离谱儿~</p></li></ul></li></ul><hr><ul><li>emmm 英文歌嘛,说实话那种曲律我是欣赏不来,有喜欢的,但大多数不喜欢,没错,就是直接的不喜欢.</li></ul><hr><ul><li><p>我听动漫类型的歌多,这种大多是柔情的,来个对比:</p><ul><li><p><code>田井中彩智 - 一番星(最亮的星)</code></p></li><li><p><code>我的一个道姑朋友</code></p></li><li><p>虽然不是动漫歌哈,但是对比应该挺明显的,汉语在抒情方面确实略逊一筹,因为音节分辨太明显,顿挫更大</p></li></ul></li></ul><hr><ul><li>当然,找到合适的路就对了,比如<code>安静的午后</code>,中文抒情歌,就很舒心.</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="扩充"><a href="#扩充" class="headerlink" title="扩充"></a>扩充</h1><ul><li>我发现我对于<code>作曲家</code>的执著大于歌手的执著.</li><li>我喜欢的作曲家创作的很多曲子都很合我胃口,当然这话跟放屁一样,同一个作曲家的作品风格当然是差不多的啦!</li></ul><hr><ul><li><p>比如,我很喜欢日本的<code>飞内将大</code>,他创作的<code>蝴蝶结</code>和<code>Ref:rain(恋如雨止)</code>是我的最爱</p></li><li><p>还有像是<code>高梨康治</code>的纯音乐,非常热血;<code>泽野弘之</code>的电音和作曲等等也都十分好听.</p><hr></li><li><p>倒也不能说这么偏爱日本的,确确实实在国内找遍了没有像是这几位类型的大神~</p></li><li><p>国内电音的话,出名的比如<code>徐梦圆</code>,听他的电音确实很舒服,但是没有<code>上瘾</code>的感觉,毕竟这方面我也是位<code>瘾君子</code>了…</p></li></ul><hr><ul><li>国内特喜欢的作曲家是婚前的<code>李荣浩</code>,这也不是贬低,那个阶段他的歌很能触动我的内心,现阶段很难了…<ul><li>比如我最喜欢他的<code>老街</code>,味道太纯正了! 很有岁月感和代入感,<code>煽情不浓郁,回味还无穷.</code></li></ul></li></ul><hr><ul><li>其他的应该还有,没注意到.</li><li><code>酱紫吧</code>.</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h1><blockquote><p>“人，是会思考的芦苇。” ——帕斯卡，《思想录》</p></blockquote><blockquote><p>高晓松说的没错，日本音乐的精髓是旋律，中国音乐的精髓是歌词，欧美音乐的精髓是节奏<br>来自于起风了在歌曲&lt;&lt; Refrain &gt;&gt;的酷狗评论</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 音乐 </tag>
            
            <tag> 哲学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🚀网站优化记录.</title>
      <link href="post/Web/Node/Hexo/optimize/"/>
      <url>post/Web/Node/Hexo/optimize/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-02-07 01:11:24 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:05:57 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Web\Node\Hexo\optimize.md * @Description: * @!: *********************************************************************--><ul><li><a href="#why">Why?</a><ul><li><a href="#why-do-this"><code>Why do this?</code></a></li></ul></li><li><a href="#%E6%A6%82%E8%A7%88">概览</a></li><li><a href="#%E5%A5%91%E5%90%88">契合</a></li><li><a href="#%E4%BC%98%E5%8C%96-css">优化 css</a></li><li><a href="#%E4%BC%98%E5%8C%96-js">优化 js</a><ul><li><a href="#%E5%86%8D%E6%AC%A1%E9%AD%94%E6%94%B9">再次魔改</a></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Why"><a href="#Why" class="headerlink" title="Why?"></a>Why?</h1><h2 id="Why-do-this"><a href="#Why-do-this" class="headerlink" title="Why do this?"></a><code>Why do this?</code></h2><ul><li><p>这网站有太多需要简化的东西了,很多样式是<code>直接引入的css和js</code></p></li><li><p>巨耗费渲染性能和时间(可以感觉出来加载这网站挺费劲的)</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h1><ul><li><p>对于 css 的所有修改,全部整合进<code>mine.styl</code></p><ul><li><p>编译时就已经做好美化,额外资源负载几乎降为 0</p></li><li><p>注入到<code>index.styl</code>末尾.</p></li></ul><hr></li><li><p>js 的美化,追加到 <code>main.js</code></p><ul><li>请求数加 0,加载策略优化,时间降低.</li></ul><hr></li><li><p>对于 pug 的修改降低为三处,方便升级换代.</p><ul><li><p>footer-标签</p></li><li><p>pjax 适配</p></li><li><p>head 打包 js 美化代码</p></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="契合"><a href="#契合" class="headerlink" title="契合"></a>契合</h1><blockquote><p>结合 <a href="./butterfly_modify">butterfly 内部魔改记录</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="优化-css"><a href="#优化-css" class="headerlink" title="优化 css"></a>优化 css</h1><ul><li><p>以往的 css 是直接引入的文件,在客户端加载时还是会耗费一些不菲时间加载+渲染出来</p></li><li><p>优化思路就是把 css 变成<code>styl</code>,使之在编译生成 HTML 文件时就把样式改了,节省客户端耗费.</p></li></ul><hr><ul><li><p>如下:</p><ul><li><p>新建一个名为 <code>mine.styl</code> 的文件.</p></li><li><p>原 css 文件就是<code>mine.css</code>,用<a href="https://html5beta.com/tools/css2stylus.html"><code>css2styl</code></a>转换为 styl 格式,粘贴到 <code>mine.styl</code></p></li><li><p>注意这个网站转换成的 styl 有很多 bug(包括缩进和括号,需要人工检验)</p></li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/07/2C7cgeEIQNr3qLu.png" alt="20210207134449" /></li><li><p>包括原先<code>source/css/_global/function.styl</code>之类的内添加或修改的样式,也可以转入 mine.styl.</p></li><li><p>然后在<code>index.styl</code>中引入:</p><ul><li>在末尾加上</li></ul><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//mine</span></span><br><span class="line">@import <span class="string">&#x27;_mine/mine.styl&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>用 <code>hexo server</code> 测试一下,应该没问题~</p></li><li><p>这样 css 优化就完成了</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="优化-js"><a href="#优化-js" class="headerlink" title="优化 js"></a>优化 js</h1><ul><li><p>跟 css 一样,我原先也是直接一个<code>mine.js</code>引入的</p></li><li><p>虽然没啥问题,但是会导致页面第二次加载渲染,而且多了一个请求数</p></li><li><p>于是,我想直接把它淦进<code>main.js</code>中!</p><ul><li>操作不复杂,直接复制<code>mine.js</code>内容,粘贴进<code>main.js</code>最后</li><li>注意不是最末尾</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 粘贴到这里</span></span><br><span class="line">  refreshFn();</span><br><span class="line">  unRefreshFn();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="再次魔改"><a href="#再次魔改" class="headerlink" title="再次魔改"></a>再次魔改</h2></li><li><p>因为某些美化函数会被 pjax 功能搞失效,直接把函数放进 main.js 的话,pjax 无法再次使用</p></li><li><p>所以我把美化 js 打包并弄进 <code>butterfly/layout/head.pug</code> 中,在页面编译时就会被添加到 <code>&lt;head&gt;</code> 内,加载时间和请求数不增加!</p><p>现在,加载逻辑是: js 美化代码在 HTML 文件的 head 中,然后在 main.js 最后写一句调用命令; 在页面用了 pjax 加载时,pjax.pug 中的重渲染函数会被调用.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Node </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Website </tag>
            
            <tag> Hexo </tag>
            
            <tag> 优化 </tag>
            
            <tag> 魔改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>😍Manjaro虚拟机充当服务器记录.</title>
      <link href="post/system/Manjaro-Server/"/>
      <url>post/system/Manjaro-Server/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-02-03 14:00:21 * @LastEditors: Weidows * @LastEditTime: 2021-03-07 00:18:55 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\system\Manjaro-Server.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E7%B3%BB%E7%BB%9F%E9%80%89%E6%8B%A9">系统选择</a><ul><li><a href="#%E6%88%91%E7%9A%84%E9%9C%80%E6%B1%82">我的需求</a></li></ul></li><li><a href="#%E5%90%AF%E7%94%A8-ssh-%E6%9C%8D%E5%8A%A1">启用 ssh 服务</a><ul><li><a href="#%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4">故障排除</a></li></ul></li><li><a href="#%E6%8D%A2%E6%BA%90">换源</a><ul><li><a href="#%E8%87%AA%E5%8A%A8">自动</a></li><li><a href="#%E6%89%8B%E5%8A%A8">手动</a></li><li><a href="#%E6%9B%B4%E6%96%B0">更新</a></li></ul></li><li><a href="#%E9%85%8D%E7%BD%AE-docker">配置 docker</a></li><li><a href="#%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85">软件安装</a></li></ul><h1 id="系统选择"><a href="#系统选择" class="headerlink" title="系统选择"></a>系统选择</h1><ul><li>关于我为什么最后选择了作为 Server 来说比较冷门的 <code>Manjaro</code></li></ul><table><thead><tr><th align="center">系统</th><th align="center">特性</th></tr></thead><tbody><tr><td align="center">CentOS</td><td align="center">系统特别稳健,bug 少,出了问题解决方案多,服务型软件丰富;标准 server,不怎么需要特殊配置,维护难度低</td></tr><tr><td align="center">Ubuntu</td><td align="center">跟 CentOS 差不多,但是因为生态惯性问题确实比 CentOS 用得少,现在由 CentOS 转向 Ubuntu 的很多;server 安装后需要做很多配置才能使用,维护性难度中等;server 安装后默认没有 root 用户</td></tr><tr><td align="center">Manjaro</td><td align="center">Arch 分支的 Linux 发行版,desktop-KDE,内核滚动更新很快,更新比 Arch 慢但更稳定,软件生态很丰富,图形化好维护;定位并非 Server,是桌面操作系统所以功耗稍大;默认不启用 ssh 服务</td></tr><tr><td align="center">RaspberryPi</td><td align="center">树莓派定制化系统,可以说啥都干得了,但是啥都干不好</td></tr><tr><td align="center">Deepin</td><td align="center">生态正在逐步扩大,但是对于服务器端还是太差了,毕竟它的定位也是桌面操作系统;图形化卡顿比较严重,有些无解决方案的 bug;不开放 root 用户</td></tr></tbody></table><hr><h2 id="我的需求"><a href="#我的需求" class="headerlink" title="我的需求"></a>我的需求</h2><ul><li><p>我想让服务器比较稳定,因为在主机上用<code>VMware</code> 开的虚拟机,所以性能消耗要求不高.</p></li><li><p>最好是带有图形界面,这样维护比较方便</p></li><li><p>与<code>VScode-ssh</code>连接必须稳定!</p><ul><li>有些服务需要把代码拉到服务器上</li></ul><blockquote><p>已经有解决方案了,参见 <a href="../../experience/SSH#VScode-ssh-%E6%96%AD%E5%BC%80%E8%BF%9E%E6%8E%A5">✨SSH 远程连接.#VScode-ssh-断开连接</a></p></blockquote></li><li><p>有且要开放 root</p><ul><li>有的系统不带 root 账户,有的不开放.</li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="启用-ssh-服务"><a href="#启用-ssh-服务" class="headerlink" title="启用 ssh 服务"></a>启用 ssh 服务</h1><blockquote><p><a href="https://blog.csdn.net/SUDDEV/article/details/85314469">Manjaro Linux 系统 ssh：connect to host localhost port 22: Connection refused 解决方法</a></p></blockquote><ul><li><p>默认情况下 manjaro 有 ssh 但是不开启.</p></li><li><p>用 ssh 连接它会出现以下报错:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connect <span class="keyword">to</span> host localhost<span class="built_in"> port </span>22:<span class="built_in"> Connection </span>refused</span><br></pre></td></tr></table></figure></li><li><p>开启 ssh 服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable sshd.service</span><br></pre></td></tr></table></figure></li><li><p>开启后需要<code>重启</code>下才能生效.</p></li></ul><hr><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><ul><li><p>如果 ssh 服务开启了,连接步骤也没错,但是就是连不上,有可能是 ssh 旧记录的问题</p></li><li><p>报错信息包含如下</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     <span class="comment">@</span></span><br><span class="line"><span class="comment">&gt; @</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span><span class="comment">@@</span></span><br></pre></td></tr></table></figure></li><li><p>去主机电脑上找到<code>~/.ssh/known_hosts</code>,这里面有过去连接的 ip 记录和公钥,删除对应的就可.</p><ul><li>Windows 上那个位置就是<code>C:\Users\你的用户名\.ssh</code></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h1><blockquote><p><a href="https://blog.csdn.net/weixin_43968923/article/details/86349914">arch/Manjaro 添加国内源以及社区源</a></p></blockquote><h2 id="自动"><a href="#自动" class="headerlink" title="自动"></a>自动</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo pacman-mirrors -i -c China -m rank</span></span><br></pre></td></tr></table></figure><hr><h2 id="手动"><a href="#手动" class="headerlink" title="手动"></a>手动</h2><ul><li><p>找到<code>/etc/pacman.d/mirrorlist</code>,备份之后修改:</p><ul><li>越靠上优先级越高.</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 中科大</span></span><br><span class="line">Server = https:<span class="regexp">//mi</span>rrors.ustc.edu.cn<span class="regexp">/manjaro/</span>stable<span class="regexp">/$repo/</span><span class="variable">$arch</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##  清华大学</span></span><br><span class="line">Server = https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/manjaro/</span>stable<span class="regexp">/$repo/</span><span class="variable">$arch</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 上海交通大学</span></span><br><span class="line">Server = https:<span class="regexp">//mi</span>rrors.sjtug.sjtu.edu.cn<span class="regexp">/manjaro/</span>stable<span class="regexp">/$repo/</span><span class="variable">$arch</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 浙江大学</span></span><br><span class="line">Server = https:<span class="regexp">//mi</span>rrors.zju.edu.cn<span class="regexp">/manjaro/</span>stable<span class="regexp">/$repo/</span><span class="variable">$arch</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><ul><li><p>更新软件包</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">pacman -Sy</span></span><br></pre></td></tr></table></figure></li><li><p>更新所有</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">pacman -Syu</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="配置-docker"><a href="#配置-docker" class="headerlink" title="配置 docker"></a>配置 docker</h1><blockquote><p>详见 <a href="../../system/docker">🌈 初探 Docker.</a></p></blockquote><blockquote><p><a href="https://blog.huangz.me/2020/docker-on-linux.html">在 Manjaro Linux 系统使用 Docker</a></p></blockquote><h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><blockquote><p><a href="https://blog.csdn.net/john_bh/article/details/104652224">msys2 pacman 常用命令以及添加国内源加速 pacman</a></p></blockquote><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo pacman -S docker</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> system </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Manjaro </tag>
            
            <tag> 计算机系统 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🟡Ubuntu-Server搞机记录.</title>
      <link href="post/system/virtual-server/"/>
      <url>post/system/virtual-server/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-02-02 02:04:38 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:20:06 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\system\virtual-server.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85">下载安装</a></li><li><a href="#%E6%8D%A2%E6%BA%90">换源</a></li><li><a href="#%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81-ip">配置静态 IP</a></li><li><a href="#%E8%BD%AF%E4%BB%B6%E5%A4%87%E4%BB%BD">软件备份</a></li></ul><h1 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h1><ul><li><p>官网上下载 ISO 文件就行,挺快的</p><ul><li><p>desktop 是桌面版,有图形界面</p></li><li><p>server 是服务器版,没有图形界面(也就是只有命令行界面)</p></li></ul><hr></li><li><p>我用的<code>VMware</code>安装的,用其他软件也可,个人比较喜欢这个.</p><ul><li>安装时可以选择附带的服务软件,比如<code>docker</code>,<code>k8s</code>等等…</li></ul><hr></li><li><p>安装完成后长这样</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/02/en8lrzMPTpSN3wj.png" alt="20210202144325" /></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h1><blockquote><p><a href="https://blog.csdn.net/xiangxianghehe/article/details/105688062">Ubuntu 20.04 换国内源 清华源 阿里源 中科大源 163 源</a></p></blockquote><ul><li>安装系统过程中就有换源选项.</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="配置静态-IP"><a href="#配置静态-IP" class="headerlink" title="配置静态 IP"></a>配置静态 IP</h1><blockquote><p><a href="https://www.cnblogs.com/yaohong/p/11593989.html">ubuntu 18.04 设置静态 ip 方法</a></p></blockquote><ul><li><p>初始的 Ubuntu-Server 没有<code>net-tools</code>,需要<a href="#%E8%BD%AF%E4%BB%B6%E5%A4%87%E4%BB%BD">安装</a></p></li><li><p>默认情况下使用<code>DHCP</code>,连接网络会自动分配一个 IP,使用<code>ifconfig</code>查看(这个 ifconfig 就是上面 net-tools 里面的)</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">weidows@</span>ubuntu-server:~/Code$ ifconfig</span><br><span class="line">ens33: flags=<span class="number">4163</span>&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="number">1500</span></span><br><span class="line">        inet <span class="number">192.168</span><span class="number">.2</span><span class="number">.122</span>  netmask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>  broadcast <span class="number">192.168</span><span class="number">.2</span><span class="number">.255</span></span><br><span class="line">        inet6 fe80::<span class="number">20</span>c:<span class="number">29f</span>f:fe28:c082  prefixlen <span class="number">64</span>  scopeid <span class="number">0x20</span>&lt;link&gt;</span><br><span class="line">        ether <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:<span class="number">28</span>:c0:<span class="number">82</span>  txqueuelen <span class="number">1000</span>  (Ethernet)</span><br><span class="line">        RX packets <span class="number">114664</span>  bytes <span class="number">143722941</span> (<span class="number">143.7</span> MB)</span><br><span class="line">        RX errors <span class="number">0</span>  dropped <span class="number">0</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></span><br><span class="line">        TX packets <span class="number">52086</span>  bytes <span class="number">37199464</span> (<span class="number">37.1</span> MB)</span><br><span class="line">        TX errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span></span><br><span class="line"></span><br><span class="line">lo: flags=<span class="number">73</span>&lt;UP,LOOPBACK,RUNNING&gt;  mtu <span class="number">65536</span></span><br><span class="line">        inet <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  netmask <span class="number">255.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">        inet6 ::<span class="number">1</span>  prefixlen <span class="number">128</span>  scopeid <span class="number">0x10</span>&lt;host&gt;</span><br><span class="line">        loop  txqueuelen <span class="number">1000</span>  (Local Loopback)</span><br><span class="line">        RX packets <span class="number">14643</span>  bytes <span class="number">53874531</span> (<span class="number">53.8</span> MB)</span><br><span class="line">        RX errors <span class="number">0</span>  dropped <span class="number">0</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></span><br><span class="line">        TX packets <span class="number">14643</span>  bytes <span class="number">53874531</span> (<span class="number">53.8</span> MB)</span><br><span class="line">        TX errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">weidows@</span>ubuntu-server:~/Code$</span><br></pre></td></tr></table></figure></li><li><p>可以看到第三行<code>192.168.2.122</code>就是分配的 ip 了,用它就行.</p></li><li><p>进入<code>/etc/netplan/</code>这个目录,使用<code>ll</code>查看内部有啥东西</p><ul><li><p>发现第六行<code>00-installer-config.yaml</code>这个文件是我们要找的(可能名字不一样,后缀是.yaml 就对了)</p></li><li><p>使用<code>cat</code>查看文件内容,核实没错,然后修改它!</p></li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">weidows@</span>ubuntu-server:~/Code$ cd /etc/netplan/</span><br><span class="line"><span class="symbol">weidows@</span>ubuntu-server:/etc/netplan$ ll</span><br><span class="line">total <span class="number">12</span></span><br><span class="line">drwxr-xr-x  <span class="number">2</span> root root <span class="number">4096</span> Feb  <span class="number">1</span> <span class="number">17</span>:<span class="number">55</span> ./</span><br><span class="line">drwxr-xr-x <span class="number">92</span> root root <span class="number">4096</span> Feb  <span class="number">2</span> <span class="number">06</span>:<span class="number">25</span> ../</span><br><span class="line">-rw-r--r--  <span class="number">1</span> root root  <span class="number">116</span> Feb  <span class="number">1</span> <span class="number">17</span>:<span class="number">55</span> <span class="number">00</span>-installer-config.yaml</span><br><span class="line"><span class="symbol">weidows@</span>ubuntu-server:/etc/netplan$ cat <span class="number">00</span>-installer-config.yaml</span><br><span class="line"># This <span class="keyword">is</span> the network config written by <span class="string">&#x27;subiquity&#x27;</span></span><br><span class="line">network:</span><br><span class="line">  ethernets:</span><br><span class="line">    ens33:</span><br><span class="line">      dhcp4: <span class="literal">true</span></span><br><span class="line">  version: <span class="number">2</span></span><br><span class="line"><span class="symbol">weidows@</span>ubuntu-server:/etc/netplan$</span><br></pre></td></tr></table></figure></li><li><p>使用<code>vi</code>修改<code> sudo vi /etc/netplan/00-installer-config.yaml</code></p><ul><li>地址啥的按照规则设</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This is the network config written by &#x27;subiquity&#x27;</span></span><br><span class="line"><span class="attr">network:</span></span><br><span class="line">  <span class="attr">ethernets:</span></span><br><span class="line">    <span class="attr">ens33:</span></span><br><span class="line">      <span class="attr">dhcp4:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">addresses:</span> [<span class="number">192.168</span><span class="number">.2</span><span class="number">.122</span><span class="string">/24</span>]</span><br><span class="line">      <span class="attr">gateway4:</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.1</span></span><br><span class="line">      <span class="attr">nameservers:</span></span><br><span class="line">        <span class="attr">addresses:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><p>然后应用<code>sudo netplan apply</code>设置,完事!</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="软件备份"><a href="#软件备份" class="headerlink" title="软件备份"></a>软件备份</h1><ul><li><p>找软件的话可以用<code>apt search XXX</code>来找</p></li><li><p>个人安装的一些服务型软件(在主机上做的开发,用这个 Server 跑服务)</p></li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> docker</span><br><span class="line">sudo apt <span class="keyword">install</span> net-tools</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> system </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机系统 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🎇尝试转投wsl生态.</title>
      <link href="post/system/wsl2/"/>
      <url>post/system/wsl2/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-02-01 13:54:10 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:20:29 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\system\wsl2.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%B0%8F%E5%90%90%E6%A7%BD">小吐槽</a></li><li><a href="#%E6%8C%87%E5%8D%97">指南</a><ul><li><a href="#%E5%AE%98%E6%96%B9%E7%9A%84">官方的</a></li><li><a href="#%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A">名词解释</a></li></ul></li><li><a href="#%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4">安装步骤</a><ul><li><a href="#%E7%B3%BB%E7%BB%9F">系统</a></li><li><a href="#%E5%8A%9F%E8%83%BD">功能</a></li><li><a href="#%E9%85%8D%E7%BD%AE">配置</a></li></ul></li><li><a href="#%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90">安装完成</a></li><li><a href="#vscodewsl">VScode+wsl</a><ul><li><a href="#terminal">Terminal</a></li><li><a href="#remote-%E5%BC%80%E5%8F%91">Remote 开发</a></li></ul></li><li><a href="#%E5%9C%B0%E5%9D%80%E6%98%A0%E5%B0%84">地址映射</a></li><li><a href="#ideawsl">IDEA+wsl</a><ul><li><a href="#terminal-1">terminal</a></li></ul></li><li><a href="#%E5%90%8E%E8%AE%B0">后记</a></li><li><a href="#wsl-%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85">wsl 软件安装</a><ul><li><a href="#apt">apt?</a></li><li><a href="#dpkg">dpkg</a></li></ul></li><li><a href="#%E7%97%9B%E7%82%B9%E8%A7%A3%E5%86%B3">痛点解决</a></li></ul><h1 id="小吐槽"><a href="#小吐槽" class="headerlink" title="小吐槽"></a>小吐槽</h1><ul><li><p>搜文章头图时发现…百度和谷歌差距有点大…</p></li><li><p>我用谷歌时间肯定没百度长,看起来谷歌更了解我 🤣</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/01/pOXAbKUQ5MaW2c9.png" alt="20210201140021" /><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/01/wgzIP2QA3qrnHpR.png" alt="20210201140048" /></li><li><p>虽然并不想吹捧或贬低哪个,但是这…(看来我是老双标怪了~)</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="指南"><a href="#指南" class="headerlink" title="指南"></a>指南</h1><h2 id="官方的"><a href="#官方的" class="headerlink" title="官方的"></a>官方的</h2><ul><li><p>这个微软是官方的,讲的很详细.</p><blockquote><p><a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10#update-to-wsl-2">适用于 Linux 的 Windows 子系统安装指南 (Windows 10)</a></p></blockquote></li></ul><hr><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><ul><li><p>下面牵扯到很多名词,乍一看会<code>蒙圈</code>.</p></li><li><p>放一个关系网络</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- hyper-v</span><br><span class="line">  <span class="string">|- Docker(hype-v引擎)</span></span><br><span class="line">  <span class="string">|- Windows</span></span><br><span class="line">    <span class="string">|- wsl2</span></span><br><span class="line">      <span class="string">|- wsl-linux</span></span><br><span class="line">      <span class="string">|- Docker(wsl引擎)</span></span><br><span class="line">        <span class="string">|- Nginx</span></span><br><span class="line">        <span class="string">|- Node.js</span></span><br><span class="line">        <span class="string">|- 各种系统和服务</span></span><br></pre></td></tr></table></figure></li><li><p><code>hyper-v</code>是微软家的虚拟机平台,定位于<code>VMware</code>相同,虽然它看起来是 Windows 内部的软件,但是开启 hyper-v 后 Windows 本身也会成为其内部的虚拟机.</p></li><li><p>wsl 是基于 Windows 下实现的 Linux 虚拟化技术,全称<code>Windows Subsystem for Linux</code>,所以这里面装的系统肯定是各种 linux,<code>2</code>只是版本号,一般 wsl2 简称 wsl,两个版本功能上有些差别.</p><ul><li><code>wsl-linux</code>就是指在 Store 里面像是 Ubuntu,Debian 等等的 linux 系统</li></ul></li></ul><blockquote><p>Docker 的话详见 <a href="../docker">🌈 初探 Docker.</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><ul><li><p>首先 Windows64 位系统版本号必须大于等于 <code>1903</code>.</p></li><li><p>系统类型只有专业版(好像家庭版和企业版不行)</p></li></ul><hr><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li><p><input checked="" disabled="" type="checkbox">  启用适用于 Linux 的 Windows 子系统</p></li><li><p><input checked="" disabled="" type="checkbox">  启用虚拟机功能</p><hr></li><li><p>如图上面两个<code>必须开启</code>,其他的您看着来~</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/01/A2jzxWdCoIRfJ8h.png" alt="20210201160810" /></li></ul><hr><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li><p>下载并安装</p><blockquote><p><a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">下载适用于 x64 计算机的 WSL2 Linux 内核更新包</a></p></blockquote></li><li><p>然后,将 WSL 2 设置为默认版本</p><ul><li><p>在 PowerShell 输入</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --<span class="keyword">set</span>-<span class="keyword">default</span>-version <span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><p>没出问题的话会提示 <code>有关与 WSL 2 的主要区别的信息，请访问 https://aka.ms/wsl2</code></p></li></ul></li><li><p><code>最后</code>,打开<code>Microsoft Store</code>,安装想安装的 Linux 系统</p><ul><li><p>Ubuntu 16.04 LTS</p></li><li><p>Ubuntu 18.04 LTS</p></li><li><p>Ubuntu 20.04 LTS (主流推荐)</p></li><li><p>openSUSE Leap 15.1</p></li><li><p>SUSE Linux Enterprise Server 12 SP5</p></li><li><p>SUSE Linux Enterprise Server 15 SP1</p></li><li><p>Kali Linux</p></li><li><p>Debian GNU/Linux</p></li><li><p>Fedora Remix for WSL</p></li><li><p>Pengwin</p></li><li><p>Pengwin Enterprise</p></li><li><p>Alpine WSL</p></li></ul></li><li><p>小插曲,如果 Store 加载不出来数据,报错<code>0x80131500</code>,那么,请关掉你的科学上网软件 🤣</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h1><ul><li><p>第一次打开时他会先安装一小会儿,然后让你输入用户名和密码,创建新用户</p><ul><li>注意 Linux 系统输入密码时不会显示<code>****</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Installing, this may take a few minutes...</span><br><span class="line">Please <span class="keyword">create</span> a <span class="keyword">default</span> UNIX <span class="keyword">user</span> account. The username does <span class="keyword">not</span> need <span class="keyword">to</span> <span class="keyword">match</span> your Windows username.</span><br><span class="line"><span class="keyword">For</span> more information visit: https://aka.ms/wslusers</span><br><span class="line">Enter <span class="keyword">new</span> UNIX username: weidows</span><br><span class="line"><span class="keyword">New</span> <span class="keyword">password</span>:</span><br><span class="line">Retype <span class="keyword">new</span> <span class="keyword">password</span>:</span><br><span class="line">passwd: <span class="keyword">password</span> <span class="keyword">updated</span> successfully</span><br><span class="line">Installation successful!</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="VScode-wsl"><a href="#VScode-wsl" class="headerlink" title="VScode+wsl"></a>VScode+wsl</h1><h2 id="Terminal"><a href="#Terminal" class="headerlink" title="Terminal"></a>Terminal</h2><ul><li><p>网上大多数人推荐<code>Windows Terminal</code>,我觉得也不错,不过没用,直接用的<code>VScode</code></p></li><li><p>如图,点<code>选择默认shell</code>里面就可以选择<code>wsl</code>了</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/01/6D1J9yq5EMuXQVx.png" alt="20210201165532" /></li></ul><hr><h2 id="Remote-开发"><a href="#Remote-开发" class="headerlink" title="Remote 开发"></a>Remote 开发</h2><ul><li><p>wsl 相当于在内网开了一台电脑,会有一个<code>内网ip</code></p></li><li><p>我们不需要获取这个 IP,直接在 VScode 里安装<code>Remote - WSL</code>这个插件</p></li><li><p>甚至都不需要配置,直接点左下角打开就行了</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/01/KlHZ74Obe8zEgVf.png" alt="20210201173024" /></li><li><p>当然,如果不嫌麻烦拿 ssh 连接 wsl 也可以,需要在 wsl 系统内配置静态 ip,但是很多功能性上不如上面那个插件.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="地址映射"><a href="#地址映射" class="headerlink" title="地址映射"></a>地址映射</h1><ul><li><p>安装 wsl 之后就可以通过<code>\\wsl$</code>访问到自己的虚拟机</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/01/DBd9HOUPhSMtgNo.png" alt="20210201173448" /></li><li><p>映射</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/01/XMjQTWpiznhlIV7.png" alt="20210201174422" /></li><li><p>映射之后出现新盘符</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/01/k3htJvZ1CKrSmbO.png" alt="20210201174646" /></li><li><p>有个奇妙的事是<code>mnt/</code>目录下会反过来映射你的所有本地盘符</p><ul><li><p>看上面那个图,我有四个盘符,然后 mnt 目录下就有<code>c,d,e,f</code>四个文件夹</p></li><li><p>这几个映射文件夹在 Windows 文件管理器无法打开,但是在终端里可以进入</p></li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/01/tQcB8vpzZIKoEeH.png" alt="20210201174957" /></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="IDEA-wsl"><a href="#IDEA-wsl" class="headerlink" title="IDEA+wsl"></a>IDEA+wsl</h1><h2 id="terminal"><a href="#terminal" class="headerlink" title="terminal"></a>terminal</h2><ul><li><p>设置里打开 <code>File -&gt; Settings -&gt; Tools -&gt; Terminal</code></p></li><li><p>shell path 填上</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;cmd.exe&quot;</span> <span class="string">/k</span> <span class="string">&quot;wsl.exe&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>如图</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/01/RxpgAbjuDSGivym.png" alt="20210201221447" /></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><ul><li><p>本来开始想的是开发环境转到 wsl 内部</p></li><li><p>折腾了大半天发现 wsl 生态并不很讨喜,只有部分特性值得使用</p><ul><li><p>比如跑 <code>Docker</code>,<code>zsh</code> 终端,<code>SQL</code> 服务等等…</p></li><li><p>尝试了一下,直白点说,<code>用它做开发不行!</code></p></li><li><p>但是拿它来<code>替代虚拟机</code>倒是还可以,它的 CPU 闲时占用很低(不到 1%),内存占用半个 G,还好~</p></li></ul><hr></li><li><p>为啥呢? 说一下我遇到的痛点:</p><ul><li><p>首先,<code>生态问题</code>,下图是我的开发环境,想要移植到 Linux 难度很大,肯定要放弃一些,,所以我放弃移植了…</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/01/xMkL83vV9iIKB6u.png" alt="20210201215547" /></li><li><p>其次,有些小问题需要解决,比如路径问题<code>&quot;/&quot;与&quot;\&quot;</code>不一样,还有换行符问题,会导致 git 认为你的项目全绿<code>(就是所有文件的所有行都有修改)</code>,令人窒息…</p></li><li><p>再次,<code>性能问题</code>,这个虚拟化毕竟是虚拟,上手试了一下会有迟钝(CPU 和网络问题都有),另外,开启了虚拟后就连 Windows 多多少少也会损耗一些性能.</p></li><li><p>其实我认为最难受的是<code>IDE适配</code>,我用的<code>IntelliJ IDEA</code>和<code>VScode</code>,它们需要<code>Git,Node.js,openjdk,maven,python</code>等等,这些并不能通过 wsl 直通,除非直接用 linux 系统把这些全装进 linux 里面.</p></li></ul></li></ul><hr><ul><li><p>不过倒也没有白安装,一些东西还是需要 wsl 的</p><ul><li><p>比如<code>bash</code>,<code>zsh</code>,<code>docker</code>等等…</p></li><li><p>害,算了,<code>VMware</code>真香!</p></li></ul></li></ul><hr><ul><li><p>还有一个比较上头的问题:</p><ul><li>开启 wsl 后因为虚拟化,window 系统开机后<code>无法自动连接 WiFi</code>,可能是个 bug,但是劝退了!</li><li>经测试,开启 hyper-v 也会造成这后果.</li><li>有可能只是我这么一个个例,硬件兼容性问题.</li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="wsl-软件安装"><a href="#wsl-软件安装" class="headerlink" title="wsl 软件安装"></a>wsl 软件安装</h1><h2 id="apt"><a href="#apt" class="headerlink" title="apt?"></a>apt?</h2><blockquote><p><a href="https://www.sysgeek.cn/apt-vs-apt-get/">Linux 中 apt 与 apt-get 命令的区别与解释</a></p></blockquote><blockquote><p>简单来说就是：apt = apt-get、apt-cache 和 apt-config 中最常用命令选项的集合。</p></blockquote><hr><h2 id="dpkg"><a href="#dpkg" class="headerlink" title="dpkg"></a>dpkg</h2><blockquote><p><a href="https://blog.csdn.net/LEON1741/article/details/85127000">怎么理解 ubuntu 中的软件包管理器 apt 和 dpkg</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="痛点解决"><a href="#痛点解决" class="headerlink" title="痛点解决"></a>痛点解决</h1><blockquote><p><a href="https://www.cnblogs.com/kuangdaoyizhimei/p/14175143.html#_label2_0">本篇文章会介绍 win10 中 wsl2 的安装和使用以及遇到的常见问题比如如何固定 wsl2 地址等问题的总结。</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> system </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机系统 </tag>
            
            <tag> Windows </tag>
            
            <tag> wsl2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🍔语段优选~(贰)</title>
      <link href="post/life/nicer/2/"/>
      <url>post/life/nicer/2/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-01-31 22:02:04 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 16:42:20 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\life\nicer\2.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%87%A0%E5%8F%A5%E9%AA%9A%E8%AF%9D">几句骚话</a></li><li><a href="#%E5%A4%A7%E4%BD%AC%E7%94%9F%E6%B4%BB%E7%BB%8F%E9%AA%8C">大佬生活经验</a></li><li><a href="#%E5%A7%93%E5%90%8D">姓名</a></li><li><a href="#%E5%87%BA%E8%B7%AF">&lt;&lt;出路&gt;&gt;</a></li><li><a href="#%E6%91%B8%E9%B1%BC">摸鱼</a></li><li><a href="#%E4%BB%96%E4%B9%9F%E5%B9%B2%E8%BF%99%E4%B8%AA">他也干这个?</a></li><li><a href="#%E4%BD%9C%E7%94%BB">作画</a></li><li><a href="#%E7%84%A6%E8%99%91">焦虑</a></li><li><a href="#%E6%97%A0%E9%A2%98">无题</a></li><li><a href="#%E9%82%A3%E4%BA%9B-40-%E5%B2%81%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98%E9%83%BD%E5%8E%BB%E5%93%AA%E4%BA%86">那些 40 岁的程序员都去哪了?</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="几句骚话"><a href="#几句骚话" class="headerlink" title="几句骚话"></a>几句骚话</h1><p>雪花们是无辜的,但它们都死了.</p><p>男孩子小时候喜欢玩电动玩具，女孩子小时候喜欢玩娃娃。<br>长大后，<br>男孩子喜欢玩娃娃，女孩子喜欢玩电动玩具。<br>或许，这就是这就是成长吧。​</p><p>骗我感情可以，骗我钱请去世[OK]这一辈子我可以爱很多人，但我能挣几个钱？[微笑][跪了]​</p><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="大佬生活经验"><a href="#大佬生活经验" class="headerlink" title="大佬生活经验"></a>大佬生活经验</h1><blockquote><p><a href="https://mp.weixin.qq.com/s?__biz=MzU4NjIxODMyOQ==&mid=2247494759&idx=1&sn=798ea150d4f4744d1796c92e83690552&chksm=fdfc0251ca8b8b47a1e7b3f3b4d559082bc50dfa747cecf088bd8f976dad7cd4618a9f8353d9&mpshare=1&scene=23&srcid=0131UNZyzkK6IJ65Fo9xbeqV&sharer_sharetime=1612068450736&sharer_shareid=ff6bb8cfd138294e80df076b8b76232d#rd">摘自: 一个中科大差生的 8 年程序员工作总结</a></p></blockquote><p>如果你的亲人是普通阶层，那对于人生中一些大事来说，他们给的建议往往就是普通阶层的思维，他们的阶层就是他们一生思维决策的结果，如果你的目标是跳出本阶层，那最好只把他们的建议当成参考。</p><p>不要和你的同事比工资，没有意义，比工资总会有人受伤，更多的是负面影响，并且很多时候受伤的会是你。</p><p>人很难挣到他认知之外的财富，就算偶然拿到了，也可能很快失去。所以不要羡慕别人投机获得的财富，努力提升你的思维，财商才是正道。</p><hr><ul><li>虽然每个人生活环境不一样,各有各的精彩,但是有些生活方式确实值得我们学习~</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="姓名"><a href="#姓名" class="headerlink" title="姓名"></a>姓名</h1><p>圣·璃莹殇·安洁莉娜·樱雪羽晗灵·血丽魑·魅·安塔利亚·伤梦薰魅·海瑟薇·蔷薇玫瑰泪·羽灵·邪儿·凡多姆海威恩·夏影·琉璃舞·雅·蕾玥瑷雅·曦梦月·玥蓝·岚樱·紫蝶·丽馨·蕾琦洛·凤·颜鸢·希洛·玖兮·雨烟·叶洛莉兰·凝羽冰·泪伊如冰落·殇心樱语冰凌伊娜·洛丽塔紫·蝶梦如璃紫陌悠千艳·优花梦冰玫瑰灵伤如爱·晶泪墨阳云筱残伤雅·琉璃爱梦莲泪·冰雪殇璃陌梦·爱樱沫渺·落璃琴依语·千梦然丝伤·可薇·茉殇黎·幽幻紫银·泪如韵影倾乐兰慕·冰雅泪落冰紫蝶梦·璃紫陌悠千艳优墨阳云筱残·雪莲茉·伊文思·蕊夏清·碎墨音·芊乐梦黛怡·墨丽莎·梦灵苏魅香·紫蓝幽幻倾城萌美迷离·茉莉白嫩爱凤风魑·殇泪花如霜梦兰·萝莉心梦妖丽百千艳·瑰百合香珠合梦喃·泪伤梦雅爱之瑰·墨艳黎幻殇雪倩梦·情娜血清恋沫幽弥千月绯心丝梦灵蓝千月筱雪殇·希羽岚梦心殇雨樱琉璃舞韵倾雅·芸茜殇樱雪梦·曦魂梦月澪瑷琪欣泪·殇紫乐蝶雨·苏丽落雅馨瑷魅·蠫赬飖·风璃殇·沫血伤·月冰灵希洛梦·恋琴爱</p><ul><li>真 tm 好听~</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="lt-lt-出路-gt-gt"><a href="#lt-lt-出路-gt-gt" class="headerlink" title="&lt;&lt;出路&gt;&gt;"></a>&lt;&lt;出路&gt;&gt;</h1><blockquote><p><a href="https://mp.weixin.qq.com/s?__biz=Mzg4NjUxMzg5MA==&mid=2247488256&idx=1&sn=a78b6d9847b8ed14aae4fd598eb4c1de&chksm=cf99da8df8ee539bfd633765a051a0c8bc1dc28912621f4ec6d7de7368ca51fb07ff74ebc732&mpshare=1&scene=23&srcid=0218w4FckiZHX9wH52SrTrtx&sharer_sharetime=1613655574537&sharer_shareid=ff6bb8cfd138294e80df076b8b76232d#rd">《出路》</a></p></blockquote><ul><li><p><code>局内人,观测者,局外人</code>的三方博弈</p></li><li><p>纪录片很客观,反应出来的事实也很客观,看完之后感觉自己竟与局内人无二</p></li><li><p>我应该也是跟里面的男生一样,<code>小镇做题家</code>,噩梦的 HeBei,比妈还亲的五三,hhh,到了大学也是需要看网课自学竞争,只不过竞争范围大了=&gt;全国化了</p></li><li><p><code>作为局外的观测者,我感觉观测的并不局限在视频里的角色,反而更加聚焦在我自己身上,我,观测的是我对社会的观测角度.</code></p></li><li><p>我倒是并不认为这三人谁悲惨谁成功,我,谁的人生都没经历过,只知自己躯体上挂载着二十多光阴.</p></li></ul><hr><p>有些感慨,来一点题外话:</p><ol><li><p>小时候特喜欢喜剧,比如周星驰,小沈阳他们拍的,不理解为什么有的人喜欢悲情剧.</p></li><li><p>后来大一些,感觉部分喜剧已经笑不出来了,悲情剧比喜剧更加精彩,戏剧本身更加耐人寻味</p></li><li><p>现在,连<code>德云社</code>也不容易让我做到<code>笑喷</code>,只有<code>芳文社</code>能让我很会心的笑了.</p></li></ol><hr><p>写到这里,大致我也在写的过程中明白了一些…</p><ul><li><p>我在上学,包括去社会打拼过程中被磨损了很大部分的<code>喜怒哀乐</code></p></li><li><p>这是可悲的,生活能不能过出喜怒哀乐先不说,至少我不想丢失那份<code>人之常情</code>.</p></li><li><p>我到现在还不是特崇拜所谓的<code>有钱人</code>和<code>大神</code>,bro,自身做到让别人有利可图也是挺累的</p><ul><li><p>或许这也是<code>大人</code>口中的”你还太年轻,长大了你就明白了”</p></li><li><p>yare yare,可恶,不想长大!</p></li></ul></li></ul><hr><h1 id="摸鱼"><a href="#摸鱼" class="headerlink" title="摸鱼"></a>摸鱼</h1><p>特地换了电脑来回复下我的感受 今年刚好 30，我今年总算学会摸鱼和闭嘴了</p><ol><li>你想做成一件事 不是单纯靠你自己一个人就能推动 在公司里 企业文化有老板自身决定</li><li>你积极你努力了 身边人会害怕 而且你自己一个人精力也有限会累 做对了是你应该的 做错了 就是你的问题</li><li>人生如戏 有时候不能太认真 也不能不认真 几年前看不起 那些闲鱼同行（程序员） 为什么他们不一次性把事情做好 为什么给他们活 会有这么有疑问 推三阻四<br>我今年才明白 他们是活的明白太早了 能者多劳 多劳多累 我现在也学会了 像他们一样当咸鱼 有啥好积极的</li><li>不要一根筋的以为你想解决问题 大家都是出来混口饭吃的 你这么积极 别人心里很厌恶你的 混口饭吃而已 ​</li></ol><hr><h1 id="他也干这个"><a href="#他也干这个" class="headerlink" title="他也干这个?"></a>他也干这个?</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[doge]“你认识苍山有井名为空吗？”</span><br><span class="line">[妙啊]“不认识。”</span><br><span class="line">[doge]“你认识水泽之地的萝拉吗？”</span><br><span class="line">[妙啊]“不认识。”</span><br><span class="line">[doge]“你认识半佛吗？”</span><br><span class="line">[妙啊]“什么？他也干这个了！？​</span><br></pre></td></tr></table></figure><hr><h1 id="作画"><a href="#作画" class="headerlink" title="作画"></a>作画</h1><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">*.　　°　　　　☀️·　　　　🛸　　　 　🌏　°　　🌓　•　　.°•　　　🚀 ✯✯</span></span><br><span class="line"><span class="strong">　　　★　*</span>°　　　　🛰　°·　　</span><br><span class="line"><span class="bullet">.　　　</span>•　°★　•</span><br><span class="line">▁▂▃▄▅▆▇▇▆▅▄▃▁▂▃.​</span><br></pre></td></tr></table></figure><ul><li>可以复制给朋友发过去</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="焦虑"><a href="#焦虑" class="headerlink" title="焦虑"></a>焦虑</h1><ul><li><p>下方一大坨关于人生未来的考量(看起来可能有些荒谬)</p><hr></li><li><p>其一</p><p>人均薪资是日本的 1/4，房价物价可不止 1/4，人家日本打工 5 天买一台 ps5，10 天一台 iphone，购买力也是天差地别，别比了 ​</p><p>回复 @随便 87653 :房价比的是房价收入比。日本房价收入比在正常范围。我们房价收入比破天了，世界前十我们独占七个。三四线城市房价收入比比纽约都高。<br>汽车，即使不考虑收入，直接价格就是日本便宜。电器这个半斤八两吧，差距不是很大。服装也差不多的价格。餐饮日本要贵。</p><p>总的来说，总消费差距不大（中国主要是房价拉高了），但收入差了几倍 ​</p><hr></li><li><p>其二</p><p>其实吧，说句很心凉的话，我们都是韭菜，中国的年轻人被房子困的死死的，其实也就是被国家困的死死的，您们不买房，国家哪里有那么多钱呢？哪怕是租房，都不会让你安心，因为租房你小孩上不了学，这招够狠吧，看你还买不买房，所有政策都是逼我们这些年轻人赶紧买房，把钱交给国家。我们又能怎么办呢？结婚要买房，小孩上学要有房，我预测以后领养老金肯定也要看房产了，你房产在哪你才能领什么地方标准的养老金。😂😰😢​</p><hr></li><li><p>其三</p><p>北上广深没点现实基础谁敢去啊[笑哭]，都想逆袭走上人生巅峰吗？别逗了，作为一名男性，在 22 岁到以后可能 65 岁退休的 43 年工作时间里有的是坎坷不平。​</p><hr></li><li><p>其四</p><p>本科航海，双控研究生，现在月薪 2.2w.建议年轻的朋友趁年轻一定要静下心来多读书，多出去闯一闯，年轻是你们最大的资本。以后实在没办法了再出海。​</p><hr></li><li><p>其五</p><p>捋一捋思绪</p><p>最近一直在思考换工作的问题，从跳槽到想再跳槽只用了半年的时间，倒不是因为年轻人工作变动太大不抗压这些东西，而是我开始从整个人生去考虑问题。</p><p>那天我想到了死，就是想到自己最终会死掉，从自我意识的觉醒，到认识世界，最终落叶归根，我直面了死亡这件事，然后发现我自己现在所做的一些事情是没有意义的。</p><p>我一个人，离群索居，在天津给资本家卖命。挣的钱一部分给了房租，一部分给了医院，还有一部分给了外卖和打车。</p><p>攒下来的那部分，要拿来承担巨额的房价。</p><p>激流勇进，大城市的房子虽然贵，却因为其金融属性，带有投资的价值，所以是有必要买的。</p><p>但是回归到一个最根本的问题上，几十年的人生就是给房贷打工，其实，是资本吸了我的血。</p><p>在买房这件事上，看似是资本家占据强势地位，因为居高不下的房价让人望而却步。但是仔细一想，其实，人口才是最关键的资源。</p><p>东北的房子不值钱，北上广深的房子涨得离谱，因为北上广深聚集的不仅仅是所谓的医疗教育，它掌握的是真正的财政密码，人口。</p><p>人口本就是最重要的资源，只有人活着，一切附着其上的东西才有了价值。不然人死如灯灭，所有的医疗教育房产基础设施等一系列的东西都失去了意义。</p><p>我想过一个问题，我把户口迁来天津，为的是孩子以后的高考资源。但是有一个致命问题，我在天津生不出孩子。​</p><hr></li><li><p>其六</p><p>特别喜欢刘晓艳老师一个观点：不要光听别人说做什么好，做什么有前途，你现在做什么没前途。有多少人敢做一件事啊 ​</p><hr></li><li><p>其七</p><p>他们这群人，又想吃人，又是鬼鬼祟祟，想法子遮掩，不敢直截下手，真要令我笑死。我忍不住，便放声大笑起来，十分快活。自己晓得这笑声里面，有的是义勇和正气。</p><p>——鲁迅 ​</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="无题"><a href="#无题" class="headerlink" title="无题"></a>无题</h1><p>如果尖锐的批评完全消失，温和的批评将会变得刺耳。如果温和的批评也不被允许，沉默将被认为居心叵测。如果沉默也不再允许，赞扬不够卖力将是一种罪行。如果只允许一种声音存在，那么，唯一存在的那个声音就是谎言。​</p><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="那些-40-岁的程序员都去哪了"><a href="#那些-40-岁的程序员都去哪了" class="headerlink" title="那些 40 岁的程序员都去哪了?"></a>那些 40 岁的程序员都去哪了?</h1><blockquote><p><a href="https://mp.weixin.qq.com/s?__biz=MzA3MzA5MTU4NA==&mid=2247490495&idx=1&sn=8c55ca44101eaffef419eed9142e7868&chksm=9f1504d0a8628dc6b87d3f037c0396d2a35b14c2d9e879d47cabb7e21ad6cc2c60e0bc6da8f3&mpshare=1&scene=23&srcid=0316j4PqBKk4KgzksHdHW63w&sharer_sharetime=1615901427232&sharer_shareid=ff6bb8cfd138294e80df076b8b76232d#rd">那些 40 岁的程序员都去哪了</a></p></blockquote><ul><li><p>最近感觉<del>我们</del><code>年轻人</code>挺像<code>叶子</code>的,离开树枝四处漂泊,来一阵风就会被动翻身</p><ul><li><p>有人乘风高飞,有人随风散落</p></li><li><p>并没有感觉那种结局是好是坏,只是感觉我们总需要这么一片文章使我们心境沉淀些许</p></li><li><p><code>或许那样飘起来不是那么累,落脚点也不会像看似那么远.</code></p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> recommend </category>
          
          <category> nicer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哲学 </tag>
            
            <tag> 生活 </tag>
            
            <tag> 搞笑 </tag>
            
            <tag> 高能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🌈初探Docker.</title>
      <link href="post/system/docker/"/>
      <url>post/system/docker/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-01-31 00:08:20 * @LastEditors: Weidows * @LastEditTime: 2021-03-24 11:51:22 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\system\docker.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%90%8D%E8%AF%8D%E5%BC%95%E5%85%A5">名词引入</a><ul><li><a href="#docker-dockerfile">docker-Dockerfile</a></li><li><a href="#docker-compose">docker-compose</a></li><li><a href="#docker-machine">docker-machine</a></li></ul></li><li><a href="#%E5%AE%89%E8%A3%85%E5%90%AF%E5%8A%A8">安装启动</a><ul><li><a href="#ubuntu-server">Ubuntu-Server</a></li><li><a href="#windows">Windows</a></li></ul></li><li><a href="#%E8%A7%A3%E5%86%B3%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98">解决权限问题</a></li><li><a href="#%E5%90%AF%E5%8A%A8-docker">启动 docker</a></li><li><a href="#%E5%8A%A0%E9%80%9F">加速</a><ul><li><a href="#%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F">镜像加速</a><ul><li><a href="#windows-1">Windows</a></li><li><a href="#manjaro">Manjaro</a></li></ul></li><li><a href="#%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86">设置代理</a></li></ul></li><li><a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%A7%E8%A1%8C">命令行执行</a></li><li><a href="#vscodedocker">VScode+docker</a></li><li><a href="#portainer">Portainer</a></li><li><a href="#%E5%AE%B9%E5%99%A8%E8%87%AA%E5%90%AF">容器自启</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="名词引入"><a href="#名词引入" class="headerlink" title="名词引入"></a>名词引入</h1><ul><li><p>首先<code>Docker</code>是啥就不解释了.</p></li><li><p>初探尝试安装时出现下面好几个选择,于是搜了搜~</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/31/jhuS34tCPsd8qzO.png" alt="20210131002505" /></li><li><p>找到 docker 家族有几个特殊的工具<code>docker-Dockerfile</code>,<code>docker-compose</code>,<code>docker-machine</code></p><ul><li>这几个工具不需要单另安装,docker 内部自带.</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/31/ylYzZV2vthOpcsW.png" alt="20210131004332" /></li></ul><hr><h2 id="docker-Dockerfile"><a href="#docker-Dockerfile" class="headerlink" title="docker-Dockerfile"></a>docker-Dockerfile</h2><blockquote><p><a href="https://www.runoob.com/docker/docker-dockerfile.html">Docker Dockerfile</a></p></blockquote><blockquote><p>Dockerfile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明。</p></blockquote><hr><h2 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h2><blockquote><p><a href="https://blog.csdn.net/weixin_43165750/article/details/106108234">docker 与 docker-compose 区别</a></p></blockquote><blockquote><p>docker 是一个容器，你如果要是安装服务也是要单独一个一个的安装，如果你使用了 docker-compose 的话 就可以使用一个 docker-compose.yml 脚本一键安装</p></blockquote><ul><li>说来其是管理同一个 docker 下多个服务的.</li></ul><hr><h2 id="docker-machine"><a href="#docker-machine" class="headerlink" title="docker-machine"></a>docker-machine</h2><blockquote><p><a href="https://zhuanlan.zhihu.com/p/93459073">Docker 三剑客之 docker-machine</a></p></blockquote><ul><li>这个是用来管理多个 docker 的.</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="安装启动"><a href="#安装启动" class="headerlink" title="安装启动"></a>安装启动</h1><h2 id="Ubuntu-Server"><a href="#Ubuntu-Server" class="headerlink" title="Ubuntu-Server"></a>Ubuntu-Server</h2><ul><li><p><code>Ubuntu-Server</code>装系统时就带有<code>Docker</code>安装选项,直接安装即可,但是会遇到下面<a href="#%E8%A7%A3%E5%86%B3%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98">权限问题及解决办法</a></p></li><li><details>  <summary>安装后开机检测</summary><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">weidows@ubuntu-server:~$ docker</span><br><span class="line"></span><br><span class="line">Usage: docker [OPTIONS] COMMAND</span><br><span class="line"></span><br><span class="line">A self-sufficient runtime <span class="keyword">for</span> containers</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">--config string Location of<span class="built_in"> client config </span>files (default <span class="string">&quot;/home/weidows/snap/docker/471/.docker&quot;</span>)</span><br><span class="line">-c, --context string Name of the context <span class="keyword">to</span> use <span class="keyword">to</span> connect <span class="keyword">to</span> the daemon (overrides DOCKER_HOST env var <span class="keyword">and</span><span class="built_in"> default </span>context <span class="builtin-name">set</span> with <span class="string">&quot;docker context use&quot;</span>)</span><br><span class="line">-D, --<span class="builtin-name">debug</span> <span class="builtin-name">Enable</span> <span class="builtin-name">debug</span> mode</span><br><span class="line">-H, --host list Daemon socket(s) <span class="keyword">to</span> connect <span class="keyword">to</span></span><br><span class="line">-l, --log-level string <span class="builtin-name">Set</span> the<span class="built_in"> logging </span>level (<span class="string">&quot;debug&quot;</span>|<span class="string">&quot;info&quot;</span>|<span class="string">&quot;warn&quot;</span>|<span class="string">&quot;error&quot;</span>|<span class="string">&quot;fatal&quot;</span>) (default <span class="string">&quot;info&quot;</span>)</span><br><span class="line">--tls Use TLS; implied by --tlsverify</span><br><span class="line">--tlscacert string Trust certs signed only by this CA (default <span class="string">&quot;/home/weidows/snap/docker/471/.docker/ca.pem&quot;</span>)</span><br><span class="line">--tlscert string Path <span class="keyword">to</span> TLS certificate file (default <span class="string">&quot;/home/weidows/snap/docker/471/.docker/cert.pem&quot;</span>)</span><br><span class="line">--tlskey string Path <span class="keyword">to</span> TLS key file (default <span class="string">&quot;/home/weidows/snap/docker/471/.docker/key.pem&quot;</span>)</span><br><span class="line">--tlsverify Use TLS <span class="keyword">and</span> verify the remote</span><br><span class="line">-v, --version <span class="builtin-name">Print</span> version information <span class="keyword">and</span> quit</span><br><span class="line"></span><br><span class="line">Management Commands:</span><br><span class="line">builder Manage builds</span><br><span class="line">config Manage Docker configs</span><br><span class="line">container Manage containers</span><br><span class="line">context Manage contexts</span><br><span class="line">engine Manage the docker engine</span><br><span class="line">image Manage images</span><br><span class="line">network Manage networks</span><br><span class="line">node Manage Swarm nodes</span><br><span class="line">plugin Manage plugins</span><br><span class="line">secret Manage Docker secrets</span><br><span class="line">service Manage services</span><br><span class="line">stack Manage Docker stacks</span><br><span class="line">swarm Manage Swarm</span><br><span class="line">system Manage Docker</span><br><span class="line">trust Manage trust on Docker images</span><br><span class="line">volume Manage volumes</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">attach Attach local standard input, output, <span class="keyword">and</span> <span class="builtin-name">error</span> streams <span class="keyword">to</span> a running container</span><br><span class="line">build Build an image <span class="keyword">from</span> a Dockerfile</span><br><span class="line">commit Create a new image <span class="keyword">from</span> a container<span class="string">&#x27;s changes</span></span><br><span class="line"><span class="string">cp Copy files/folders between a container and the local filesystem</span></span><br><span class="line"><span class="string">create Create a new container</span></span><br><span class="line"><span class="string">deploy Deploy a new stack or update an existing stack</span></span><br><span class="line"><span class="string">diff Inspect changes to files or directories on a container&#x27;</span>s filesystem</span><br><span class="line">events <span class="builtin-name">Get</span> real time events <span class="keyword">from</span> the server</span><br><span class="line">exec <span class="builtin-name">Run</span> a command <span class="keyword">in</span> a running container</span><br><span class="line"><span class="builtin-name">export</span> <span class="builtin-name">Export</span> a container<span class="string">&#x27;s filesystem as a tar archive</span></span><br><span class="line"><span class="string">history Show the history of an image</span></span><br><span class="line"><span class="string">images List images</span></span><br><span class="line"><span class="string">import Import the contents from a tarball to create a filesystem image</span></span><br><span class="line"><span class="string">info Display system-wide information</span></span><br><span class="line"><span class="string">inspect Return low-level information on Docker objects</span></span><br><span class="line"><span class="string">kill Kill one or more running containers</span></span><br><span class="line"><span class="string">load Load an image from a tar archive or STDIN</span></span><br><span class="line"><span class="string">login Log in to a Docker registry</span></span><br><span class="line"><span class="string">logout Log out from a Docker registry</span></span><br><span class="line"><span class="string">logs Fetch the logs of a container</span></span><br><span class="line"><span class="string">pause Pause all processes within one or more containers</span></span><br><span class="line"><span class="string">port List port mappings or a specific mapping for the container</span></span><br><span class="line"><span class="string">ps List containers</span></span><br><span class="line"><span class="string">pull Pull an image or a repository from a registry</span></span><br><span class="line"><span class="string">push Push an image or a repository to a registry</span></span><br><span class="line"><span class="string">rename Rename a container</span></span><br><span class="line"><span class="string">restart Restart one or more containers</span></span><br><span class="line"><span class="string">rm Remove one or more containers</span></span><br><span class="line"><span class="string">rmi Remove one or more images</span></span><br><span class="line"><span class="string">run Run a command in a new container</span></span><br><span class="line"><span class="string">save Save one or more images to a tar archive (streamed to STDOUT by default)</span></span><br><span class="line"><span class="string">search Search the Docker Hub for images</span></span><br><span class="line"><span class="string">start Start one or more stopped containers</span></span><br><span class="line"><span class="string">stats Display a live stream of container(s) resource usage statistics</span></span><br><span class="line"><span class="string">stop Stop one or more running containers</span></span><br><span class="line"><span class="string">tag Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE</span></span><br><span class="line"><span class="string">top Display the running processes of a container</span></span><br><span class="line"><span class="string">unpause Unpause all processes within one or more containers</span></span><br><span class="line"><span class="string">update Update configuration of one or more containers</span></span><br><span class="line"><span class="string">version Show the Docker version information</span></span><br><span class="line"><span class="string">wait Block until one or more containers stop, then print their exit codes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Run &#x27;</span>docker COMMAND --help<span class="string">&#x27; for more information on a command.</span></span><br><span class="line"><span class="string">weidows@ubuntu-server:~$</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure></details></li></ul><hr><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><ul><li><p>在 <code>Windows</code> 上安装就比较复杂了,牵扯到很多东西.</p></li><li><p>Docker 基于 Linux 系统实现,所以无法直接安装在 Windows 上,需要虚拟化支持.</p><ul><li>这就需要借助<code>wsl</code>或者<code>Virtual box</code>或者<code>hyper-v</code>了(建议用 wsl)</li></ul><blockquote><p>详见 <a href="../wsl2#%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A">🎇 尝试转投 wsl 生态.#名词解释</a></p></blockquote><ul><li>这里提一下,如果想用 hyper-v 引擎,只需要勾选<code>hyper-v</code>功能就行,wsl 的那两个不用开(当然开了对 docker 也没影响)</li></ul></li></ul><hr><ul><li><p>安装 docker 前,需要装好 wsl,下面文章到<code>最后</code>安装系统之前,都需要过一遍才能装好 wsl2</p><blockquote><p><a href="../wsl2#%E9%85%8D%E7%BD%AE">🎇 尝试转投 wsl 生态.#配置</a></p></blockquote></li><li><p>装好 wsl 后去 docker 官网下载 <code>Docker desktop for window</code>,安装.</p></li><li><p>装好 docker 之后 <code>重启</code> 才能正常使用!</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="解决权限问题"><a href="#解决权限问题" class="headerlink" title="解决权限问题"></a>解决权限问题</h1><blockquote><p><a href="https://blog.csdn.net/liangllhahaha/article/details/92077065">解决 Ubuntu18.04 启动 Docker“Got permission denied while trying to connect to the Docker daemon socket“问题</a></p></blockquote><ul><li><p>我安装的<code>Ubuntu-Server</code>没有<code>root</code>用户,会导致 docker 启动异常.</p></li><li><p>用<code>docker version</code>检查</p><ul><li>最后一行会报错这样</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Got permission denied <span class="keyword">while</span> trying to connect to the Docker daemon socket at unix:<span class="regexp">//</span><span class="regexp">/var/</span>run<span class="regexp">/docker.sock: Get http:/</span><span class="regexp">/%2Fvar%2Frun%2Fdocker.sock/</span>v1.<span class="number">26</span><span class="regexp">/images/</span>json: dial unix <span class="regexp">/var/</span>run/docker.sock: connect: permission denied</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>解决方案</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker          <span class="comment">#添加docker用户组</span></span><br><span class="line">sudo gpasswd -a $<span class="keyword">USER</span> <span class="title">docker</span>  <span class="comment">#将当前用户添加至docker用户组</span></span><br><span class="line">newgrp docker                 <span class="comment">#更新docker用户组</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="启动-docker"><a href="#启动-docker" class="headerlink" title="启动 docker"></a>启动 docker</h1><blockquote><p><a href="https://blog.huangz.me/2020/docker-on-linux.html">在 Manjaro Linux 系统使用 Docker</a></p></blockquote><ul><li><p>启动服务</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="literal">start</span> docker.service</span><br></pre></td></tr></table></figure></li><li><p>开机自动启动 docker 服务</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="builtin-name">enable</span> docker.service</span><br></pre></td></tr></table></figure></li><li><p>重新载入配置</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo systemctl daemon-reload</span></span><br></pre></td></tr></table></figure></li><li><p>重启 docker</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo systemctl restart docker</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="加速"><a href="#加速" class="headerlink" title="加速"></a>加速</h1><h2 id="镜像加速"><a href="#镜像加速" class="headerlink" title="镜像加速"></a>镜像加速</h2><ul><li><p>登录阿里云并找到<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors"><code>容器镜像服务</code></a></p></li><li><p>阿里会给一个加速地址,把地址复制到 Docker 设置里就可.</p></li></ul><h3 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h3>  <img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/05/wG1JgIPTof5yN6b.png" alt="20210205010825" /><hr><h3 id="Manjaro"><a href="#Manjaro" class="headerlink" title="Manjaro"></a>Manjaro</h3><ul><li><p>新建或者修改<code>/etc/docker/daemon.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>然后重启 docker 服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h2><blockquote><p>参考: <a href="https://docs.docker.com/config/daemon/systemd/">docker docs</a></p></blockquote><ul><li>国内网络环境拉取镜像非常慢,挂代理可以快很多.</li></ul><ol><li>新建文件夹</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p <span class="regexp">/etc/</span>systemd<span class="regexp">/system/</span>docker.service.d</span><br></pre></td></tr></table></figure><ol start="2"><li>新建文件 <code>/etc/systemd/system/docker.service.d/http-proxy.conf</code>,添加内容:</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Service]</span><br><span class="line">Environment&#x3D;&quot;HTTP_PROXY&#x3D;http:&#x2F;&#x2F;192.168.2.109:7890&quot;</span><br></pre></td></tr></table></figure><ol start="3"><li>如果需要其他协议的代理,可以再添加,如下:</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Service]</span><br><span class="line">Environment&#x3D;&quot;HTTP_PROXY&#x3D;http:&#x2F;&#x2F;192.168.2.109:7890&quot;</span><br><span class="line">Environment&#x3D;&quot;HTTPS_PROXY&#x3D;https:&#x2F;&#x2F;192.168.2.109:7890&quot;</span><br></pre></td></tr></table></figure><ol start="4"><li><a href="#%E5%90%AF%E5%8A%A8-docker">重新载入配置 &amp; 重启 docker</a></li></ol><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="命令行执行"><a href="#命令行执行" class="headerlink" title="命令行执行"></a>命令行执行</h1><ul><li><p>有些文档为了观看性写成如下格式,无法直接执行,需要弄成一行.</p><ul><li>前</li></ul><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  -<span class="ruby">p <span class="number">8088</span><span class="symbol">:</span><span class="number">8088</span> \</span></span><br><span class="line"><span class="ruby">  --name <span class="keyword">next</span>-terminal \</span></span><br><span class="line"><span class="ruby">  --restart always ghcr.io/dushixiang/<span class="keyword">next</span>-<span class="symbol">terminal:</span>latest</span></span><br></pre></td></tr></table></figure><ul><li>后</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p <span class="number">8088</span>:<span class="number">8088</span> --name <span class="keyword">next</span>-terminal --restart always ghcr.io<span class="regexp">/dushixiang/</span><span class="keyword">next</span>-terminal:latest</span><br></pre></td></tr></table></figure></li><li><p>最后重启 docker,用 <code>docker info</code> 检查一下就好了</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="VScode-docker"><a href="#VScode-docker" class="headerlink" title="VScode+docker"></a>VScode+docker</h1><ul><li><p>在 Manjaro 虚拟机中启动 docker 服务,然后用 vscode-ssh 连接 manjaro</p></li><li><p>安装 docker 插件,就可以享受比较方便的可视化了(个人非常喜欢这种方式)</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/06/AF6QcV3elqXPR2t.png" alt="20210206153528" /></li><li><p>另外再安装<code>Resource Monitor</code>这个插件可以监控远程机资源消耗(如上图最下方)</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Portainer"><a href="#Portainer" class="headerlink" title="Portainer"></a>Portainer</h1><blockquote><p><a href="https://blog.csdn.net/tian330726/article/details/102987572">Docker 安装管理面板–Portainer</a></p></blockquote><ul><li><p>docker 的可视化工具,可连接本地和远程,支持集群,有很多部署方式,这里选择直接在 docker 部署.</p></li><li><p>首先它需要一个<code>volume(数据卷)</code>,新建</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">volume</span><span class="bash"> create portainer_data</span></span><br></pre></td></tr></table></figure></li><li><p>然后拉取并运行</p><ul><li>需要保证 9000 端口没被占用,不然无法运行</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name portainer --restart always -p <span class="number">9000</span>:<span class="number">9000</span> -v <span class="regexp">/var/</span>run<span class="regexp">/docker.sock:/</span>var<span class="regexp">/run/</span>docker.sock -v portainer_data:<span class="regexp">/data portainer/</span>portainer</span><br></pre></td></tr></table></figure></li><li><p>浏览器打开 <code>localhost:9000</code></p></li><li><p>官网上的版本要比 github 的 tag 慢一些,左下角提示更新可以无视~</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="容器自启"><a href="#容器自启" class="headerlink" title="容器自启"></a>容器自启</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启</span></span><br><span class="line">docker update <span class="attribute">--restart</span>=always &lt;CONTAINER ID&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">docker update <span class="attribute">--restart</span>=<span class="literal">no</span> &lt;CONTAINER ID&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> system </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🙌UI平面设计.</title>
      <link href="post/design/UI-design/"/>
      <url>post/design/UI-design/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-01-30 18:40:45 * @LastEditors: Weidows * @LastEditTime: 2021-03-13 17:19:50 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\design\UI-design.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%A4%B4%E5%9B%BE%E8%AE%BE%E8%AE%A1">头图设计</a></li><li><a href="#%E5%91%88%E7%8E%B0%E6%96%B9%E5%BC%8F">呈现方式</a><ul><li><a href="#%E5%9B%BE%E5%AD%97">图&gt;字</a></li><li><a href="#%E9%9D%9E%E6%A0%87%E5%87%86%E4%B8%8E%E7%95%99%E7%99%BD">非标准与留白</a></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="头图设计"><a href="#头图设计" class="headerlink" title="头图设计"></a>头图设计</h1><ul><li><p>一张好看的图片能有啥效果?</p><ul><li><input checked="" disabled="" type="checkbox"> 吊起胃口</li><li><input checked="" disabled="" type="checkbox"> 引人入胜</li><li><input checked="" disabled="" type="checkbox"> 图片养眼</li><li><input checked="" disabled="" type="checkbox"> 吟唱施法</li></ul></li><li><p>于是,找到个比较<code>中肯</code>的知乎问答:</p><blockquote><p><a href="https://www.zhihu.com/question/313933884">微信公众号推送封面如何设计制作？</a></p></blockquote></li></ul><hr><ul><li><p>从博客文章头图无从下手切入的,以往就是百度谷歌搜关键词,找一个好看的图,但是耦合性太差,想找个流水线式解决方案.</p></li><li><p>起初是因为看到 <code>@小康博客</code> 的文章头图,感觉很好看,于是去找的方案.</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/27/FDGZKReixJE6aIt.png" alt="20210127191714" /></li></ul><hr><ul><li><p>我发现并没有太过快速的生成器(哈哈哈不能一口吃个胖子)</p><ul><li><p>但是找到了不少好模板网站.</p></li><li><p>推荐下,我这篇文章用的是<a href="https://www.canva.cn/"><code>可画</code></a> 网做出来的,我改了改字就可以使用了.</p></li></ul></li><li><p>上手时间成本几乎没有,现阶段可以说是最直接有效的解决方案了.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="呈现方式"><a href="#呈现方式" class="headerlink" title="呈现方式"></a>呈现方式</h1><h2 id="图-gt-字"><a href="#图-gt-字" class="headerlink" title="图&gt;字"></a>图&gt;字</h2><ul><li>有些情况下,同样的内容,同样的格式性,图片效果还是会更显著</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210226172913.png" alt="20210226172913" /><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210226173119.png" alt="20210226173119" /><hr><h2 id="非标准与留白"><a href="#非标准与留白" class="headerlink" title="非标准与留白"></a>非标准与留白</h2><ul><li><p>比如上面的两张图,有毛边效果,用的好的话可以让人眼前一亮(我截的图比较差)</p></li><li><p>还有留白(padding),下图的留白就不是很好,略小了</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210226173845.png" alt="20210226173845" /></li></ul>]]></content>
      
      
      <categories>
          
          <category> design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>✨炒鸡好用的下载器-Aria2</title>
      <link href="post/tools/Aria2/"/>
      <url>post/tools/Aria2/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-01-29 12:59:50 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:08:49 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\recommend\Aria2.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E7%AE%80%E4%BB%8B">简介</a></li><li><a href="#%E9%9C%80%E6%B1%82">需求</a></li><li><a href="#%E6%A8%AA%E5%90%91%E5%AF%B9%E6%AF%94">横向对比</a><ul><li><a href="#idm">IDM</a></li><li><a href="#motrix">Motrix</a></li><li><a href="#%E8%BF%85%E9%9B%B7">迅雷</a></li><li><a href="#ffmpeg">FFmpeg</a></li><li><a href="#aria2ariang">Aria2+AriaNg</a></li></ul></li><li><a href="#%E9%85%8D%E7%BD%AE-aria2">配置 Aria2</a></li><li><a href="#%E9%85%8D%E7%BD%AE%E6%B5%8F%E8%A7%88%E5%99%A8">配置浏览器</a></li><li><a href="#%E5%90%AF%E5%8A%A8-aria2-rpc">启动 Aria2-RPC</a></li><li><a href="#%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C">开机自启/后台运行</a></li><li><a href="#%E5%8F%82%E8%80%83">参考</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li><p><code>Aria2</code>是一个命令行下载器,没有 UI 界面</p></li><li><p>支持多线程下载,各种协议导入.</p></li><li><p>通过下面知乎问答可以了解下下载协议和目前主流下载器运行方式.</p></li></ul><blockquote><p><a href="https://www.zhihu.com/question/61896660">为什么很多人都推荐 IDM 下载 说这才是下载神器 不限速的 比迅雷下载和百度网盘下载好多了？</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><ol><li><p>个人需要一个<code>多线程</code>下载器,其实也不用强调,因为目前大多数下载器都是多线程的</p></li><li><p>可以替换掉浏览器默认下载(浏览器默认下载太反人类了)</p></li><li><p>个人比较看重的一点,我有时会需要<code>批量下载</code>B 站上的分 P 视频(防止视频下架)</p></li></ol><ul><li><p>我用的脚本只能导出如下几个下载方式</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/29/xi3DPVzARd8nWYt.png" alt="20210129155515" /></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="横向对比"><a href="#横向对比" class="headerlink" title="横向对比"></a>横向对比</h1><h2 id="IDM"><a href="#IDM" class="headerlink" title="IDM"></a>IDM</h2><ul><li>支持的协议太少了,而且不太好用,优点是它可以抓取网页中的音视频下载,但是对于我来说,下载音乐并不靠这个,下载视频(B 站和油管的),它都不支持,不过倒是支持个上面的批量下载.</li><li>总的来说是我的第二选择.</li></ul><hr><h2 id="Motrix"><a href="#Motrix" class="headerlink" title="Motrix"></a>Motrix</h2><ul><li>底层就是用的 Aria2,所以说支持的协议挺多的,确实不错但是奈何我用不着…<ul><li>现在<code>Aria2+AriaNg</code>已经足够满足我了.</li></ul></li></ul><hr><h2 id="迅雷"><a href="#迅雷" class="headerlink" title="迅雷"></a>迅雷</h2><ul><li>Emmm 跟我的需求有点不一样,排除.</li></ul><hr><h2 id="FFmpeg"><a href="#FFmpeg" class="headerlink" title="FFmpeg"></a>FFmpeg</h2><ul><li>哈哈哈,没用过,不了解</li></ul><hr><h2 id="Aria2-AriaNg"><a href="#Aria2-AriaNg" class="headerlink" title="Aria2+AriaNg"></a>Aria2+AriaNg</h2><ul><li><p>这个就是主角,也就是我正在用的.</p></li><li><p>Aria2 可以通过 Scoop 安装,而且 Scoop 可以通过调用 aria2 实现加速下载.</p></li><li><p>我需要做的就是安装浏览器插件:<code>Aria2 for Chrome</code>或者<code>Aria Manager</code>之类的,让他连通作为 Aria2 的 UI 界面</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="配置-Aria2"><a href="#配置-Aria2" class="headerlink" title="配置 Aria2"></a>配置 Aria2</h1><ul><li><p>用过 Scoop 的应该都知道 Aria2,一般安装 Scoop 时都会装上</p></li><li><p>找到<code>Aria2c.exe</code>这个文件,只需要这一个,其他的一切都不需要!</p></li><li><p>再找个合适的位置(比如跟 Aria2.exe 放在一起)新建两个文件<code>aria2.session</code>和<code>conf</code>,其实名字随意起,第一个文件空着就行,conf 是配置文件,在这里面可以自定义 Aria2 的配置,我的如下:</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">## &#x27;#&#x27;开头为注释内容, 选项都有相应的注释说明, 根据需要修改 ##</span></span><br><span class="line"><span class="meta">## 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  ##</span></span><br><span class="line"></span><br><span class="line"><span class="meta">## 文件保存相关 ##</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置</span></span><br><span class="line">dir=D:/Downloads</span><br><span class="line"><span class="meta"># 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M</span></span><br><span class="line"><span class="meta">#disk-cache=32M</span></span><br><span class="line"><span class="meta"># 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc</span></span><br><span class="line"><span class="meta"># 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc</span></span><br><span class="line"><span class="meta"># falloc和trunc则需要文件系统和内核支持</span></span><br><span class="line"><span class="meta"># NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项</span></span><br><span class="line">file-allocation=none</span><br><span class="line"><span class="meta"># 断点续传</span></span><br><span class="line">continue=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="meta">## 下载连接相关 ##</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 最大同时下载任务数, 运行时可修改, 默认:5</span></span><br><span class="line">max-concurrent-downloads=<span class="number">5</span></span><br><span class="line"><span class="meta"># 同一服务器连接数, 添加时可指定, 默认:1</span></span><br><span class="line">max-connection-per-server=<span class="number">16</span></span><br><span class="line"><span class="meta"># 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M</span></span><br><span class="line"><span class="meta"># 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载</span></span><br><span class="line">min-split-size=<span class="number">1</span>M</span><br><span class="line"><span class="meta"># 单个任务最大线程数, 添加时可指定, 默认:5</span></span><br><span class="line">split=<span class="number">32</span></span><br><span class="line"><span class="meta"># 整体下载速度限制, 运行时可修改, 默认:0</span></span><br><span class="line"><span class="meta">#max-overall-download-limit=0</span></span><br><span class="line"><span class="meta"># 单个任务下载速度限制, 默认:0</span></span><br><span class="line"><span class="meta">#max-download-limit=0</span></span><br><span class="line"><span class="meta"># 整体上传速度限制, 运行时可修改, 默认:0</span></span><br><span class="line"><span class="meta">#max-overall-upload-limit=0</span></span><br><span class="line"><span class="meta"># 单个任务上传速度限制, 默认:0</span></span><br><span class="line"><span class="meta">#max-upload-limit=0</span></span><br><span class="line"><span class="meta"># 禁用IPv6, 默认:false</span></span><br><span class="line">disable-ipv6=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="meta">## 进度保存相关 ##</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 从会话文件中读取下载任务</span></span><br><span class="line">input-file=D:\Game\Scoop\persist\aria2\aria2.session</span><br><span class="line"><span class="meta"># 在Aria2退出时保存`错误/未完成`的下载任务到会话文件</span></span><br><span class="line">save-session=D:\Game\Scoop\persist\aria2\aria2.session</span><br><span class="line"><span class="meta"># 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0</span></span><br><span class="line">save-session-interval=<span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="meta">## RPC相关设置 ##</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 启用RPC, 默认:false</span></span><br><span class="line">enable-rpc=<span class="literal">true</span></span><br><span class="line"><span class="meta"># 允许所有来源, 默认:false</span></span><br><span class="line">rpc-allow-origin-all=<span class="literal">true</span></span><br><span class="line"><span class="meta"># 允许非外部访问, 默认:false</span></span><br><span class="line">rpc-listen-all=<span class="literal">true</span></span><br><span class="line"><span class="meta"># 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同</span></span><br><span class="line"><span class="meta">#event-poll=select</span></span><br><span class="line"><span class="meta"># RPC监听端口, 端口被占用时可以修改, 默认:6800</span></span><br><span class="line"><span class="meta">#rpc-listen-port=6800</span></span><br><span class="line"><span class="meta"># 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项</span></span><br><span class="line"><span class="meta">#rpc-secret=12345678</span></span><br><span class="line"><span class="meta"># 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span></span><br><span class="line"><span class="meta">#rpc-user=&lt;USER&gt;</span></span><br><span class="line"><span class="meta"># 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span></span><br><span class="line"><span class="meta">#rpc-passwd=&lt;PASSWD&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">## BT/PT下载相关 ##</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</span></span><br><span class="line"><span class="meta">#follow-torrent=true</span></span><br><span class="line"><span class="meta"># BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999</span></span><br><span class="line">listen-port=<span class="number">51413</span></span><br><span class="line"><span class="meta"># 单个种子最大连接数, 默认:55</span></span><br><span class="line"><span class="meta">#bt-max-peers=55</span></span><br><span class="line"><span class="meta"># 打开DHT功能, PT需要禁用, 默认:true</span></span><br><span class="line">enable-dht=<span class="literal">false</span></span><br><span class="line"><span class="meta"># 打开IPv6 DHT功能, PT需要禁用</span></span><br><span class="line"><span class="meta">#enable-dht6=false</span></span><br><span class="line"><span class="meta"># DHT网络监听端口, 默认:6881-6999</span></span><br><span class="line"><span class="meta">#dht-listen-port=6881-6999</span></span><br><span class="line"><span class="meta"># 本地节点查找, PT需要禁用, 默认:false</span></span><br><span class="line"><span class="meta">#bt-enable-lpd=false</span></span><br><span class="line"><span class="meta"># 种子交换, PT需要禁用, 默认:true</span></span><br><span class="line">enable-peer-exchange=<span class="literal">false</span></span><br><span class="line"><span class="meta"># 每个种子限速, 对少种的PT很有用, 默认:50K</span></span><br><span class="line"><span class="meta">#bt-request-peer-speed-limit=50K</span></span><br><span class="line"><span class="meta"># 客户端伪装, PT需要</span></span><br><span class="line">peer-id-prefix=-TR2770-</span><br><span class="line">user-agent=Transmission/<span class="number">2.77</span></span><br><span class="line"><span class="meta"># 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0</span></span><br><span class="line">seed-ratio=<span class="number">0</span></span><br><span class="line"><span class="meta"># 强制保存会话, 即使任务已经完成, 默认:false</span></span><br><span class="line"><span class="meta"># 较新的版本开启后会在任务完成后依然保留.aria2文件</span></span><br><span class="line"><span class="meta">#force-save=false</span></span><br><span class="line"><span class="meta"># BT校验相关, 默认:true</span></span><br><span class="line"><span class="meta">#bt-hash-check-seed=true</span></span><br><span class="line"><span class="meta"># 继续之前的BT任务时, 无需再次校验, 默认:false</span></span><br><span class="line">bt-seed-unverified=<span class="literal">true</span></span><br><span class="line"><span class="meta"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</span></span><br><span class="line">bt-save-metadata=<span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>注意 40 行后面的<code>路径</code>和<code>文件名</code>的对应关系.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="配置浏览器"><a href="#配置浏览器" class="headerlink" title="配置浏览器"></a>配置浏览器</h1><ul><li><p>上面提到了,需要安装<code>Aria2 for Chrome</code>或者<code>Aria Manager</code>之类的插件</p></li><li><p>安装完之后出现插件设置界面</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/29/8mAJSw7gyiUNXKP.png" alt="20210129162937" /></li><li><p>或者在<code>AriaNg</code>管理页面,这两个页面一样</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/29/BJfCuaNyeSTEWvg.png" alt="20210129164251" /></li><li><p>必须填写的是画圈的部分,也就是上面<code>conf</code>文件第 62 行填的,我写的是<code>12345678</code></p></li><li><p>其他的配置随意,这样,浏览器就配置好了.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="启动-Aria2-RPC"><a href="#启动-Aria2-RPC" class="headerlink" title="启动 Aria2-RPC"></a>启动 Aria2-RPC</h1><ul><li><p>实现原理是让<code>Aria2.exe</code>程序读取<code>conf</code>文件跑起来<code>RPC服务</code>,然后浏览器插件连接这个 RPC 实现界面化管理.</p></li><li><p>运行程序</p><ul><li>没配置环境变量的话需要指定<code>aria2.exe</code>路径,用 Scoop 安装的不用配置.</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aria2c --conf-path=&quot;D:\Game\Scoop\persist\aria2\conf&quot;</span><br></pre></td></tr></table></figure></li><li><p>在命令行中服务跑起来了,显示如下</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">❯ aria2c --conf-path=<span class="string">&quot;D:\Game\Scoop\persist\aria2\conf&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="number">01</span>/<span class="number">29</span> <span class="number">16</span>:<span class="number">38</span>:<span class="number">59</span> [WARN] Neither --rpc-secret nor a combination of --rpc-user <span class="keyword">and</span> --rpc-passwd <span class="keyword">is</span> <span class="keyword">set</span>. This <span class="keyword">is</span> insecure. It <span class="keyword">is</span> extremely recommended to specify --rpc-secret with the adequate secrecy <span class="keyword">or</span> now deprecated --rpc-user <span class="keyword">and</span> --rpc-passwd.</span><br><span class="line"></span><br><span class="line"><span class="number">01</span>/<span class="number">29</span> <span class="number">16</span>:<span class="number">38</span>:<span class="number">59</span> [NOTICE] IPv4 RPC: listening on TCP port <span class="number">6800</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/29/pJtLQdBWcvgeb9T.png" alt="20210129164430" /></li><li><p>但是有个问题,一旦这个终端关闭,aria.exe 也会跟着被关闭,这个服务就会断了(连接失败)</p><ul><li><p>通俗来说任务管理器中必须有个<code>aria.exe</code>在运行着.</p></li><li><p>解决办法如下.</p></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="开机自启-后台运行"><a href="#开机自启-后台运行" class="headerlink" title="开机自启/后台运行"></a>开机自启/后台运行</h1><ul><li><p>Aria2 本身特别小,后台一直开着没影响,我们让他开机自启,在后台一直挂着.</p></li><li><p>新建一个<code>start.vbs</code>,内容如下</p><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CreateObject</span>(<span class="string">&quot;WScript.Shell&quot;</span>).Run <span class="string">&quot;aria2c --conf-path=D:\Game\Scoop\persist\aria2\conf&quot;</span>,<span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><p>把这个 vbs 文件想个法挂到开机启动程序中,相信你能办到!</p></li><li><p><code>搞腚!</code></p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li>本篇文章介绍不是很平滑,建议结合参照文章一同食用.</li></ul><blockquote><p><a href="https://p3terx.com/archives/aria2-started-guide.html">Aria2 新手入门教程</a></p></blockquote><blockquote><p><a href="https://www.jianshu.com/p/7c030484ac90">下载工具系列——Aria2 (几乎全能的下载神器)</a></p></blockquote><blockquote><p><a href="https://blog.csdn.net/jeefchen/article/details/5644450?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control">几种隐藏批处理运行窗口的方法</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Aria2 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🥱所爱之言,所感之箴</title>
      <link href="post/life/%E6%84%9F%E8%A8%80/1/"/>
      <url>post/life/%E6%84%9F%E8%A8%80/1/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-01-27 00:54:04 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 16:44:16 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\life\感言\1.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%BF%83%E8%A6%81%E9%87%8E">心要野</a></li></ul><h1 id="心要野"><a href="#心要野" class="headerlink" title="心要野"></a>心要野</h1><blockquote><p>原文链接: <a href="https://www.ihewro.com/archives/1117/">心要野</a></p></blockquote><ul><li><p><code>@友人c</code>写的博客文章,大半夜看得我也是心有感触.</p></li><li><p>Emmmm 静下心来写写作确实需要些<code>灵感</code> + <code>心境</code>,咱想表达啥却写不出来…</p><hr></li></ul><p>从自身谈起吧…</p><hr><p>高中时,一直..也不能说一直吧,反正<code>60%目标</code>聚焦在高考之上,至于快乐之源嘛,现在想想是<code>真的真的怀念!!!</code></p><p>罗列下吧,不为的给别人看,只是想多年后的自己仍能被这份爱打动.</p><p>那时候特喜欢看天文书,关于太阳系,银河系,黑洞啥的,还研究了一些物理知识(当然只是浅尝辄止)</p><p>最喜欢的是<code>罗杰·彭罗斯</code>的书,虽然那书比我岁数都大 2333,他是谁呢?</p><blockquote><p>彭罗斯教授是已故英国物理学家霍金的导师。</p></blockquote><p>刚刚才知道的,原来他和他的学生都这么厉害~</p><p>那时候大课间跑操,跑完操再抽出来寥寥几分钟跑去图书馆(害,这军事化管理…何必呢),还经常遇到不开门的情况(毕竟三个年级统一管理,谁都没时间去啊),一进门偌大的图书馆,人头数手指头都数得过来..</p><p>兴匆匆的拿本<code>天文或者IT</code>的书,不过那时候 IT 的书太老了,我也知道,就没咋看,后来在网上找的 VBS 入的门</p><p>没用多长,图书馆关于天文学的书差不多摸遍了,自己还整了个<code>奇葩笔记</code>,封皮自己印的<code>DUELYST</code>的海报,贼漂亮的笔记本,记了很多学习之外的东东,记得还在语文课给班上讲过一次天文 hhh,王老师面色铁青,差点把我轰下来.</p><hr><p>高中时宿舍关系是真的好,现在来看来说,人与人之间友谊的绊脚石,也许不是手机,也许是.</p><p>嘿嘿,卖了个关子.其实我感觉,<code>朋友</code>对我的定义是:</p><p><code>彼此乐意在对方身上浪费时间,还乐此不疲的人</code></p><p>就我们 335 宿舍,人人都有个性,但是晚上回到宿舍,谁都在干谁的事,啥事呢? 活在 335 氛围中.</p><p>或许这话让<code>她们</code>觉得俺是大傻 X,但是,我会绞尽脑汁の对损他们的话添油加醋.🤔</p><hr><p>手机让我们没有时间可浪费 - 这是好事还是坏事呢?</p><p>对我来说没答案,本来也不是个命题.</p><p>我只是希望多个能放下手机聊得来的人,说来,这里手机其实指的是一种偏见和隔阂.</p><p>我和我爸从小就合不来,我到不是因为啥小心眼记恨他,只是跟他真的没法说话,聊出不了第三句话我就跟吃了屎一样 ex,反而,我跟我爸的弟弟,我伯伯(读作 bai bai),脾气特合得来</p><hr><p>写到这里,大师,我悟了!</p><p>原来我追求的是<code>氛围</code>.</p><p>朋友或对象之间都是在塑造氛围,昨儿我去大姨家吃饭,还没去就一肚子气不想去,寻思给个面子去呗,匆忙间只带了耳机,手机却快没电了…(危)</p><p>到那里,哎呦我去~! 迎面而来的一大股<code>不融洽感</code>淦我脸上,戴上耳机装睡,还轮番到我面前说这说那,隔壁屋喝酒的那几位老古董也是各种议论这臧否那,不堪入耳…</p><p>可能是我任性,我只想在<code>所谓的亲戚</code>面前<code>隐形</code></p><p>我跟我姐最亲了,世界第一喜欢!我爸妈待我不说是虐待吧,反正是让人贼烦,怎么说呢,他俩作为父母不合格,特自我.</p><p>我从小任何事都没想依靠他俩,包括衣食住行都像是借他们的钱,要是有工资,他俩安排我干的活应该能支付起我自己的抚养费 🤣</p><p>最烦扯啥淡的养育之恩,我从小让我姐带大,吃我奶奶的饭,这两位才都是我最亲的人</p><p>害,过激了,过去吧.往事随风而去?哈哈哈那太理想化了,只不过这黑锅底被岁月掏了罢了.</p><hr><p>大学里面,社交确实萎缩了,诶,还是说猥琐了?!</p><p>人人都在忙自己的,想在 335 时,放个屁还能听个响呢,可事到如今,我连屁都不想放了呢,嘤嘤嘤.</p><hr><p>好像有些消极了,转折!</p><p>最近才发现,<code>我</code></p><p>没错,最近我才认识了自我,用了二十来年.</p><p><code>我</code>追求的不是父母期望的高大上の样子,也不是高中时我眼中<code>高材生</code>の样子,也不是同学同事眼中<code>大佬</code>の样子(虽然确实不是吧…)</p><p><code>我</code>也不追名逐利,我才发现我追求的是<code>幸福感/满足感.</code></p><p>这是很难察觉的,以往的教育中只交给我们怎么竞争,怎么打倒强大的敌人,可,你达到那个高度后会发现<code>你存在的本身</code>就是<code>你想打败的敌人</code>.</p><p><code>我不想成为那种人!</code></p><hr><p>开始追求自我.</p><p>回到家后我每天晚上坚持锻炼一小时,到现在快一个月了,一天没断.</p><p>退缩过,而且也没抱着认真的态度.</p><p>如今,我发现健身真的能改变一个人,无论是从外在或者内在.</p><p>这是跟自己灵魂的较量,你会发现很有愉悦感,这是其他任何游戏无法获取的,而且锻炼时会有很多想法,毕竟大脑会自己瞎想,会整理和悟出很多东西</p><blockquote><p>在这里插个小曲吧,如果你现在有任何迟疑,不自信,焦虑,压力等等,不用考虑任何因素,去趟体育馆或者健身馆! 嫌麻烦也可以直接在家里,拿个被子,冲着它拳击!</p></blockquote><p>这是个不亲自体验就不知道有多大作用的行为.</p><p>如果上述症状没减轻,那就坚持下去,直到你感觉你一拳能打碎大石头为止!</p><p>对我而言,我感觉拳击能很大程度上增强自信,这并不是盲目,这种自信对宽慰消极心理很有效果,而且这个运动并不很消耗精力.</p><hr><p>之前的我一直在盲目<code>追求技术</code>,现在我发现与我自己背道而驰了,就算成为世界第一技术员,也换不来<code>爷开颜</code>.</p><p><code>做好现在就好,做好自己就好~</code></p><p>沉浸在过去或者渴望美好未来都是极其<code>傻傻の行为</code>.</p><p>因为,你,我,现在都在活着.</p><hr><ul><li><p>没想用这篇文章输出什么知识,只是,希望这个文章成为你我之间 - 小小的蝴蝶结.</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/27/2ThYuqlEtFfdJeK.png" alt="20210127030515" /></li></ul>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哲学 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>😎上手Emmet.</title>
      <link href="post/tools/vscode/Emmet/"/>
      <url>post/tools/vscode/Emmet/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-01-27 00:10:59 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:09:14 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\tools\vscode\Emmet.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E7%AE%80%E4%BB%8B">简介</a></li><li><a href="#%E7%AE%80%E5%8D%95%E4%B8%8A%E6%89%8B">简单上手</a></li><li><a href="#%E8%AF%A6%E7%BB%86">详细</a></li></ul><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>Emmet 的前身就是 Zen Coding。 它是一组专门用来提高编写 HTML 和 CSS 代码速度的便利工具。将它整合进文本编辑器，可以提供一些功能和快捷方式，加快开发速度。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="简单上手"><a href="#简单上手" class="headerlink" title="简单上手"></a>简单上手</h1><ul><li>如图<img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/27/YOUTJGPcLpd7Bhn.png" alt="20210127001432" /></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="详细"><a href="#详细" class="headerlink" title="详细"></a>详细</h1><blockquote><p><a href="https://blog.csdn.net/qq_33744228/article/details/80910377">【Emmet】HTML 速写之 Emmet 语法规则</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VScode </tag>
            
            <tag> 工具 </tag>
            
            <tag> Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>👌JavaScript学习笔记-(肆)</title>
      <link href="post/Web/JavaScript/study-4/"/>
      <url>post/Web/JavaScript/study-4/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-01-26 21:19:27 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:23:10 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Web\JavaScript\study-4.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%BC%80%E5%A4%B4">开头</a></li><li><a href="#jquery">JQuery</a><ul><li><a href="#%E4%BD%BF%E7%94%A8">使用</a></li><li><a href="#%E9%80%89%E6%8B%A9%E5%99%A8">选择器</a></li><li><a href="#%E4%BA%8B%E4%BB%B6">事件</a></li><li><a href="#%E6%93%8D%E4%BD%9C-dom">操作 DOM</a></li><li><a href="#ajax">Ajax</a></li></ul></li><li><a href="#%E5%B7%A9%E5%9B%BA">巩固</a></li></ul><h1 id="开头"><a href="#开头" class="headerlink" title="开头"></a>开头</h1><ul><li>写在一开始.</li><li>批判思维开场 - <code>JQuery</code> 过时了吗?</li><li>于是找了篇文章看看…</li></ul><blockquote><p><a href="https://blog.csdn.net/wojiushiwo945you/article/details/90719714">2019 年了 ，jQuery 过时了吗？</a></p></blockquote><ul><li>多看文章就是好,hh,这次又收获了个<code>美美哒分割线</code>,如下</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="JQuery"><a href="#JQuery" class="headerlink" title="JQuery"></a>JQuery</h1><blockquote><p><a href="https://jquery.cuishifeng.cn/">JQuery API 中文文档</a></p></blockquote><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li>JQuery 是个 JavaScript 函数库,使用方法:<ul><li><code>$(selector).action()</code></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../lib/jquery-3.5.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">id</span>=<span class="string">&quot;test-jquery&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//选择器就是css选择器</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&quot;#test-jquery&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        alert(<span class="string">&quot;hello,jQuery!&quot;</span>);</span></span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//原生js，选择器少，麻烦不好记</span></span><br><span class="line"><span class="comment">//标签</span></span><br><span class="line"><span class="built_in">document</span>.getElementByTagName();</span><br><span class="line"><span class="comment">//id</span></span><br><span class="line"><span class="built_in">document</span>.getElementById();</span><br><span class="line"><span class="comment">//class</span></span><br><span class="line"><span class="built_in">document</span>.getElementByClassName();</span><br><span class="line"></span><br><span class="line"><span class="comment">//jQuery css中的选择器它全部都能用！</span></span><br><span class="line"><span class="comment">//标签选择器</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).click();</span><br><span class="line"><span class="comment">//id选择器</span></span><br><span class="line">$(<span class="string">&quot;#id1&quot;</span>).click();</span><br><span class="line"><span class="comment">//class选择器</span></span><br><span class="line">$(<span class="string">&quot;.class1&quot;</span>).click;</span><br></pre></td></tr></table></figure><hr><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><ul><li><p>鼠标事件</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/26/DalS38jyRX9wT6V.png" alt="20210126224938" /></li><li><p>案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../lib/jquery-3.5.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-id">#divMove</span> &#123;</span></span><br><span class="line">        width: 500px;</span><br><span class="line">        height: 500px;</span><br><span class="line">        border: 1px solid red;</span><br><span class="line">        font-size: 30px;</span><br><span class="line">        text-align: center;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--要求：获取鼠标当前的一个坐标--&gt;</span></span><br><span class="line">    Mouse <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;mouseMove&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;divMove&quot;</span>&gt;</span>在这里移动鼠标试试<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">      /**</span><br><span class="line">       * ! 当网页元素加载完毕之后，响应事件</span><br><span class="line"><span class="javascript">       * 原型: $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;);</span></span><br><span class="line"><span class="javascript">       * 简化后的: $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;&#125;);</span></span><br><span class="line">       */</span><br><span class="line"><span class="javascript">      $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;#divMove&quot;</span>).mousemove(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          $(<span class="string">&quot;#mouseMove&quot;</span>).text(<span class="string">&quot;X: &quot;</span> + e.pageX + <span class="string">&quot;Y: &quot;</span> + e.pageY);</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>展示</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/27/ZeyS3BvOJYs7ouR.png" alt="20210127000346" /></li></ul><hr><h2 id="操作-DOM"><a href="#操作-DOM" class="headerlink" title="操作 DOM"></a>操作 DOM</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../lib/jquery-3.5.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;test-ul&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;js&quot;</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">name</span>=<span class="string">&quot;python&quot;</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 操作DOM文本</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&quot;#test-ul li[class=js]&quot;</span>).text(); <span class="comment">//获得值</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&quot;#test-ul li[class=js]&quot;</span>).text(<span class="string">&quot;设置值&quot;</span>); <span class="comment">//设置值</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&quot;#test-ul&quot;</span>).html(); <span class="comment">//获得值</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&quot;#test-ul li[name=python&quot;</span>).html(<span class="string">&quot;&lt;strong&gt;123&lt;/strong&gt;&quot;</span>); <span class="comment">//设置值</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">// 操作css</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&quot;#test-ul li&quot;</span>).css(&#123; <span class="attr">color</span>: <span class="string">&quot;red&quot;</span> &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">// 控制元素显示,本质display:none</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&quot;#test-ul li[name=python]&quot;</span>).hide();</span></span><br><span class="line"><span class="javascript">      $(<span class="string">&quot;#test-ul li[name=python]&quot;</span>).show();</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h2><p>后面有后端对接时再讲.</p><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="巩固"><a href="#巩固" class="headerlink" title="巩固"></a>巩固</h1><ol><li><p>找一些美化比较好的网站,扒下来 HTML</p></li><li><p><code>源码之家</code> 找一些小游戏,瞅瞅源码.</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 笔记 </tag>
            
            <tag> JQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>💔JavaScript学习笔记-(叁)</title>
      <link href="post/Web/JavaScript/study-3/"/>
      <url>post/Web/JavaScript/study-3/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-01-20 01:47:21 * @LastEditors: Weidows * @LastEditTime: 2021-03-01 22:55:35 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Web\JavaScript\study-3.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%AF%B9%E8%B1%A1">对象</a><ul><li><a href="#date">Date</a></li><li><a href="#json">Json</a></li><li><a href="#ajax">AJAX</a></li></ul></li><li><a href="#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1">面向对象</a><ul><li><a href="#%E5%8E%9F%E5%9E%8B">原型</a></li><li><a href="#%E7%B1%BB%E5%92%8C%E7%BB%A7%E6%89%BF">类和继承</a></li></ul></li><li><a href="#bom-%E5%AF%B9%E8%B1%A1">BOM 对象</a><ul><li><a href="#window">window</a></li><li><a href="#navigator"><del>Navigator</del></a></li><li><a href="#screen">screen</a></li><li><a href="#location"><code>location</code></a></li><li><a href="#document">document</a></li></ul></li><li><a href="#dom-%E5%AF%B9%E8%B1%A1">DOM 对象‼</a><ul><li><a href="#%E8%8E%B7%E5%BE%97%E8%8A%82%E7%82%B9">获得节点</a></li><li><a href="#%E6%9B%B4%E6%96%B0%E8%8A%82%E7%82%B9">更新节点</a></li><li><a href="#%E5%88%A0%E9%99%A4%E8%8A%82%E7%82%B9">删除节点</a></li><li><a href="#%E6%8F%92%E5%85%A5%E8%8A%82%E7%82%B9">插入节点</a></li><li><a href="#%E6%8E%92%E5%88%97%E8%8A%82%E7%82%B9">排列节点</a></li></ul></li><li><a href="#%E6%93%8D%E4%BD%9C%E8%A1%A8%E5%8D%95">操作表单</a><ul><li><a href="#%E8%8E%B7%E5%BE%97%E8%A1%A8%E5%8D%95%E4%BF%A1%E6%81%AF">获得表单信息</a></li><li><a href="#%E6%8F%90%E4%BA%A4%E8%A1%A8%E5%8D%95">提交表单</a></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h1><ul><li>几种标准对象</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="number">123</span>); <span class="comment">// number</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="string">&quot;123&quot;</span>); <span class="comment">// string</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="literal">true</span>); <span class="comment">// boolean</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="literal">NaN</span>); <span class="comment">// number</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> []); <span class="comment">// object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> &#123;&#125;); <span class="comment">// object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">Math</span>.max); <span class="comment">// function</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="literal">undefined</span>); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><hr><h2 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> time = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出</span></span><br><span class="line"><span class="built_in">console</span>.log(time); <span class="comment">//  Wed Jan 20 2021 21:21:32 GMT+0800 (中国标准时间)</span></span><br><span class="line"><span class="built_in">console</span>.log(time.getFullYear()); <span class="comment">// 2021</span></span><br><span class="line"><span class="built_in">console</span>.log(time.getMonth()); <span class="comment">// 0  (注意这个月份是0~11,不是1~12)</span></span><br><span class="line"><span class="built_in">console</span>.log(time.getDate()); <span class="comment">// 20</span></span><br><span class="line"><span class="built_in">console</span>.log(time.getHours()); <span class="comment">// 21</span></span><br><span class="line"><span class="built_in">console</span>.log(time.getMinutes()); <span class="comment">// 19</span></span><br><span class="line"><span class="built_in">console</span>.log(time.getSeconds()); <span class="comment">// 4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1611148746727</span></span><br><span class="line"><span class="comment"> * 返回的是自1970年开始计时,到现在为止的毫秒数</span></span><br><span class="line"><span class="comment"> * 这就产生了2038问题,因为到那时候这个计数单位就溢出了,成为无效的负数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(time.getTime());</span><br><span class="line"></span><br><span class="line"><span class="comment">//记录时间,通过时间戳转换.</span></span><br><span class="line"><span class="keyword">var</span> log_time = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">1611148746727</span>);</span><br><span class="line"><span class="built_in">console</span>.log(log_time); <span class="comment">//  Wed Jan 20 2021 21:19:06 GMT+0800 (中国标准时间)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 转换格式</span></span><br><span class="line"><span class="built_in">console</span>.log(log_time.toLocaleString()); <span class="comment">//  2021/1/20下午9:19:06</span></span><br><span class="line"><span class="built_in">console</span>.log(log_time.toUTCString()); <span class="comment">//  Wed, 20 Jan 2021 13:19:06 GMT</span></span><br></pre></td></tr></table></figure><hr><h2 id="Json"><a href="#Json" class="headerlink" title="Json"></a>Json</h2><ul><li><p>目前网络数据传输最主要格式.</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/20/cOoznNlKMv7yLd6.png" alt="20210120222429" /></li><li><p>Json 的使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Weidows = &#123;</span><br><span class="line">  name: <span class="string">&quot;Weidows&quot;</span>,</span><br><span class="line">  age: <span class="number">21</span>,</span><br><span class="line">  gender: <span class="string">&quot;男&quot;</span>,</span><br><span class="line">  work: <span class="string">&quot;student&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 转换为Json格式</span></span><br><span class="line"><span class="comment"> *  &#123;&quot;name&quot;:&quot;Weidows&quot;,&quot;age&quot;:21,&quot;gender&quot;:&quot;男&quot;,&quot;work&quot;:&quot;student&quot;&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> JsonWeidows = <span class="built_in">JSON</span>.stringify(Weidows);</span><br><span class="line"><span class="built_in">console</span>.log(JsonWeidows);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解析Json</span></span><br><span class="line"><span class="comment"> *  &#123; name: &#x27;Weidows&#x27;, age: 21, gender: &#x27;男&#x27;, work: &#x27;student&#x27; &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> Weidows_2 = <span class="built_in">JSON</span>.parse(JsonWeidows);</span><br><span class="line"><span class="built_in">console</span>.log(Weidows_2);</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h2><ul><li><p>三种请求方法:</p><ul><li><p>原生的 js 写法 xhr 异步请求</p></li><li><p>jQuery 封装好的方法$(#name).ajax(“”)</p></li><li><p>axios 请求</p></li></ul></li><li><p>挂起,后期学.</p></li></ul><hr><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><ul><li>与 Java 中<code>类-对象</code>有些不同.</li></ul><h2 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h2><ul><li><p>通过原型创建对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> people = &#123;</span><br><span class="line">    name: <span class="string">&quot;people&quot;</span>,</span><br><span class="line">    run: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">this</span>.name + <span class="string">&quot;Running...&quot;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  bird = &#123;</span><br><span class="line">    name: <span class="string">&quot;bird&quot;</span>,</span><br><span class="line">    fly: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">this</span>.name + <span class="string">&quot;Flying...&quot;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  xiaoming = &#123;</span><br><span class="line">    name: <span class="string">&quot;小明&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">xiaoming.__proto__ = people;</span><br><span class="line">xiaoming.run(); <span class="comment">//  小明Running...</span></span><br><span class="line">xiaoming.__proto__ = bird;</span><br><span class="line">xiaoming.fly(); <span class="comment">//  小明Flying...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 给原型新增方法</span></span><br><span class="line">xiaoming.prototype.hello = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;Hello.&quot;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>太恶心了,所以 ES6 引入 <code>class</code>,参下.</p></li></ul><hr><h2 id="类和继承"><a href="#类和继承" class="headerlink" title="类和继承"></a>类和继承</h2><ul><li>跟 Java 几乎一模一样了!</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(name) &#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  hello() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;hello.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XiaoStudent</span> <span class="keyword">extends</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(name, grade) &#123;</span><br><span class="line">    <span class="built_in">super</span>(name);</span><br><span class="line">    <span class="built_in">this</span>.grade = grade;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  getGrade() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.grade);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> xiaoming = <span class="keyword">new</span> Student(<span class="string">&quot;xiaoming&quot;</span>),</span><br><span class="line">  xiaohong = <span class="keyword">new</span> XiaoStudent(<span class="string">&quot;xiaohong&quot;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(xiaoming); <span class="comment">//  Student &#123; name: &#x27;xiaoming&#x27; &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(xiaohong); <span class="comment">//  XiaoStudent &#123; name: &#x27;xiaohong&#x27;, grade: 1 &#125;</span></span><br></pre></td></tr></table></figure><ul><li><p>原理上还是利用原型</p><ul><li>原型链结构</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/20/KwIm1Ac7azCg9jO.png" alt="20210120233527" /></li></ul><hr><h1 id="BOM-对象"><a href="#BOM-对象" class="headerlink" title="BOM 对象"></a>BOM 对象</h1><ul><li><code>browser object model</code></li></ul><h2 id="window"><a href="#window" class="headerlink" title="window"></a>window</h2><ul><li><p>这个对象代表浏览器窗口</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/20/7ZRyrIQuXA4vxzL.png" alt="20210120234923" /></li></ul><hr><h2 id="Navigator"><a href="#Navigator" class="headerlink" title="Navigator"></a><del>Navigator</del></h2><ul><li><p>Navigator 封装了浏览器的信息</p></li><li><p>可用来判断平台和浏览器信息,但是不建议使用,这个信息<u>可被修改/伪造.</u></p></li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/20/zQsycWFrXZjeMxH.png" alt="20210120235844" /><hr><h2 id="screen"><a href="#screen" class="headerlink" title="screen"></a>screen</h2><ul><li>屏幕信息</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">screen.width; <span class="comment">// 1920</span></span><br><span class="line">screen.height; <span class="comment">// 1080</span></span><br></pre></td></tr></table></figure><hr><h2 id="location"><a href="#location" class="headerlink" title="location"></a><code>location</code></h2><ul><li>location 代表当前页面的 URL 信息</li><li>重要,常用!</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/21/15STonbQRlxi9O8.png" alt="20210121000604" /><hr><h2 id="document"><a href="#document" class="headerlink" title="document"></a>document</h2><ul><li><p>document 代表当前的页面，HTML DOM 文档树</p></li><li><p>获取/更改标题</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.title; <span class="comment">// &quot;【狂神说Java】JavaScript学习笔记_pan_h1995的博客-CSDN博客&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.title = <span class="string">&quot;Weidows&quot;</span>; <span class="comment">// &quot;Weidows&quot;</span></span><br></pre></td></tr></table></figure><hr></li><li><p>获取具体的文档树节点</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="built_in">document</span>.getElementById(<span class="string">&quot;app&quot;</span>);</span><br></pre></td></tr></table></figure><hr></li><li><p>获取 cookie</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/21/uN3HXrPyiwJT9Cn.png" alt="20210121101945" /><ul><li>劫持 cookie<ul><li>通过获取 cookie 就可以在另一台机器上在不输密码的情况下登录</li><li>比如<code>Bilibili-helper</code>,获取一些 cookie 就可以伪造登录(确认安全情况下妥善利用)</li></ul></li></ul><hr></li><li><p>history</p><ul><li>前进 history.forward()</li><li>后退 history.back()</li></ul></li></ul><hr><h1 id="DOM-对象‼"><a href="#DOM-对象‼" class="headerlink" title="DOM 对象‼"></a>DOM 对象‼</h1><ul><li><p><code>document object model</code> 浏览器网页就是一个 Dom 树形结构！</p></li><li><p>常用操作</p><ul><li>遍历 Dom 节点：得到 Dom 节点</li><li>更新：更新 Dom 节点</li><li>删除：删除一个 Dom 节点</li><li>添加：添加一个新的节点</li></ul><hr></li></ul><h2 id="获得节点"><a href="#获得节点" class="headerlink" title="获得节点"></a>获得节点</h2><ul><li>要操作一个 Dom 节点，必须要先获得这个 Dom 节点.</li><li>之后尽量都使用 jQuery()</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> h1 = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;h1&quot;</span>),</span><br><span class="line">  class_1 = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;class-1&quot;</span>),</span><br><span class="line">  app = <span class="built_in">document</span>.getElementById(<span class="string">&quot;app&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> children = app.children;</span><br></pre></td></tr></table></figure><hr><h2 id="更新节点"><a href="#更新节点" class="headerlink" title="更新节点"></a>更新节点</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span> <span class="attr">id</span>=<span class="string">&quot;body&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> body = <span class="built_in">document</span>.getElementById(<span class="string">&quot;body&quot;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 会覆盖掉所有文档树,比如上面的div被覆写</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">      body.innerHTML = &quot;<span class="tag">&lt;<span class="name">em</span>&gt;</span>这里是body标签.<span class="tag">&lt;/<span class="name">em</span>&gt;</span>&quot;;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">// 修改css样式</span></span></span><br><span class="line"><span class="javascript">      body.style.color = <span class="string">&quot;red&quot;</span>;</span></span><br><span class="line"><span class="javascript">      body.style.fontSize = <span class="string">&quot;20px&quot;</span>;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h2><ul><li>需要先获取父节点,在通过父节点删除目标子节点.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 删除这个 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;here&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> self = <span class="built_in">document</span>.getElementById(<span class="string">&quot;here&quot;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> father = self.parentElement;</span></span><br><span class="line">      father.removeChild(self);</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">// 动态删除,删除后子节点index会自动改变.</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(father.children[<span class="number">0</span>]); <span class="comment">// &lt;div&gt;1&lt;/div&gt;</span></span></span><br><span class="line">      father.removeChild(father.children[0]);</span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(father.children[<span class="number">0</span>]); <span class="comment">// &lt;div&gt;2&lt;/div&gt;</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="插入节点"><a href="#插入节点" class="headerlink" title="插入节点"></a>插入节点</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span> <span class="attr">id</span>=<span class="string">&quot;body&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// var body = document.getElementById(&quot;body&quot;);</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// ByTagName返回的是数组,这句等同于上面</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> body = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;body&quot;</span>)[<span class="number">0</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">//创建一个新的节点</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> newP = <span class="built_in">document</span>.createElement(<span class="string">&quot;p&quot;</span>); <span class="comment">//创建一个p标签</span></span></span><br><span class="line"><span class="javascript">      newP.id = <span class="string">&quot;newP&quot;</span>;</span></span><br><span class="line"><span class="javascript">      newP.innerText = <span class="string">&quot;Hello World&quot;</span>;</span></span><br><span class="line">      body.appendChild(newP);</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">//创建一个script标签</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> myScript = <span class="built_in">document</span>.createElement(<span class="string">&quot;script&quot;</span>);</span></span><br><span class="line"><span class="javascript">      myScript.setAttribute(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;text/javascript&quot;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">//创建一个style标签</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> myStyle = <span class="built_in">document</span>.createElement(<span class="string">&quot;style&quot;</span>); <span class="comment">//创建了一个空style标签</span></span></span><br><span class="line"><span class="javascript">      myStyle.setAttribute(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;text/css&quot;</span>);</span></span><br><span class="line"><span class="javascript">      myStyle.innerHTML = <span class="string">&quot;body&#123;background-color:chartreuse;&#125;&quot;</span>; <span class="comment">//设置标签内容</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">//多种方法注入</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// body.appendChild(myStyle);</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// body.style.backgroundColor = &quot;chartreuse&quot;;</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// document.getElementByTagName(&quot;body&quot;)[0].appendChild(myStyle);</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.body.appendChild(myStyle);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="排列节点"><a href="#排列节点" class="headerlink" title="排列节点"></a>排列节点</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span> <span class="attr">id</span>=<span class="string">&quot;body&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div-1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div-2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">&quot;div-1&quot;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> div2 = <span class="built_in">document</span>.getElementById(<span class="string">&quot;div-2&quot;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.body.insertBefore(div2, div1);</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 这样就把div2插到div1前面了.</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>除此之外还有.replace 等等,不再赘述,用时看文档就行.</li></ul><hr><h1 id="操作表单"><a href="#操作表单" class="headerlink" title="操作表单"></a>操作表单</h1><ul><li>表单主要用来提交信息<ul><li>文本框—-text</li><li>下拉框—-select</li><li>单选框—-radio</li><li>多选框—-checkbox</li><li>隐藏域—-hidden</li><li>密码框—-password</li></ul></li></ul><hr><h2 id="获得表单信息"><a href="#获得表单信息" class="headerlink" title="获得表单信息"></a>获得表单信息</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--多选框的值就是定义好的value--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>性别：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;man&quot;</span> <span class="attr">id</span>=<span class="string">&quot;boy&quot;</span> /&gt;</span>男</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;woman&quot;</span> <span class="attr">id</span>=<span class="string">&quot;girl&quot;</span> /&gt;</span>女</span><br><span class="line">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> input_text = <span class="built_in">document</span>.getElementById(<span class="string">&quot;username&quot;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> boy_radio = <span class="built_in">document</span>.getElementById(<span class="string">&quot;boy&quot;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> girl_radio = <span class="built_in">document</span>.getElementById(<span class="string">&quot;girl&quot;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">//获取输入框的值</span></span></span><br><span class="line">      input_text.value;</span><br><span class="line"><span class="javascript">      <span class="comment">//修改输入框的值</span></span></span><br><span class="line"><span class="javascript">      input_text.value = <span class="string">&quot;Weidows&quot;</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">//对于单选框，多选框等等固定的值，boy_radio.value只能取到当前的值man/woman</span></span></span><br><span class="line"><span class="javascript">      boy_radio.checked; <span class="comment">//查看返回的结果，是否为true，如果为true，则被选中。</span></span></span><br><span class="line"><span class="javascript">      girl_radio.checked = <span class="literal">true</span>; <span class="comment">//赋值</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>效果</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/24/q1wYRTn6A79a4OV.png" alt="20210124093813" /></li></ul><hr><h2 id="提交表单"><a href="#提交表单" class="headerlink" title="提交表单"></a>提交表单</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--MD5加密工具类--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      表单绑定提交事件</span></span><br><span class="line"><span class="comment">      οnsubmit= 绑定一个提交检测的函数:true，false</span></span><br><span class="line"><span class="comment">      将这个结果返回给表单，使用onsubmit接收</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return aaa()&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        表单提交抓取的是带有name属性的input标签的value,不带的不会抓</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">required</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">id</span>=<span class="string">&quot;md5-password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        &lt;button type=&quot;submit&quot;&gt;提交&lt;/button&gt; 与下面等效</span></span><br><span class="line"><span class="comment">        绑定事件 onclick 被点击</span></span><br><span class="line"><span class="comment">        &lt;input type=&quot;submit&quot; onclick=&quot;aaa()&quot; /&gt;</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">aaa</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> username = <span class="built_in">document</span>.getElementById(<span class="string">&quot;username&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> pwd = <span class="built_in">document</span>.getElementById(<span class="string">&quot;password&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> md5pwd = <span class="built_in">document</span>.getElementById(<span class="string">&quot;md5-password&quot;</span>);</span></span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line"><span class="javascript">         * 这里可以校验判断或处理表单内容，<span class="literal">true</span>就是通过提交，<span class="literal">false</span>就是阻止提交</span></span><br><span class="line">         * 上面username是用required来判空</span><br><span class="line">         * password是用下面的if判空</span><br><span class="line">         */</span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (pwd.value === <span class="string">&quot;&quot;</span>) &#123;</span></span><br><span class="line"><span class="javascript">          alert(<span class="string">&quot;请填写全.&quot;</span>);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          md5pwd.value = md5(pwd.value); <span class="comment">// 加密</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>效果</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/26/UcpDzOe1ZEWKHN6.png" alt="20210126211616" /><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/26/YG9AhCemrpuPsxi.png" alt="20210126211801" /></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🙌Windows平台软件包管理器选择-Scoop</title>
      <link href="post/tools/Scoop/"/>
      <url>post/tools/Scoop/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-01-14 23:09:52 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:12:48 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\tools\Scoop.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%BC%95%E5%85%A5%E5%8F%98%E9%87%8F">引入变量</a></li><li><a href="#%E5%90%84%E4%B8%AA%E4%BC%98%E7%BC%BA%E7%82%B9">各个优缺点</a></li><li><a href="#scoop-%E5%AE%89%E8%A3%85">Scoop 安装</a></li><li><a href="#chocolatey-%E5%AE%89%E8%A3%85">Chocolatey 安装</a></li><li><a href="#scoop-completion">scoop-completion</a></li><li><a href="#%E5%8A%A0%E9%80%9F%E4%B8%8B%E8%BD%BD">加速下载</a><ul><li><a href="#%E9%80%9A%E8%BF%87-aria2">通过 aria2</a></li><li><a href="#%E9%80%9A%E8%BF%87%E4%BB%A3%E7%90%86">通过代理</a></li></ul></li><li><a href="#scoop-%E7%BB%9D%E6%B4%BB">Scoop 绝活</a></li><li><a href="#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">配置文件</a><ul><li><a href="#scoop">Scoop</a></li><li><a href="#chocolatey">Chocolatey</a></li></ul></li><li><a href="#%E5%A5%BD%E6%96%87%E4%BC%A0%E9%80%81">好文传送</a></li><li><a href="#%E5%AE%89%E8%A3%85%E5%BC%82%E5%B8%B8">安装异常</a></li><li><a href="#%E6%9B%B4%E6%96%B0%E5%A4%87%E4%BB%BD%E6%8E%A8%E8%8D%90">更新&amp;备份&amp;推荐</a></li></ul><h1 id="引入变量"><a href="#引入变量" class="headerlink" title="引入变量"></a>引入变量</h1><ul><li><p>软件包管理器: 就像是 360 软件管家,腾讯软件管家之类的</p></li><li><p>此文章要介绍的是<code>Scoop</code>- 横向简单对比<code>Chocolatey</code>和<code>WinGet</code></p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="各个优缺点"><a href="#各个优缺点" class="headerlink" title="各个优缺点"></a>各个优缺点</h1><ul><li><p>Scoop</p><ul><li>软件少</li><li>安装它需要<code>科学上网</code></li><li>官方只收留非 GUI 软件(不带图形界面的),但是有第三方拓展库</li><li>安装/卸载干净,可指定性,可拓展第三方软件仓库</li><li>不污染环境变量,软件目录清晰</li><li><em>面向程序员</em>.</li></ul></li><li><p>Chocolatey</p><ul><li>软件多</li><li>有的软件安装位置不定</li><li>面向大众.</li></ul><blockquote><p><a href="https://www.cnbeta.com/articles/tech/874537.htm?utm_source=tuicool&utm_medium=referral">软件包管理工具选 Scoop 还是 Chocolatey？看完这篇就知道了</a></p></blockquote></li><li><p>WinGet</p><ul><li>preview 中(2021 年初为止)</li><li><code>只能安装不能卸载</code></li><li>只能装.exe,.msi 等,差不多就是个下载+安装的工具</li><li>还非常青涩,<strong>不推荐!</strong></li></ul><blockquote><p><a href="https://sspai.com/post/60592">WinGet 介绍</a></p></blockquote></li><li><p>个人选择了 <code>Scoop</code>,下面主要讲 Scoop.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Scoop-安装"><a href="#Scoop-安装" class="headerlink" title="Scoop 安装"></a>Scoop 安装</h1><ul><li><p>安装前先设置下 Scoop 的<code>安装路径</code></p></li><li><p>下面操作需要在 pwsh 中进行,没有的话可以手动操作.</p></li><li><p>如下,在 user 栏新建<code>SCOOP</code>,值为<code>D:\Game\Scoop</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$env:SCOOP</span>=<span class="string">&#x27;D:\Game\Scoop&#x27;</span></span><br><span class="line">[<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;SCOOP&#x27;</span>, <span class="variable">$env:SCOOP</span>, <span class="string">&#x27;User&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>另外,如果想添加到系统环境变量栏,只需把<code>User</code>修改为<code>Machine</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;SCOOP&#x27;</span>, <span class="variable">$env:SCOOP</span>, <span class="string">&#x27;Machine&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>配置好了如下</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/15/WEtuLNerT8dw6Jk.png" alt="20210115232840" /></li><li><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iwr -useb get.scoop.sh | iex</span><br></pre></td></tr></table></figure></li><li><p>测试</p><ul><li><p>终端输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop</span><br></pre></td></tr></table></figure></li><li><p>输出</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">❯ scoop</span><br><span class="line">Usage: scoop &lt;command&gt; [&lt;<span class="keyword">args</span>&gt;]</span><br><span class="line"></span><br><span class="line">Some useful commands are:</span><br><span class="line"></span><br><span class="line">alias       Manage scoop aliases</span><br><span class="line">bucket      Manage Scoop buckets</span><br><span class="line">cache       Show or <span class="keyword">clear</span> the download cache</span><br><span class="line">checkup     Check <span class="keyword">for</span> potential problems</span><br><span class="line">cleanup     Cleanup apps <span class="keyword">by</span> removing old versions</span><br><span class="line">config      Get or <span class="keyword">set</span> configuration values</span><br><span class="line">create      Create a custom <span class="keyword">app</span> manifest</span><br><span class="line">depends     <span class="keyword">List</span> dependencies <span class="keyword">for</span> <span class="keyword">an</span> <span class="keyword">app</span></span><br><span class="line">export      Exports (<span class="keyword">an</span> importable) <span class="keyword">list</span> of installed apps</span><br><span class="line"><span class="keyword">help</span>        Show <span class="keyword">help</span> <span class="keyword">for</span> a command</span><br><span class="line">hold        Hold <span class="keyword">an</span> <span class="keyword">app</span> to disable updates</span><br><span class="line">home        Opens the <span class="keyword">app</span> homepage</span><br><span class="line">info        <span class="keyword">Display</span> information <span class="keyword">about</span> <span class="keyword">an</span> <span class="keyword">app</span></span><br><span class="line">install     Install apps</span><br><span class="line"><span class="keyword">list</span>        <span class="keyword">List</span> installed apps</span><br><span class="line">prefix      Returns the path to the specified <span class="keyword">app</span></span><br><span class="line">reset       Reset <span class="keyword">an</span> <span class="keyword">app</span> to resolve conflicts</span><br><span class="line"><span class="keyword">search</span>      <span class="keyword">Search</span> available apps</span><br><span class="line">status      Show status and check <span class="keyword">for</span> new <span class="keyword">app</span> versions</span><br><span class="line">unhold      Unhold <span class="keyword">an</span> <span class="keyword">app</span> to enable updates</span><br><span class="line">uninstall   Uninstall <span class="keyword">an</span> <span class="keyword">app</span></span><br><span class="line"><span class="keyword">update</span>      <span class="keyword">Update</span> apps, or Scoop itself</span><br><span class="line">virustotal  Look <span class="keyword">for</span> <span class="keyword">app</span>&#x27;s hash <span class="keyword">on</span> virustotal.com</span><br><span class="line"><span class="keyword">which</span>       Locate a shim/executable (similar to &#x27;<span class="keyword">which</span>&#x27; <span class="keyword">on</span> Linux)</span><br><span class="line"></span><br><span class="line"><span class="keyword">Type</span> &#x27;scoop <span class="keyword">help</span> &lt;command&gt;&#x27; to get <span class="keyword">help</span> <span class="keyword">for</span> a specific command.</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul></li></ul><h1 id="Chocolatey-安装"><a href="#Chocolatey-安装" class="headerlink" title="Chocolatey 安装"></a>Chocolatey 安装</h1><ul><li><p>首先设置环境变量 <code>ChocolateyInstall</code> ,值为要安装的位置,如下</p><ul><li><p>如果不设置的话 Chocolatey 会自动安装进 C 盘</p></li><li><p>设置完环境变量后一定要<code>重启</code>,否则不会生效,还是跟没设置一样.</p></li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210314001245.png" alt="20210314001245" /></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="scoop-completion"><a href="#scoop-completion" class="headerlink" title="scoop-completion"></a>scoop-completion</h1><ul><li><p>scoop 命令按 tab 自动补全</p></li><li><p>安装</p><ul><li>需要先添加 dorado 库<a href="#%E5%A4%87%E4%BB%BD&%E6%8E%A8%E8%8D%90">(备份&amp;推荐)</a>,然后才能安装.</li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">scoop </span><span class="keyword">install </span><span class="keyword">scoop-completion</span></span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="加速下载"><a href="#加速下载" class="headerlink" title="加速下载"></a>加速下载</h1><h2 id="通过-aria2"><a href="#通过-aria2" class="headerlink" title="通过 aria2"></a>通过 aria2</h2><ul><li><p>安装 <code>aria2</code></p></li><li><p>配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scoop config aria2-split 32</span><br><span class="line">scoop config aria2-max-connection-per-server 16</span><br><span class="line">scoop config aria2-min-split-size 1M</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="通过代理"><a href="#通过代理" class="headerlink" title="通过代理"></a>通过代理</h2><ul><li><p>设置代理</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scoop<span class="built_in"> config proxy </span>localhost:7890</span><br><span class="line">choco<span class="built_in"> config </span><span class="builtin-name">set</span><span class="built_in"> proxy </span>localhost:7890</span><br></pre></td></tr></table></figure></li><li><p>移除代理</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scoop<span class="built_in"> config </span>rm proxy</span><br><span class="line">choco<span class="built_in"> config </span>unset proxy</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="Scoop-绝活"><a href="#Scoop-绝活" class="headerlink" title="Scoop 绝活"></a>Scoop 绝活</h1><ul><li><p>他把当前版本的目录创建了一个<code>伪目录:current</code>,这个伪目录指向当前版本号的目录</p></li><li><p>比如这里的<code>current/node.exe</code>实际上指向<code>15.5.1/node.exe</code></p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/15/Syi1kKHYwTVMuaL.png" alt="20210115011742" /></li><li><p>这就类似 URL 永久化,使得软件更新后即使目录版本号变更,你的路径引用也不会失效!</p></li><li><p>这个功能太赞了!</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><h2 id="Scoop"><a href="#Scoop" class="headerlink" title="Scoop"></a>Scoop</h2><blockquote><p>在 <code>C:\Users\用户名\.config\scoop\config.json</code> 这个文件里.</p></blockquote><blockquote><p><a href="https://github.com/Weidows/Programming-Configuration/tree/master/Scoop/config.json">我的配置文件链接</a></p></blockquote><hr><h2 id="Chocolatey"><a href="#Chocolatey" class="headerlink" title="Chocolatey"></a>Chocolatey</h2><blockquote><p>在 <code>Chocolatey\config\chocolatey.config</code> 这个文件里.</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="好文传送"><a href="#好文传送" class="headerlink" title="好文传送"></a>好文传送</h1><blockquote><p><a href="https://blog.csdn.net/luoyooi/article/details/102990113">Windows 下 Scoop 安装、配置与使用</a></p></blockquote><blockquote><p><a href="https://www.jianshu.com/p/50993df76b1c">scoop——强大的 Windows 命令行包管理工具</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="安装异常"><a href="#安装异常" class="headerlink" title="安装异常"></a>安装异常</h1><ul><li>比如我在用 scoop 安装 pwsh 时,会遇到 MD5 不匹配或者与 GitHub 连接异常的情况,安装失败</li><li>举例:<ul><li>我安装<code>gitkraken</code>时,不开 aria2 下载出错,开了的话下载特慢,而且下载时间趋近无穷..</li><li>于是我采用方案一,直接用浏览器下载的,带宽跑满,几秒就下载好了.</li><li>然后改文件名-&gt;复制进 cache-&gt;install-&gt;successfully.</li></ul></li><li>另外还有一种情况,比如我安装<code>gcc</code>时遇到 scoop 提供的 URL 是 404 状态,这是服务器的问题了,无法解决.</li></ul><blockquote><p>注意,如果安装失败,在 Scoop 内部记录实际是<code>已安装</code>,所以需要卸载再重新安装</p></blockquote><hr><ul><li><p>解决方案一</p><ul><li><p>安装失败报错时会显示下载地址,去那里手动下载目标文件</p><ul><li><p>或者进入 cache,找到有个叫<code>(要安装的软件名).txt</code>这个文件,比如我要安装<code>gitkraken</code>,就去找到<code>cache/gitkraken.txt</code></p></li><li><p>内容如下</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https</span>://release.gitkraken.com/win<span class="number">64</span>/gitkraken-<span class="number">7</span>.<span class="number">4</span>.<span class="number">1</span>-full.nupkg</span><br><span class="line"><span class="attribute">referer</span>=https://release.gitkraken.com/win<span class="number">64</span>/</span><br><span class="line"><span class="attribute">dir</span>=D:\Game\Scoop\cache</span><br><span class="line"><span class="attribute">out</span>=gitkraken#<span class="number">7</span>.<span class="number">4</span>.<span class="number">1</span>#https_release.gitkraken.com_win<span class="number">64</span>_gitkraken-<span class="number">7</span>.<span class="number">4</span>.<span class="number">1</span>-full.nupkg</span><br></pre></td></tr></table></figure></li><li><p>第一行就是<code>下载地址</code>,最后一行<code>out=</code>后面是目标文件名</p></li></ul></li><li><p>进入 cache,按照他的命名,把我们自己下载的重命名后复制进来</p></li><li><p>再进行 install,安装时 scoop 首先检查 cache 中是否有符合的包,没有才会去下载.</p></li></ul><hr></li><li><p>解决方案二</p><ul><li>把 aria2 关闭以下就好</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop config aria2-enabled false</span><br></pre></td></tr></table></figure><ul><li>事后再开启(毕竟它对于某些下载速度提升非常高)</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop config aria2-enabled true</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="更新-amp-备份-amp-推荐"><a href="#更新-amp-备份-amp-推荐" class="headerlink" title="更新&amp;备份&amp;推荐"></a>更新&amp;备份&amp;推荐</h1><ul><li><p>检查软件更新:</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">scoop status</span></span><br></pre></td></tr></table></figure><hr></li><li><p>运行库(安装后就可以卸载)</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">scoop</span> install vcredist</span><br><span class="line"><span class="attribute">scoop</span> uninstall vcredist vcredist<span class="number">2005</span> vcredist<span class="number">2008</span> vcredist<span class="number">2010</span> vcredist<span class="number">2012</span> vcredist<span class="number">2013</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">scoop</span> install nvidia-display-driver-with-<span class="number">3</span>d-vision-np</span><br></pre></td></tr></table></figure></li><li><p>库</p><blockquote><p><a href="https://github.com/Weidows/Programming-Configuration/tree/master/Scoop/buckets.bak">链接</a></p></blockquote></li><li><p>软件</p><blockquote><p><a href="https://github.com/Weidows/Programming-Configuration/tree/master/Scoop/apps.bak">链接</a></p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐 </tag>
            
            <tag> Windows </tag>
            
            <tag> Scoop </tag>
            
            <tag> 工具 </tag>
            
            <tag> package </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>😂我所喜的小语句儿,所爱的小语气儿~(壹)</title>
      <link href="post/life/nicer/1/"/>
      <url>post/life/nicer/1/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-01-03 16:59:56 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 16:44:55 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\life\nicer\1.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E4%BD%95"><code>何?</code></a></li><li><a href="#%E6%B3%A8%E9%87%8A">注释</a></li><li><a href="#%E4%B9%B1%E7%A0%81">乱码</a></li><li><a href="#%E9%AB%98%E8%83%BD%E8%AF%8D%E6%B1%87">高能词汇</a></li><li><a href="#%E5%87%A1%E5%B0%94%E8%B5%9B">凡尔赛</a></li><li><a href="#%E8%B7%91%E8%B7%AF">跑路</a></li><li><a href="#%E6%80%9D%E6%83%B3%E5%A2%83%E7%95%8C">思想境界</a></li><li><a href="#%E4%BD%A0%E6%83%B3%E5%88%B0%E5%93%AA%E5%8E%BB%E4%BA%86">你想到哪去了?</a></li><li><a href="#%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88">经验之谈</a></li><li><a href="#%E8%81%86%E5%90%AC%E8%8E%B7%E5%BE%97%E5%B9%B8%E7%A6%8F%E6%84%9F%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F">【聆听】获得幸福感的四种方式</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="何"><a href="#何" class="headerlink" title="何?"></a><code>何?</code></h1><ul><li>总是在各种平台看到喜欢的话,在这里记录一下<ul><li>在说说里发感觉怪怪的.</li></ul></li><li>有冒犯的话…请原谅,我也没法 🤣</li></ul><hr><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><p>//在我写这个程序的时候，只有我和老天知道它是什么意思<br>//好了，现在只有老天才知道了 ​</p><hr><p>解决问题的方法就是解决提出问题的人</p><h1 id="乱码"><a href="#乱码" class="headerlink" title="乱码"></a>乱码</h1><p>手持两把锟斤拷<br>口中疾呼烫烫烫<br>脚踏千朵屯屯屯<br>笑看万物锘锘锘 ​</p><hr><h1 id="高能词汇"><a href="#高能词汇" class="headerlink" title="高能词汇"></a>高能词汇</h1><p>复盘，赋能，抓手，对标，沉淀，对齐，拉通，倒逼，颗粒度，落地，中台，方法论，漏斗，组合拳，闭环，生命周期，打法，履约，引爆点，串联，价值转化，纽带，矩阵，协同，反哺，点线面，认知，强化认知，强化心智，交互，兼容，包装，响应，刺激，规模，重组，量化，宽松，资源倾斜，完善逻辑，抽离透传、抽象，复用打法，发力，精细化，布局，商业模式，联动，场景，聚焦，快速响应，影响力，价值，细分，垂直领域，维度，定性定量，聚焦，去中心化，关键路径，接地气，梳理，输出，格局，生态 ​</p><hr><h1 id="凡尔赛"><a href="#凡尔赛" class="headerlink" title="凡尔赛"></a>凡尔赛</h1><p>悔创阿里杰克马，一无所有王健林。<br>不知妻美刘强东，普通家庭马化腾。<br>北大还行撒贝宁，会打一点张继科。<br>平平无奇古天乐，家里最丑刘亦菲。​</p><hr><h1 id="跑路"><a href="#跑路" class="headerlink" title="跑路"></a>跑路</h1><p>一拍脑袋有了，一拍胸脯准了，一拍屁股坏了，一拍大腿跑了 ​</p><hr><h1 id="思想境界"><a href="#思想境界" class="headerlink" title="思想境界"></a>思想境界</h1><ul><li>读了很多遍,感触很深…</li></ul><p>我虽然不是小姐姐北大这样的国内 top 高校，但是我感觉我能强烈共情和理解她说的东西。我自己是普通一本然后去英国读了硕士，专业计算机，这个专业你们懂得。</p><p>之前也找到了 BAT 的实习，但是问题就是感觉我强烈的被催着走，不能停，你必须每一个关卡都顺利，让自己简历漂漂亮亮。</p><p>我后来手里拿到了大家眼里都觉得”光鲜亮丽”的那种工作 offer，薪资真的不错，然而我却痛苦，因为我实习过了解真正职场的工作状态，真的让我窒息。我慎重考虑后，放弃了这个 offer，然而很少有人能理解你的选择，你说你觉得 996 不合理，你不认同这种提前透支自己身体健康的工作模式，却有人说这种”福报”他们巴不得自己修，007 都接受。</p><p>我想我太理想主义了，我尊重每个人的选择，因此我只说我个人观点，对于我个人而言，我就是不想 996，我就是认为这种职场模式不健康，我就是不想干到 35 被优化，冒着内分泌紊乱的风险，透支未来赚 💰。</p><p>其实最难受的还是父母不理解，我拒掉了 BAT 的 offer，我母亲就跑到我床前大声呵斥我，”你要是不去你当初说服我和你爸【投资】你出国干嘛?你学了这个专业不用，你想干嘛?”对啊，我还背着 15 万贷款呢？是啊，看起来我放弃高薪工作简直就是疯了!可他们没有理解为什么我要冒这么大的风险都不愿意去接这个 offer 呢？</p><p>在我们这个小县城，一个从小学习不错，海外留学硕士，从小到大不用母亲费心教的孩子还培养的这么”优秀”对给她涨面子。但我深深感觉到自己就被锁在这个枷锁里，计算机专业好呀，代表着我就得码代码去互联网，海外硕士棒呀，意味着得去一线去做”光鲜亮丽”的工作。</p><p>Bro，那太难受了，”我”呢?然而在这么多年的竞争中我只学会了抓住一切机会往上爬，选热门的专业，选高回报率的工作，却从来不问自己真正喜欢什么？或者向往什么？也许我心里曾经有过一个热爱某个事情的灵魂，但是为了在残酷是竞争中活下来，或者说不被卷下来，我早就亲手杀掉了她。</p><p>不过现在我家里蹲的过程中也想明白了，我就一普通人，什么面子，光鲜，都蛮虚无，只要在劳动就了不起，也尝试去挖掘更多潜能，大环境 996，我不喜欢，我选择用我自己的方式反抗，我知道目前这种职场状态是不会变的，我能做的只有自救。​</p><hr><h1 id="你想到哪去了"><a href="#你想到哪去了" class="headerlink" title="你想到哪去了?"></a>你想到哪去了?</h1><p>语文老师:细节呢?</p><p>英语老师:发音呢?</p><p>数学老师:过程呢?</p><p>音乐老师:音调呢?</p><p>地理老师:位置呢?</p><p>美术老师:画面呢?</p><p>物理老师:实践呢?</p><p>化学老师:反应呢?</p><p>政治老师:思想呢?</p><p>历史老师:记录呢?</p><p>实践老师:体会呢?</p><p>体育老师:力度呢?</p><p>舞蹈老师:动作呢?</p><p>班主任老师:结果呢?</p><p>生物老师:孩子呢?</p><hr><h1 id="经验之谈"><a href="#经验之谈" class="headerlink" title="经验之谈"></a>经验之谈</h1><p>看到这个，我想说说个人折腾经历</p><p>开始的时候，用 Github Pages 来托管，那肯定用 jekyll，方便不折腾</p><p>后来因为编译略慢，投奔到 Hugo 的怀抱去了，还顺便折腾一下自动 commit 到 github 自动编译部署的实现。那个时候是真心喜欢 Hugo，虽然不怎么写 Golang，但还是各种折腾给 Hugo commit 过一段代码，release note 现在都还能看到我的名字</p><p>再后来，有个几万篇文章的小项目，心想 Hugo 这么牛逼，那干脆用 Hugo 静态部署好了，不试试不知道，一试就扑街，1.5 万左右篇文章，Hugo 在我的双核四线程 8GB 内存的笔记本上，CPU 满载 build 了四分钟多，让我顿时间怀疑人生</p><p>看来静态博客生成器，即使速度快如 golang 编写的 Hugo 真的不过如此。倒不是因为 Hugo 的代码有性能问题，而是静态博客根本不适合大量的文章生成的场景</p><p>自己折腾一遍，也终于算是懂得了为何如此多的项目后面为什么带着个 MySQL，因为这需求实在是太普遍了。对比与静态博客，带着 MySQL 的意义是显而易见的，不用重新 build 整个站点</p><p>技术没有什么绝对好与差，只有适用的场景，抛开上下文讨论技术是不明智的</p><p>Ruby 圈有句话叫 You will end up reinventing Rails, in a horrible way.</p><p>后来我发现这句话真是放之四海而皆准，总结起来，blog 圈也可以有句话叫 You will end up reinventing Wordpress, in a horrible way.</p><p>好好写作，你的目的并不是折腾写作软件</p><hr><h1 id="【聆听】获得幸福感的四种方式"><a href="#【聆听】获得幸福感的四种方式" class="headerlink" title="【聆听】获得幸福感的四种方式"></a>【聆听】获得幸福感的四种方式</h1><blockquote><p><a href="https://mp.weixin.qq.com/s?__biz=Mzk0NzE4NTk4Ng==&mid=2247486664&idx=1&sn=3e115e5ee33948846819321536705e8c&chksm=c37bfce5f40c75f333ad90fe707dc89d17e0d914ca2db338f04fca451e63756930aac749777c&mpshare=1&scene=23&srcid=0307vCilCgxIE2HcQDkmFUuR&sharer_sharetime=1615085382218&sharer_shareid=ff6bb8cfd138294e80df076b8b76232d#rd">【聆听】获得幸福感的四种方式</a></p></blockquote><ul><li>很有实体感受的一片情感类文章,<code>推荐聆听而非阅读</code>.</li></ul>]]></content>
      
      
      <categories>
          
          <category> recommend </category>
          
          <category> nicer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哲学 </tag>
            
            <tag> 生活 </tag>
            
            <tag> 搞笑 </tag>
            
            <tag> 高能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>♻VScode插件开发流程.</title>
      <link href="post/tools/vscode/extension-develop/"/>
      <url>post/tools/vscode/extension-develop/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-01-03 15:18:46 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:29:01 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\tools\vscode\extension-develop.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87">前期准备</a></li><li><a href="#%E5%BC%80%E5%8F%91">开发</a></li><li><a href="#%E6%89%93%E5%8C%85">打包</a></li><li><a href="#%E5%8F%91%E5%B8%83">发布</a></li><li><a href="#%E7%BB%93%E5%90%88-github">结合 GitHub</a></li><li><a href="#%E5%89%96%E6%9E%90-packagejson">剖析 package.json</a></li><li><a href="#%E6%96%87%E7%AB%A0%E6%8E%A8%E8%8D%90">文章推荐</a></li></ul><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><blockquote><p>首先准备好点子(扩展,主题啥的)具体是想要做啥.</p></blockquote><hr><h1 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h1><ul><li><p>可以照葫芦画瓢,反正基本都是开源的,别乱复制粘贴就好.</p></li><li><p>vscode 插件开发可以用<code>Yeoman</code>:</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">npm</span> install -g yo generator-<span class="meta">code</span></span><br></pre></td></tr></table></figure></li><li><p>使用:</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">yo</span> <span class="meta">code</span></span><br></pre></td></tr></table></figure></li><li><p>具体怎么使用,暂时不造,先记着.</p></li></ul><hr><h1 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h1><ul><li><p>安装<code>vsce</code></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> -g vsce</span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vsce <span class="class"><span class="keyword">package</span></span></span><br></pre></td></tr></table></figure></li><li><p>使用后会把当前目录下所有东西打包成<code>*.vsix</code></p></li></ul><hr><h1 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h1><ul><li><p>网上一些其他教程忒老了,还在用 vsce 发布(官方都已经停用了…)</p></li><li><p>进入<a href="https://marketplace.visualstudio.com/VSCode">https://marketplace.visualstudio.com/VSCode</a></p></li><li><p>右上角有个<code>publish extension</code>,注册登录账号</p><ul><li><p>之后你的账号应该有一个组织,在组织下新建一个<code>publisher</code></p></li><li><p>然后摸索摸索发布插件.</p></li></ul></li></ul><hr><h1 id="结合-GitHub"><a href="#结合-GitHub" class="headerlink" title="结合 GitHub"></a>结合 GitHub</h1><ul><li><p>发现 package.json 中必须用 https 协议传输数据,于是 local 的 images<code>无法显示</code></p><ul><li>意思就是<code>./xxx.jpg</code>根本显示不出来.</li><li>必须使用<code>https://xxx.jpg</code>才行.</li></ul></li><li><p>这导致一些图片并不需要打包在插件里(因为是引用的 URL)</p><ul><li>而且这些图片要是想显示,必须有个图床.</li></ul></li><li><p>那还想啥? 肯定是 GitHub 啊!</p><ul><li>我的方案是 Git -&gt; GitHub</li><li>在 Git 项目中建立<code>pack/</code>目录专门用来打包<code>*.vsix</code></li><li>在 pack 同级目录建立<code>images/</code>传到 github 当图床.(因为使用私人图床管理太乱)</li></ul></li><li><p>项目结构</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/03/UbD9VspYcdH7Ojn.png" alt="20210103160252" /></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="剖析-package-json"><a href="#剖析-package-json" class="headerlink" title="剖析 package.json"></a>剖析 package.json</h1><ul><li><p>借用<code>Git Graph</code>插件简单分析一下 package 中的配置 (因为文件过长,已删掉一部分)</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// 插件注册名</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;git-graph&quot;</span>,</span><br><span class="line">  <span class="comment">// 插件显示的名字</span></span><br><span class="line">  <span class="attr">&quot;displayName&quot;</span>: <span class="string">&quot;Git Graph&quot;</span>,</span><br><span class="line">  <span class="comment">// 版本</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;1.29.0&quot;</span>,</span><br><span class="line">  <span class="comment">// 发布者(只能一人)</span></span><br><span class="line">  <span class="attr">&quot;publisher&quot;</span>: <span class="string">&quot;mhutchie&quot;</span>,</span><br><span class="line">  <span class="comment">// 作者(多人)</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Michael Hutchison&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;email&quot;</span>: <span class="string">&quot;mhutchie@16right.com&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 插件描述</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;View a Git Graph of your repository, and perform Git actions from the graph.&quot;</span>,</span><br><span class="line">  <span class="comment">// 关键词(供搜索用)</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span>: [<span class="string">&quot;git&quot;</span>, <span class="string">&quot;graph&quot;</span>, <span class="string">&quot;visualise&quot;</span>, <span class="string">&quot;diff&quot;</span>, <span class="string">&quot;action&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;categories&quot;</span>: [<span class="string">&quot;Other&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;homepage&quot;</span>: <span class="string">&quot;https://github.com/mhutchie/vscode-git-graph&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;repository&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;git&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;https://github.com/mhutchie/vscode-git-graph.git&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;bugs&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;https://github.com/mhutchie/vscode-git-graph/issues&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// Question &amp; answer</span></span><br><span class="line">  <span class="attr">&quot;qna&quot;</span>: <span class="string">&quot;https://github.com/mhutchie/vscode-git-graph/wiki/Support-Resources&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;license&quot;</span>: <span class="string">&quot;SEE LICENSE IN &#x27;LICENSE&#x27;&quot;</span>,</span><br><span class="line">  <span class="comment">// 插件图标</span></span><br><span class="line">  <span class="attr">&quot;icon&quot;</span>: <span class="string">&quot;resources/icon.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;engines&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;vscode&quot;</span>: <span class="string">&quot;^1.38.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;extensionKind&quot;</span>: [<span class="string">&quot;workspace&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;activationEvents&quot;</span>: [<span class="string">&quot;*&quot;</span>],</span><br><span class="line">  <span class="comment">// 入口文件</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;./out/extension.js&quot;</span>,</span><br><span class="line">  <span class="comment">// 对接vscode接口</span></span><br><span class="line">  <span class="attr">&quot;contributes&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">// 命令面板的命令</span></span><br><span class="line">    <span class="attr">&quot;commands&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;category&quot;</span>: <span class="string">&quot;Git Graph&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;git-graph.view&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;View Git Graph (git log)&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;icon&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;light&quot;</span>: <span class="string">&quot;resources/cmd-icon-light.svg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;dark&quot;</span>: <span class="string">&quot;resources/cmd-icon-dark.svg&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;category&quot;</span>: <span class="string">&quot;Git Graph&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;git-graph.addGitRepository&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;Add Git Repository...&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">// 插件的设置</span></span><br><span class="line">    <span class="attr">&quot;configuration&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;object&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;Git Graph&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;git-graph.commitDetailsView.autoCenter&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;boolean&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;default&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;Automatically center the Commit Details View when it is opened.&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;git-graph.commitDetailsView.fileView.fileTree.compactFolders&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;boolean&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;default&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;Render the File Tree in the Commit Details View in a compacted form, such that folders with a single child folder are compressed into a single combined folder element.&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 插件在vscode界面的显示</span></span><br><span class="line">    <span class="attr">&quot;menus&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;scm/title&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;when&quot;</span>: <span class="string">&quot;scmProvider == git &amp;&amp; config.git-graph.sourceCodeProviderIntegrationLocation == &#x27;Inline&#x27;&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;git-graph.view&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;navigation&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;when&quot;</span>: <span class="string">&quot;scmProvider == git &amp;&amp; config.git-graph.sourceCodeProviderIntegrationLocation == &#x27;More Actions&#x27;&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;git-graph.view&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;inline&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 开发用的脚本</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;jest --verbose&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;test-and-report-coverage&quot;</span>: <span class="string">&quot;jest --verbose --coverage&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 运行依赖</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;iconv-lite&quot;</span>: <span class="string">&quot;0.5.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 开发依赖</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;typescript&quot;</span>: <span class="string">&quot;4.0.2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;uglify-js&quot;</span>: <span class="string">&quot;3.10.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;__metadata&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;438221f8-1107-4ccd-a6fe-f3b7fe0856b7&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;publisherId&quot;</span>: <span class="string">&quot;996496dc-099f-469d-b89c-0d7713179365&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;publisherDisplayName&quot;</span>: <span class="string">&quot;mhutchie&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="文章推荐"><a href="#文章推荐" class="headerlink" title="文章推荐"></a>文章推荐</h1><blockquote><p><a href="https://mp.weixin.qq.com/s?__biz=MzI0MzIyMDM5Ng==&mid=2649833093&idx=1&sn=27bc83c81db8490d52b169ab3ef3fa67&chksm=f175f446c6027d509e9ecdba48271efd51c3c057fd04d90fe8cee0720f01cf3e275d7b25df6c&mpshare=1&scene=23&srcid=0312NhWlH2sedoutfqkNpB7j&sharer_sharetime=1615557271958&sharer_shareid=ff6bb8cfd138294e80df076b8b76232d#rd">VS Code 插件开发入门教程</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VScode </tag>
            
            <tag> extension </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🎉IDEA魔改记录.</title>
      <link href="post/tools/IDEA/Modification/"/>
      <url>post/tools/IDEA/Modification/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2021-01-01 11:06:59 * @LastEditors: Weidows * @LastEditTime: 2021-03-23 09:01:02 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\tools\IDEA\Modification.md * @Description: * @!: *********************************************************************--><ul><li><a href="#maven">Maven</a><ul><li><a href="#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">环境变量</a></li><li><a href="#%E6%8D%A2%E9%98%BF%E9%87%8C%E6%BA%90">换阿里源</a></li><li><a href="#%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E8%B7%AF%E5%BE%84">本地仓库路径</a></li><li><a href="#%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8-maven">使用外部 Maven</a></li></ul></li></ul><h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><ul><li><p>在我发现 Scoop 安装和配置 Maven 有多么便利前,我是这样想的:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 发现 IDEA 是自带 Maven 的,没必要自己再安装一个,直接白嫖她的!</span><br><span class="line"></span><br><span class="line">- 路径是 `IDEA<span class="regexp">/plugins/m</span>aven<span class="regexp">/lib/m</span>aven3`</span><br></pre></td></tr></table></figure></li><li><p>后来发现随着 IDEA 更新,每次配置文件都需要改,环境变量也需要自己配,总之很麻烦…</p></li><li><p>于是,直接 Scoop 安装吧!</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install maven</span><br></pre></td></tr></table></figure></li><li><p>它抽离出 Maven 的内部用户配置文件<code>conf/settings.xml</code>在<code>persist</code>里面,不会被更新覆写.</p><blockquote><p><a href="https://github.com/Weidows/Programming-Configuration/blob/master/Maven/conf/settings.xml">附上已换源和配置本地仓库的配置文件</a></p></blockquote></li></ul><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><blockquote><p>参照<a href="../../../system/system_variable#Maven">💥 系统开发环境配置</a></p></blockquote><hr><h2 id="换阿里源"><a href="#换阿里源" class="headerlink" title="换阿里源"></a>换阿里源</h2><ul><li><p>找到 <code>~/conf/settings.xml</code></p><ul><li>修改为下面依赖:</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- mirror</span></span><br><span class="line"><span class="comment">  | Specifies a repository mirror site to use instead of a given repository. The repository that</span></span><br><span class="line"><span class="comment">  | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</span></span><br><span class="line"><span class="comment">  | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</span></span><br><span class="line"><span class="comment">  |</span></span><br><span class="line"><span class="comment">  &lt;mirror&gt;</span></span><br><span class="line"><span class="comment">    &lt;id&gt;mirrorId&lt;/id&gt;</span></span><br><span class="line"><span class="comment">    &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;</span></span><br><span class="line"><span class="comment">    &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span></span><br><span class="line"><span class="comment">    &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;</span></span><br><span class="line"><span class="comment">  &lt;/mirror&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 阿里云仓库 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 阿里云仓库2 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>mirrorId<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 中央仓库1 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;mirror&gt;</span></span><br><span class="line"><span class="comment">    &lt;id&gt;repo1&lt;/id&gt;</span></span><br><span class="line"><span class="comment">    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span></span><br><span class="line"><span class="comment">    &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span></span><br><span class="line"><span class="comment">    &lt;url&gt;http://repo1.maven.org/maven2/&lt;/url&gt;</span></span><br><span class="line"><span class="comment">  &lt;/mirror&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 中央仓库2 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;mirror&gt;</span></span><br><span class="line"><span class="comment">    &lt;id&gt;repo2&lt;/id&gt;</span></span><br><span class="line"><span class="comment">    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span></span><br><span class="line"><span class="comment">    &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span></span><br><span class="line"><span class="comment">    &lt;url&gt;http://repo2.maven.org/maven2/&lt;/url&gt;</span></span><br><span class="line"><span class="comment">  &lt;/mirror&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="本地仓库路径"><a href="#本地仓库路径" class="headerlink" title="本地仓库路径"></a>本地仓库路径</h2><ul><li><p>同上</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span> D:/Game/Scoop/persist/maven/conf/settings.xml<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="使用外部-Maven"><a href="#使用外部-Maven" class="headerlink" title="使用外部 Maven"></a>使用外部 Maven</h2><ul><li><p>IDEA 是自带捆绑 Maven 的,因为上面原因,我们使用 Scoop 又安装了一个,所以需要在 IDEA 里修改下设置</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/28/rkegM7GmIxwKtyT.png" alt="20210128033817" /></li></ul>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🐱‍JavaScript学习笔记-(贰)</title>
      <link href="post/Web/JavaScript/study-2/"/>
      <url>post/Web/JavaScript/study-2/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2020-12-30 18:09:38 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:22:44 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Web\JavaScript\study-2.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E7%BB%AD">续</a></li><li><a href="#%E5%AF%B9%E8%B1%A1">对象</a><ul><li><a href="#%E8%B0%83%E7%94%A8">调用</a></li><li><a href="#%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E8%B5%8B%E5%80%BC%E6%B7%BB%E5%8A%A0">对象属性赋值/添加</a></li><li><a href="#%E5%88%A0%E9%99%A4%E5%B1%9E%E6%80%A7">删除属性</a></li><li><a href="#%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E6%9C%89%E6%9F%90%E5%B1%9E%E6%80%A7">判断对象是否有某属性</a></li></ul></li><li><a href="#%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6">流程控制</a><ul><li><a href="#%E5%9F%BA%E6%9C%AC">基本</a></li><li><a href="#foreach-%E5%BE%AA%E7%8E%AF">forEach 循环</a></li><li><a href="#for-in-%E5%BE%AA%E7%8E%AF">for-in 循环</a></li><li><a href="#for-of-%E5%BE%AA%E7%8E%AF">for-of 循环</a></li></ul></li><li><a href="#map--set">Map &amp; Set</a><ul><li><a href="#map">Map</a></li><li><a href="#set">Set</a></li></ul></li><li><a href="#%E5%87%BD%E6%95%B0">函数</a><ul><li><a href="#%E5%AE%9A%E4%B9%89%E6%96%B9%E5%BC%8F%E4%B8%80">定义方式一</a></li><li><a href="#%E5%AE%9A%E4%B9%89%E6%96%B9%E5%BC%8F%E4%BA%8C">定义方式二</a></li><li><a href="#%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E9%97%AE%E9%A2%98">参数传递问题</a></li><li><a href="#%E5%8F%98%E9%87%8F%E4%BD%9C%E7%94%A8%E5%9F%9F">变量作用域</a></li><li><a href="#%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E5%87%BD%E6%95%B0">全局变量/函数</a></li><li><a href="#%E5%87%BD%E6%95%B0%E4%BC%A0%E9%80%92">函数传递</a></li><li><a href="#%E6%96%B9%E6%B3%95">方法</a></li></ul></li></ul><h1 id="续"><a href="#续" class="headerlink" title="续"></a>续</h1><blockquote><p>上接<a href="../study-1">🐱‍🏍JavaScript 学习笔记-(壹)</a></p></blockquote><hr><h1 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h1><ul><li>JavaScript 中的所有的键都是<code>字符串</code>，值是任意对象！</li><li>JavaScript 中定义对象用<code>&#123;&#125;</code>,定义数组用<code>[]</code>.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">  name: <span class="string">&quot;Tom&quot;</span>,</span><br><span class="line">  age: <span class="number">3</span>,</span><br><span class="line">  email: <span class="string">&quot;123456798@QQ.com&quot;</span>,</span><br><span class="line">  score: <span class="number">66</span>,</span><br><span class="line">  eat: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><ul><li>调用并不存在的属性,会提示 undefined,并不会报错.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(person.age); <span class="comment">// 3</span></span><br><span class="line"><span class="built_in">console</span>.log(person.work); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><hr><h2 id="对象属性赋值-添加"><a href="#对象属性赋值-添加" class="headerlink" title="对象属性赋值/添加"></a>对象属性赋值/添加</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">person.age = <span class="number">4</span>;</span><br><span class="line"><span class="built_in">console</span>.log(person.age); <span class="comment">// 4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加一个并没有的work属性.</span></span><br><span class="line">person.work = <span class="string">&quot;student&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(person.work); <span class="comment">// student</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//添加函数</span></span><br><span class="line">person.run = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// person.run() = function ()这样写不对</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;run&quot;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h2 id="删除属性"><a href="#删除属性" class="headerlink" title="删除属性"></a>删除属性</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> person.age;</span><br><span class="line"><span class="comment">// delete person.eat(); 这样写是错的</span></span><br><span class="line"><span class="keyword">delete</span> person.eat;</span><br><span class="line"></span><br><span class="line">person; <span class="comment">/**</span></span><br><span class="line"><span class="comment">&#123; name: &#x27;Tom&#x27;, </span></span><br><span class="line"><span class="comment">  email: &#x27;123456798@QQ.com&#x27;, </span></span><br><span class="line"><span class="comment">  score: 66, </span></span><br><span class="line"><span class="comment">  work: &#x27;student&#x27;, </span></span><br><span class="line"><span class="comment">  run: [λ] &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><hr><h2 id="判断对象是否有某属性"><a href="#判断对象是否有某属性" class="headerlink" title="判断对象是否有某属性"></a>判断对象是否有某属性</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;email&quot;</span> <span class="keyword">in</span> person); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;toString&quot;</span> <span class="keyword">in</span> person); <span class="comment">//true 继承自父类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断属性是否真正属于本对象</span></span><br><span class="line"><span class="built_in">console</span>.log(person.hasOwnProperty(<span class="string">&quot;toString&quot;</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><hr><h1 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h1><h2 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h2><ul><li><p>像是 if-else,for,while 跟 Java 一模一样.</p></li><li><p>遍历<code>对象用for-in</code>,遍历<code>数组用for-of</code></p><blockquote><p>具体分析参见 <a href="https://segmentfault.com/q/1010000006658882">javascript 总 for of 和 for in 的区别？</a></p></blockquote></li><li><p>初始化数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> age = [<span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>];</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="forEach-循环"><a href="#forEach-循环" class="headerlink" title="forEach 循环"></a>forEach 循环</h2><ul><li>内部是匿名函数.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">age.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">element, index, array</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// element: 指向当前元素的值</span></span><br><span class="line">  <span class="comment">// index:   指向当前索引</span></span><br><span class="line">  <span class="comment">// array:   指向Array对象本身</span></span><br><span class="line">  <span class="built_in">console</span>.log(element);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// [9, 8, 7, 6, 5, 4, 3, 2, 1]</span></span><br></pre></td></tr></table></figure><hr><h2 id="for-in-循环"><a href="#for-in-循环" class="headerlink" title="for-in 循环"></a>for-in 循环</h2><ul><li>与 Java 不同,java 给的是数组内指定元素的克隆体,JavaScript 给的是指定元素的索引下标.</li><li>跟 for 循环差别只在于数组大小是否可知.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> index <span class="keyword">in</span> age) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(age[index]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// [9, 8, 7, 6, 5, 4, 3, 2, 1]</span></span><br></pre></td></tr></table></figure><hr><h2 id="for-of-循环"><a href="#for-of-循环" class="headerlink" title="for-of 循环"></a>for-of 循环</h2><ul><li>与 Java 的 for-each 循环一样.</li><li>遍历数据而非 index.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> num <span class="keyword">of</span> age) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(num); <span class="comment">// 9, 8, 7, 6, 5, 4, 3, 2, 1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="Map-amp-Set"><a href="#Map-amp-Set" class="headerlink" title="Map &amp; Set"></a>Map &amp; Set</h1><h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><ul><li>通过 key-value 存储数据<ul><li>key 是字符串,value 是任意数据.</li><li>跟 Java 类似.</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var name = [&quot;Tom&quot;, &quot;Jack&quot;, &quot;haha&quot;],</span></span><br><span class="line"><span class="comment">//   score = [100, 90, 80];</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 适用于创建这种索引关系</span></span><br><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>([</span><br><span class="line">  [<span class="string">&quot;Tom&quot;</span>, <span class="number">100</span>],</span><br><span class="line">  [<span class="string">&quot;Jack&quot;</span>, <span class="number">90</span>],</span><br><span class="line">  [<span class="string">&quot;haha&quot;</span>, <span class="number">80</span>],</span><br><span class="line">]); <span class="comment">// Map &#123; &#x27;Tom&#x27; =&gt; 99, &#x27;Jack&#x27; =&gt; 90, &#x27;haha&#x27; =&gt; 80 &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取value</span></span><br><span class="line"><span class="built_in">console</span>.log(map.get(<span class="string">&quot;Tom&quot;</span>)); <span class="comment">// 100</span></span><br><span class="line"><span class="comment">// set() 新增或修改value</span></span><br><span class="line"><span class="built_in">console</span>.log(map.set(<span class="string">&quot;Tom&quot;</span>, <span class="number">99</span>).get(<span class="string">&quot;Tom&quot;</span>)); <span class="comment">// 99</span></span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line">map.delete(<span class="string">&quot;Tom&quot;</span>); <span class="comment">// true</span></span><br><span class="line"><span class="comment">// has</span></span><br><span class="line"><span class="built_in">console</span>.log(map.has(<span class="string">&quot;Tom&quot;</span>)); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(map); <span class="comment">// Map &#123; &#x27;Jack&#x27; =&gt; 90, &#x27;haha&#x27; =&gt; 80 &#125;</span></span><br></pre></td></tr></table></figure><hr><h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><ul><li>无序不重复,Set 和 Map 类似，Set 只存储 key，且 key 不重复。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> set = <span class="keyword">new</span> <span class="built_in">Set</span>([</span><br><span class="line">  [<span class="string">&quot;Tom&quot;</span>, <span class="number">100</span>],</span><br><span class="line">  [<span class="string">&quot;haha&quot;</span>, <span class="number">80</span>],</span><br><span class="line">  [<span class="string">&quot;haha&quot;</span>, <span class="number">80</span>],</span><br><span class="line">  [],</span><br><span class="line">  [],</span><br><span class="line">  <span class="number">1</span>,</span><br><span class="line">  <span class="number">1</span>,</span><br><span class="line">  <span class="string">&quot;1&quot;</span>,</span><br><span class="line">  <span class="number">2</span>,</span><br><span class="line">  <span class="literal">NaN</span>,</span><br><span class="line">  <span class="literal">NaN</span>,</span><br><span class="line">  &#123;&#125;,</span><br><span class="line">  &#123;&#125;,</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line">set; <span class="comment">/*</span></span><br><span class="line"><span class="comment">  Set &#123;</span></span><br><span class="line"><span class="comment">    [ &#x27;Tom&#x27;, 100 ], </span></span><br><span class="line"><span class="comment">    [ &#x27;haha&#x27;, 80 ], </span></span><br><span class="line"><span class="comment">    [ &#x27;haha&#x27;, 80 ], </span></span><br><span class="line"><span class="comment">    [], </span></span><br><span class="line"><span class="comment">    [],               // 即使数组内部内容一样或为空,也会视为不同key</span></span><br><span class="line"><span class="comment">    1, </span></span><br><span class="line"><span class="comment">    &#x27;1&#x27;,              // 数值与字符串不同</span></span><br><span class="line"><span class="comment">    2, </span></span><br><span class="line"><span class="comment">    NaN,              // Set 内 NaN===NaN</span></span><br><span class="line"><span class="comment">    &#123;&#125;, </span></span><br><span class="line"><span class="comment">    &#123;&#125;,               // 跟数组一样,视为不同对象</span></span><br><span class="line"><span class="comment">    ... &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">set.add(<span class="number">3</span>).delete(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">console</span>.log(set.has(<span class="number">3</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><hr><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>如果没有执行 return，函数执行完也会返回结果，结果是 <code>undefined</code></p><h2 id="定义方式一"><a href="#定义方式一" class="headerlink" title="定义方式一"></a>定义方式一</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">abs</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> ret;</span><br><span class="line">  <span class="keyword">if</span> (x &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">    ret = x;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ret = -x;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(abs(<span class="number">-10</span>)); <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><hr><h2 id="定义方式二"><a href="#定义方式二" class="headerlink" title="定义方式二"></a>定义方式二</h2><ul><li><p>好怪哦,不过跟上面等价(推荐用上面那种)</p></li><li><p>这是 Js 一个特性,函数体与函数名分离,函数名实际上就是那个变量<code>abs</code>,它指向后面的函数体</p><ul><li>关键字<code>function</code>是用来定义函数体的,<code>var</code>用来定义变量</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> ret;</span><br><span class="line">  <span class="keyword">if</span> (x &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">    ret = x;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ret = -x;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ret;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(abs(<span class="number">-10</span>)); <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><ul><li>function(x){…}是一个匿名函数,把结果赋值给 abs，通过 abs 间接取函数返回值.</li></ul><hr><h2 id="参数传递问题"><a href="#参数传递问题" class="headerlink" title="参数传递问题"></a>参数传递问题</h2><ul><li><p>利用关键字 argument ,它是函数传入的参数数组</p></li><li><p>比如传入的参数为空或者非法.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">arguments</span>.length === <span class="number">0</span>) <span class="built_in">console</span>.log(<span class="string">&quot;无参数传入.&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> x != <span class="string">&quot;number&quot;</span>) <span class="keyword">throw</span> <span class="string">&quot;参数不对.&quot;</span>;</span><br><span class="line">  <span class="keyword">let</span> ret;</span><br><span class="line">  <span class="keyword">if</span> (x &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">    ret = x;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ret = -x;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ret;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 无参数传入.</span></span><br><span class="line"><span class="comment"> * NaN</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(abs());</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 参数不对.</span></span><br><span class="line"><span class="comment"> * 函数和程序直接停止,&quot;参数不对&quot;是报错,不是输出</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(abs(<span class="string">&quot;123&quot;</span>));</span><br></pre></td></tr></table></figure></li><li><p>有时传入的参数不定,缺失的话可以通过上面方法解决,如果多余呢?</p><ul><li>通过<code>...</code>解决(Java 也有类似的)</li><li>可变参数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">a, b, ...c</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(a + b);</span><br><span class="line">  <span class="built_in">console</span>.log(c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 123456</span></span><br><span class="line"><span class="comment"> * [ 7, 8, 9 ]</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">func(<span class="string">&quot;123&quot;</span>, <span class="string">&quot;456&quot;</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>);</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h2><ul><li><p>跟 Java 一模一样.</p></li><li><p>比如</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(x); <span class="comment">// 2</span></span><br><span class="line">  &#125;</span><br><span class="line">  B();</span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(x); <span class="comment">// 1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">A();</span><br></pre></td></tr></table></figure><hr></li><li><p>自动提升作用域</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="string">&quot;x&quot;</span> + y;</span><br><span class="line"><span class="built_in">console</span>.log(x); <span class="comment">// xundefined</span></span><br><span class="line"><span class="keyword">var</span> y = <span class="string">&quot;y&quot;</span>;</span><br></pre></td></tr></table></figure><ul><li>相当于下面的,程序自动提升了 y 的定义,但无法提升 y 的赋值,所以 x 也无法定义.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> y;</span><br><span class="line"><span class="keyword">var</span> x = <span class="string">&quot;x&quot;</span> + y;</span><br><span class="line"><span class="built_in">console</span>.log(x); <span class="comment">// xundefined</span></span><br><span class="line">y = <span class="string">&quot;y&quot;</span>;</span><br></pre></td></tr></table></figure><hr></li><li><p>另外,<code>const</code>也是 ES6 才引入的</p><ul><li>定义常量,不可更改.</li></ul><hr></li><li><p>局部作用域</p><ul><li>ES6 引入,建议用<code>let</code>定义局部作用域的变量以免冲突.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> index_1 = <span class="number">0</span>; index_1 &lt; <span class="number">10</span>; index_1++) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(index_1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> index_2 = <span class="number">0</span>; index_2 &lt; <span class="number">10</span>; index_2++) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(index_2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(index_1); <span class="comment">// 10</span></span><br><span class="line"><span class="built_in">console</span>.log(index_2); <span class="comment">// index_1 is not defined</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="全局变量-函数"><a href="#全局变量-函数" class="headerlink" title="全局变量/函数"></a>全局变量/函数</h2><ul><li><p>所有的全局变量/函数是绑定在 windows 对象上的(浏览器中,如果是 node 中就不行)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//全局变量</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.x);</span><br><span class="line">alert(x);</span><br><span class="line"><span class="built_in">window</span>.alert(x);</span><br></pre></td></tr></table></figure></li><li><p>这就会导致一个问题:多 Js 文件执行时使用了同名的全局变量会产生冲突</p><ul><li>为了解决这冲突,我们把代码放进自己的命名空间中</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局命名空间</span></span><br><span class="line"><span class="keyword">var</span> Weidows = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用命名空间定义全局变量(实际概念就是套了层壳)</span></span><br><span class="line">Weidows.name = <span class="string">&quot;Weidows&quot;</span>;</span><br><span class="line">Weidows.age = <span class="string">&quot;21&quot;</span>;</span><br></pre></td></tr></table></figure><ul><li>后面 <code>JQuery</code> 就是做这个用的.</li></ul></li></ul><hr><h2 id="函数传递"><a href="#函数传递" class="headerlink" title="函数传递"></a>函数传递</h2><ul><li><p>通过<a href="#%E5%AE%9A%E4%B9%89%E6%96%B9%E5%BC%8F%E4%BA%8C">定义方法二</a>这种,了解到函数和变量实际是互通的</p></li><li><p>与 Java 不同,像是 C 里面的函数指针,函数名与函数体是分离的.</p></li><li><p>所以以下赋值成立</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func_1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;这里是func.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> func_2 = func_1;</span><br><span class="line">func_2(); <span class="comment">// 这里是func.</span></span><br></pre></td></tr></table></figure><hr><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><ul><li><p>定义在对象里的函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Weidows = &#123;</span><br><span class="line">  name: <span class="string">&quot;Weidows&quot;</span>,</span><br><span class="line">  birth: <span class="number">2000</span>,</span><br><span class="line">  age: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear();</span><br><span class="line">    <span class="keyword">return</span> now - <span class="built_in">this</span>.birth;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * [λ: age]</span></span><br><span class="line"><span class="comment"> * 注意调用方法的格式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(Weidows.age); <span class="comment">// [λ: age]</span></span><br><span class="line"><span class="built_in">console</span>.log(Weidows.age()); <span class="comment">// 21</span></span><br></pre></td></tr></table></figure></li><li><p>利用<code>this</code>和<code>apply()</code>实现函数和方法的恰当调用.</p><ul><li>JS 中可以通过<code>apply()</code>控制 this 的指向</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getAge</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear();</span><br><span class="line">  <span class="keyword">return</span> now - <span class="built_in">this</span>.birth;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Weidows_1 = &#123;</span><br><span class="line">  name: <span class="string">&quot;Weidows&quot;</span>,</span><br><span class="line">  birth: <span class="number">2000</span>,</span><br><span class="line">  <span class="comment">// age: getAge(),  这样写实质age是getAge()执行后的返回值</span></span><br><span class="line">  age: getAge, <span class="comment">// 这样含义是age指向getAge()函数体</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Weidows_2 = &#123;</span><br><span class="line">  name: <span class="string">&quot;Weidows&quot;</span>,</span><br><span class="line">  birth: <span class="number">2000</span>,</span><br><span class="line">  age: getAge,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//执行</span></span><br><span class="line"><span class="built_in">console</span>.log(Weidows_1.age()); <span class="comment">// 21</span></span><br><span class="line"><span class="built_in">console</span>.log(Weidows_2.age()); <span class="comment">// 21</span></span><br><span class="line"><span class="comment">// console.log(getAge()); // Cannot read property &#x27;birth&#x27; of undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(getAge.apply(Weidows_1, [])); <span class="comment">// 21</span></span><br><span class="line"><span class="built_in">console</span>.log(getAge.apply(Weidows_2, [])); <span class="comment">// 21</span></span><br><span class="line"><span class="comment">// 这里apply含义就是调用getAge()函数,并让this指向Weidows_2对象,传入getAge的参数在[]数组里,为空.</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>😍Weidowsの成长路线.</title>
      <link href="post/others/LearnWay/"/>
      <url>post/others/LearnWay/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2020-12-30 11:42:22 * @LastEditors: Weidows * @LastEditTime: 2021-04-17 21:13:11 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\others\LearnWay.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E7%94%B3%E6%98%8E"><code>申明</code></a></li><li><a href="#cc">C/C++</a><ul><li><a href="#%E5%85%A5%E9%97%A8%E8%AF%BE%E7%A8%8B">入门课程</a></li><li><a href="#%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B">进阶课程</a></li><li><a href="#%E9%93%BE%E8%A1%A8">链表</a></li></ul></li><li><a href="#java">Java</a><ul><li><a href="#%E5%85%A5%E9%97%A8">入门</a></li><li><a href="#%E8%BF%9B%E9%98%B6">进阶</a></li><li><a href="#%E5%B0%B1%E4%B8%9A%E7%BA%A7">就业级</a></li><li><a href="#%E9%98%B6%E6%AE%B5%E5%9B%9E%E9%A1%BE">阶段回顾</a></li><li><a href="#%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95-junit">单元测试 Junit</a></li><li><a href="#%E6%96%87%E6%A1%A3%E6%B3%A8%E9%87%8A">文档注释</a></li><li><a href="#lambda-%E8%A1%A8%E8%BE%BE%E5%BC%8F">Lambda 表达式</a></li><li><a href="#%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B">网络编程</a></li><li><a href="#url-%E7%B1%BB">URL 类</a></li></ul></li><li><a href="#%E5%89%8D%E7%AB%AF">前端</a><ul><li><a href="#htmlcss">HTML/CSS</a><ul><li><a href="#%E5%85%A5%E9%97%A8-1">入门</a></li><li><a href="#%E8%BF%9B%E9%98%B6-1">进阶</a></li><li><a href="#markdown">Markdown</a></li></ul></li><li><a href="#javascript">JavaScript</a><ul><li><a href="#%E8%BF%9B%E9%98%B6-2">进阶</a></li></ul></li><li><a href="#%E5%BC%82%E6%AD%A5">异步</a></li></ul></li><li><a href="#%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8">工具使用</a><ul><li><a href="#git">Git</a><ul><li><a href="#git-push">Git push</a></li><li><a href="#%E5%A4%9A%E8%BF%9C%E7%A8%8B">多远程</a></li></ul></li><li><a href="#vscode">VScode</a><ul><li><a href="#%E4%B8%BB%E9%A2%98%E9%80%82%E9%85%8D">主题适配</a></li><li><a href="#%E6%8F%92%E4%BB%B6%E5%8C%85%E5%BC%80%E5%8F%91%E5%8F%91%E5%B8%83">插件(包)开发/发布</a></li><li><a href="#emmet">Emmet</a></li></ul></li><li><a href="#docker">Docker</a></li><li><a href="#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F">正则表达式</a></li></ul></li><li><a href="#%E6%B3%9B%E5%9F%9F">泛域</a><ul><li><a href="#2038-%E9%97%AE%E9%A2%98">2038 问题</a></li><li><a href="#%E8%87%AA%E4%BF%A1">自信</a></li></ul></li><li><a href="#%E8%AE%BE%E8%AE%A1">设计</a></li><li><a href="#%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B">理论课程</a><ul><li><a href="#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F">操作系统</a><ul><li><a href="#%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8Bcpu-%E6%A0%B8%E5%BF%83%E5%B9%B6%E8%A1%8C%E5%B9%B6%E5%8F%91">进程,线程,CPU 核心,并行,并发</a></li></ul></li><li><a href="#%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86">编译原理</a></li><li><a href="#%E5%8D%95%E7%89%87%E6%9C%BA">单片机</a></li><li><a href="#%E6%95%B0%E6%8D%AE%E5%BA%93">数据库</a><ul><li><a href="#mysql">MySQL</a></li></ul></li><li><a href="#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C">计算机网络</a></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="申明"><a href="#申明" class="headerlink" title="申明"></a><code>申明</code></h1><ul><li><p>注意最好不要<code>完全照着这个学</code>.</p><ul><li><p>有些指引确实有参考价值,需要结合自身能力和需求体系学习.</p></li><li><p>这个只是个人路线,并非普遍最优解 (况且很多技术<code>已经过时</code>了)</p></li></ul><hr></li><li><p>为什么写这篇文章?</p><ul><li><p>我的学习平台比较多,涉猎范围在<code>单方面无法收藏齐全</code>,这个文章算是概览,方便寻找.</p><ul><li>比如我在中国大学 MOOC 起步,在 B 站刷视频课程,在 CSDN 水技术资料,在 github 爬高星项目,在逼乎看技术走向方面的回答.</li></ul></li><li><p><code>此文章只做推荐,不牵扯任何利益关系.</code></p></li></ul><hr></li><li><p>注意一个问题,<code>学习编程是非线性成长</code>,也就是说在能看懂的情况下都可以学</p><ul><li><p>想速成的话往往效率和方式比较低下,注意规避.</p></li><li><p>一个技术很大可能会牵扯其他多个技术栈,能力提升一般呈辐射性网状的.</p></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="C-C"><a href="#C-C" class="headerlink" title="C/C++"></a>C/C++</h1><ul><li><p>个人比较喜欢把 C 和 C++放在一起,虽然 C++并没学过(不过倒是能看懂).</p></li><li><p>全程学的<code>翁凯</code>老师的,讲的很好.</p></li></ul><hr><h2 id="入门课程"><a href="#入门课程" class="headerlink" title="入门课程"></a>入门课程</h2><blockquote><p><a href="https://www.icourse163.org/course/0809ZJU007A-199001?outvandor=zw_mooc_pclszykctj_">程序设计入门——C 语言</a></p></blockquote><hr><h2 id="进阶课程"><a href="#进阶课程" class="headerlink" title="进阶课程"></a>进阶课程</h2><blockquote><p><a href="https://www.icourse163.org/course/ZJU-200001">C 语言程序设计进阶</a></p></blockquote><hr><h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><blockquote><p><a href="https://www.bilibili.com/video/BV1Rb411F738">1 个小时学会单链表，C 语言数据结构专题</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><ul><li>靠翁凯老师入的门,之后又深挖了其他课程.</li><li>在这里推荐下老师们吧,不是广告,只是很感激<code>领路人</code>.<ul><li><a href="https://www.icourse163.org/u/wengkai?userId=318013">翁凯</a></li><li><a href="https://space.bilibili.com/95256449">狂神-秦疆</a></li></ul></li></ul><hr><h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><blockquote><p><a href="https://www.icourse163.org/course/0809ZJU013-1001541001?outvandor=zw_mooc_pclszykctj_">零基础学 Java 语言</a></p></blockquote><hr><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><blockquote><p><a href="https://www.icourse163.org/course/0809ZJU012-1001542001?outvandor=zw_mooc_pclszykctj_">面向对象程序设计——Java 语言</a></p></blockquote><hr><h2 id="就业级"><a href="#就业级" class="headerlink" title="就业级"></a>就业级</h2><blockquote><p><a href="https://www.bilibili.com/video/BV1CJ411m7gg">求知讲堂零基础 Java 入门编程视频教程 学完可就业</a></p></blockquote><ul><li>个人记录,<code>不推荐</code>再学习!已过时,而且讲师…不太专业</li></ul><hr><h2 id="阶段回顾"><a href="#阶段回顾" class="headerlink" title="阶段回顾"></a>阶段回顾</h2><blockquote><p><a href="https://www.bilibili.com/video/BV1MJ411v7tJ?from=search&seid=6413568957300849811">【狂神说 Java】JavaSE 阶段回顾总结</a></p></blockquote><ul><li>很不错的复习!</li></ul><hr><h2 id="单元测试-Junit"><a href="#单元测试-Junit" class="headerlink" title="单元测试 Junit"></a>单元测试 Junit</h2><blockquote><p><a href="https://mp.weixin.qq.com/s?__biz=MzIxNzQwNjM3NA==&mid=2247490821&idx=1&sn=855b8ede1287dd95787a010c3245c8e7&chksm=97fb13cca08c9ada0af423bc4e94ba359d810c32c23ab2a546abaaf30e152c92b826efc1c01f&xtrack=1&scene=90&subscene=93&sessionid=1609292024&clicktime=1609292488&enterid=1609292488&ascene=56&devicetype=android-29&version=27001637&nettype=WIFI&abtest_cookie=AAACAA==&lang=zh_CN&exportkey=Af+uVL395LWe0DRJ/c8R/bA=&pass_ticket=6zFqmo//h+276SfQuaklQyBIbfcB0rcAk2nXRgO9SV/EeTr8pGbFXbfRhR/DXMx/&wx_header=1">JUnit：别再用 main 方法测试了，好吗？</a></p></blockquote><hr><h2 id="文档注释"><a href="#文档注释" class="headerlink" title="文档注释"></a>文档注释</h2><blockquote><p><a href="https://blog.csdn.net/lsy0903/article/details/89893934">Java 文档注释用法+JavaDoc 的使用详解</a></p></blockquote><hr><h2 id="Lambda-表达式"><a href="#Lambda-表达式" class="headerlink" title="Lambda 表达式"></a>Lambda 表达式</h2><blockquote><p><a href="https://www.runoob.com/java/java8-lambda-expressions.html">Java Lambda 表达式</a></p></blockquote><hr><h2 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h2><blockquote><p><a href="https://www.bilibili.com/video/BV1LJ411z7vY">【狂神说 Java】网络编程实战讲解</a></p></blockquote><hr><h2 id="URL-类"><a href="#URL-类" class="headerlink" title="URL 类"></a>URL 类</h2><blockquote><p><a href="https://www.cnblogs.com/kissdodog/archive/2013/04/22/3034898.html">System.Uri 类 - 获取 Url 的各种属性，文件名，参数，域名，端口等等</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><h2 id="HTML-CSS"><a href="#HTML-CSS" class="headerlink" title="HTML/CSS"></a>HTML/CSS</h2><ul><li>一般这俩是合在一起学的,相关性较强.</li><li>都是<code>前端基础</code>,但是后端也必须要会.</li></ul><hr><h3 id="入门-1"><a href="#入门-1" class="headerlink" title="入门"></a>入门</h3><blockquote><p><a href="https://www.bilibili.com/video/BV14J4114768">黑马程序员 pink 老师前端入门视频教程 HTML5+CSS3+移动端布局-flex 布局 rem 布局响应式布局摹客蓝湖使用-简单有趣好玩</a></p></blockquote><ul><li>全网最知名的 HTML/css 基础讲师-黑马程序员 pink,应该没有之一了(至少到 2020 为止)<ul><li>虽然他说话有些风骚</li></ul></li><li>视频贼多,我没看完,把基础趟完跑路.</li></ul><hr><h3 id="进阶-1"><a href="#进阶-1" class="headerlink" title="进阶"></a>进阶</h3><blockquote><p><a href="https://www.bilibili.com/video/BV1YJ411a7dy">【狂神说 Java】CSS3 最新教程快速入门通俗易懂</a></p></blockquote><ul><li>一个字,很不错!</li></ul><h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><ul><li><p>这个没有什么特效课程,需要循序渐进的使用 markdown 记笔记,把一些关键词用熟悉,渐渐地文章就变得好起来了</p></li><li><p>markdown 这种<code>归档式</code>,<code>目录式</code>以及<code>层级递进式</code>的笔记记录方式,能很好地<code>锻炼表达思维</code>,而且对学习效果有显著提升.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><h3 id="进阶-2"><a href="#进阶-2" class="headerlink" title="进阶"></a>进阶</h3><blockquote><p><a href="https://www.bilibili.com/video/BV1JJ41177di">【狂神说 Java】JavaScript 最新教程通俗易懂</a></p></blockquote><ul><li><p>因为有 Java 基础,入门阶段直接过去了.</p></li><li><p>狂神老师出的都很…上头!</p><ul><li>就是那个味!</li></ul></li></ul><hr><h2 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h2><blockquote><p><a href="https://segmentfault.com/a/1190000007535316">理解 JavaScript 的 async/await</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h1><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><ul><li><p>这应该是所有程序员必会的技能了,没有保留的余地.</p></li><li><p>学 Git 嘛,说来也不用学,装上 git 之后结合 <code>github</code> 摸索摸索就会了.</p></li><li><p>前前后后用过的 git 可视化程序有<code>SourceTree</code>,<code>gitkraken</code>,<code>github</code>,<code>vscode</code>等等…</p></li><li><p>要是说建议路线嘛,推荐先入手<code>vscode</code>,特容易上手,然后是<code>SourceTree</code>,这个可以对很多深入功能有较强的理解,反正我最后用的是<code>VScode+gitgraph插件</code>,足够了.</p></li></ul><hr><h3 id="Git-push"><a href="#Git-push" class="headerlink" title="Git push"></a>Git push</h3><blockquote><p><a href="https://www.cnblogs.com/qianqiannian/p/6008140.html">Git push 常见用法</a></p></blockquote><hr><h3 id="多远程"><a href="#多远程" class="headerlink" title="多远程"></a>多远程</h3><blockquote><p><a href="https://segmentfault.com/a/1190000011294144">一个项目 push 到多个远程 Git 仓库</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h2 id="VScode"><a href="#VScode" class="headerlink" title="VScode"></a>VScode</h2><h3 id="主题适配"><a href="#主题适配" class="headerlink" title="主题适配"></a>主题适配</h3><blockquote><p><a href="https://blog.csdn.net/weixin_45599654/article/details/109306462">VScode 自定义主题 界面 UI 配色 语法配色</a></p></blockquote><hr><h3 id="插件-包-开发-发布"><a href="#插件-包-开发-发布" class="headerlink" title="插件(包)开发/发布"></a>插件(包)开发/发布</h3><blockquote><p><a href="https://segmentfault.com/a/1190000020435312">VScode 插件开发（五）插件包</a></p></blockquote><hr><h3 id="Emmet"><a href="#Emmet" class="headerlink" title="Emmet"></a>Emmet</h3><blockquote><p><a href="https://blog.csdn.net/qq_33744228/article/details/80910377">【Emmet】HTML 速写之 Emmet 语法规则</a></p></blockquote><hr><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><blockquote><p><a href="https://www.bilibili.com/video/BV1vD4y1X7ce">初探 Docker</a></p></blockquote><hr><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><blockquote><p><a href="https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md">ziishaned/learn-regex</a></p></blockquote><ul><li>标星超高的项目,必须一刷!</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="泛域"><a href="#泛域" class="headerlink" title="泛域"></a>泛域</h1><h2 id="2038-问题"><a href="#2038-问题" class="headerlink" title="2038 问题"></a>2038 问题</h2><blockquote><p><a href="https://baike.baidu.com/item/2038%E5%B9%B4%E9%97%AE%E9%A2%98/10578442?fr=aladdin">2038 年问题</a></p></blockquote><ul><li>问题不算大,Windows 平台与 linux 平台都有相应的推迟解决方案了.</li><li>Linux 推到 2486 年了,还早了去了.</li></ul><hr><h2 id="自信"><a href="#自信" class="headerlink" title="自信"></a>自信</h2><blockquote><p><a href="https://blog.csdn.net/m0_46163918/article/details/114883501?utm_source=app&app_version=4.5.4">上班 4 年，现在却只会调工具包，AI 程序员崩溃了</a></p></blockquote><ul><li><p>随着年龄的增大,越发发现自信的重要性.</p></li><li><p>初中时就被体育老师洗脑,直到现在仍然感觉带有自信头衔的人有独特的美丽.</p></li><li><p>当然,自信不是自负,是<code>合理的外向+阳光+乐观</code>的态度,在社交,职场和情感方面都有一定作用.</p></li><li><p>我发现我好想也有点文中提到的“冒名顶替综合征”,文中也有我认为很好的解决办法:</p><ol><li>多多交流和分享</li><li>记录做过的事情</li><li>保持学习者心态</li></ol></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h1><ul><li><p>跳到新文章吧,写在这太长.</p><blockquote><p><a href="../../design/UI-design">🙌UI 平面设计.</a></p></blockquote></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="理论课程"><a href="#理论课程" class="headerlink" title="理论课程"></a>理论课程</h1><h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><h3 id="进程-线程-CPU-核心-并行-并发"><a href="#进程-线程-CPU-核心-并行-并发" class="headerlink" title="进程,线程,CPU 核心,并行,并发"></a>进程,线程,CPU 核心,并行,并发</h3><ul><li>总结了一下:<blockquote><p><a href="../../system/process-thread">🤷‍♂️ 进程,线程,CPU 核心,并行,并发大杂碎!</a></p></blockquote></li></ul><hr><h2 id="编译原理"><a href="#编译原理" class="headerlink" title="编译原理"></a>编译原理</h2><blockquote><p><a href="https://blog.csdn.net/qq_39384184/article/details/86037568">编译原理：总结</a></p></blockquote><ul><li>结合其他视频或者课程阅读,效果更好些.</li></ul><hr><h2 id="单片机"><a href="#单片机" class="headerlink" title="单片机"></a>单片机</h2><blockquote><p><a href="https://www.bilibili.com/video/BV1sE411L7j5">【一天掌握 51 单片机基础】<em>单片机原理及应用</em>东北大学（高宏亮 主讲）</a></p></blockquote><ul><li>比较通俗易懂,课程/课件质量相当高.</li></ul><hr><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><blockquote><p><a href="https://www.bilibili.com/video/BV1NJ411J79W">【狂神说 Java】MySQL 最新教程通俗易懂</a></p></blockquote><blockquote><p><a href="https://blog.csdn.net/weixin_45483328/article/details/113759286?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control&dist_request_id=&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control">狂神说数据库笔记</a></p></blockquote><ul><li>要点清晰,能很快速的顺下来需要掌握的东西.</li></ul><hr><h2 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h2><blockquote><p><a href="https://blog.csdn.net/hexf9632/article/details/93469788">IP 地址，子网掩码、默认网关，DNS 服务器之间的联系与区别</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> 成长路线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>💢Windows中一些奇奇怪怪的操作.</title>
      <link href="post/system/Windows/"/>
      <url>post/system/Windows/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2020-12-28 13:49:19 * @LastEditors: Weidows * @LastEditTime: 2021-04-02 09:42:23 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\system\Windows.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E7%AA%97%E5%8F%A3%E9%80%B8%E5%87%BA">窗口逸出</a><ul><li><a href="#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">解决方案</a></li></ul></li><li><a href="#%E6%89%93%E5%BC%80%E7%BB%88%E7%AB%AF">打开终端</a><ul><li><a href="#%E6%96%B9%E6%B3%95%E4%B8%80">方法一</a></li><li><a href="#%E6%96%B9%E6%B3%95%E4%BA%8C">方法二</a></li><li><a href="#%E6%96%B9%E6%B3%95%E4%B8%89">方法三</a></li></ul></li></ul><h1 id="窗口逸出"><a href="#窗口逸出" class="headerlink" title="窗口逸出"></a>窗口逸出</h1><ul><li><p>之前弄了个副屏,有些应用窗口在副屏中打开</p></li><li><p>于是,在不装副屏时,那些窗口打开时还是在那个位置,而且摸不到他们没法拖过来…</p></li></ul><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ul><li><p><kbd>alt</kbd> + <kbd>Tab</kbd> 切换到那个窗口.</p></li><li><p><kbd>alt</kbd> + <kbd>space</kbd> 切出窗口菜单,选择最大化</p></li><li><p>=&gt; <code>解决</code>!</p></li></ul><h1 id="打开终端"><a href="#打开终端" class="headerlink" title="打开终端"></a>打开终端</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p><code>Windows + R</code>,输入 cmd,回车就出来了.</p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>在文件夹空白处按住<code>shift + 右键</code>,会出来<code>在此处打开PowerShell窗口</code></p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/03/4HflJZPK8W95i1A.png" alt="20210103142309" /><h2 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h2><p>直接在路径栏中输入 cmd 回车.</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/03/jvCbW19uq6ohExN.png" alt="20210103142458" />]]></content>
      
      
      <categories>
          
          <category> system </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机系统 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🐱‍🏍JavaScript学习笔记-(壹)</title>
      <link href="post/Web/JavaScript/study-1/"/>
      <url>post/Web/JavaScript/study-1/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2020-12-20 21:26:24 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:22:34 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Web\JavaScript\study-1.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%80%9F%E9%89%B4%E6%8A%84%E8%A2%AD-2333">借鉴(抄袭 2333)</a></li><li><a href="#%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB">前端知识体系</a><ul><li><a href="#css-%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8">css 预处理器</a></li><li><a href="#javascript-%E6%A1%86%E6%9E%B6">JavaScript 框架</a></li><li><a href="#ui-%E6%A1%86%E6%9E%B6">UI 框架</a></li><li><a href="#javascript-%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7">JavaScript 构建工具</a></li><li><a href="#%E4%B8%89%E7%AB%AF%E7%BB%9F%E4%B8%80">三端统一</a></li></ul></li><li><a href="#hello-world">Hello-World</a><ul><li><a href="#%E5%86%85%E9%83%A8%E5%BC%80%E6%92%B8">内部开撸</a></li><li><a href="#%E5%A4%96%E9%83%A8%E5%BC%95%E5%85%A5">外部引入</a></li><li><a href="#type">type</a></li><li><a href="#demo">demo</a></li></ul></li><li><a href="#%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B0%83%E8%AF%95">浏览器调试</a></li><li><a href="#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B">数据类型</a><ul><li><a href="#%E5%8F%98%E9%87%8F">变量</a></li><li><a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2">字符串</a></li><li><a href="#%E5%B8%83%E5%B0%94%E5%80%BC">布尔值</a></li><li><a href="#%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97">逻辑运算</a></li><li><a href="#%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6">比较运算符</a></li><li><a href="#%E6%B5%AE%E7%82%B9%E6%95%B0">浮点数</a></li><li><a href="#null--undefined">null &amp;&amp; undefined</a></li><li><a href="#%E6%95%B0%E7%BB%84">数组</a></li><li><a href="#%E5%AF%B9%E8%B1%A1">对象</a></li><li><a href="#%E4%B8%A5%E6%A0%BC%E6%A3%80%E6%9F%A5%E6%A8%A1%E5%BC%8F">严格检查模式</a></li></ul></li><li><a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2-1">字符串</a><ul><li><a href="#%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6">转义字符</a></li><li><a href="#%E5%A4%9A%E8%A1%8C%E5%AD%97%E7%AC%A6%E4%B8%B2">多行字符串</a></li><li><a href="#%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2">模板字符串</a></li><li><a href="#%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8">函数调用</a></li><li><a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%8F%AF%E5%8F%98%E6%80%A7">字符串的可变性</a></li><li><a href="#%E5%A4%A7%E5%B0%8F%E5%86%99%E8%BD%AC%E6%8D%A2">大小写转换</a></li><li><a href="#%E5%AD%90%E4%B8%B2">子串</a></li></ul></li><li><a href="#%E6%95%B0%E7%BB%84-1">数组</a><ul><li><a href="#%E9%95%BF%E5%BA%A6">长度</a></li><li><a href="#indexof">indexOf()</a></li><li><a href="#slice">slice()</a></li><li><a href="#pushpopunshiftshift">push(),pop(),unshift(),shift()</a></li><li><a href="#reversesort">reverse(),sort()</a></li><li><a href="#concat">concat()</a></li><li><a href="#join">join()</a></li><li><a href="#%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84">多维数组</a></li><li><a href="#fill">fill()</a></li></ul></li></ul><h1 id="借鉴-抄袭-2333"><a href="#借鉴-抄袭-2333" class="headerlink" title="借鉴(抄袭 2333)"></a>借鉴(抄袭 2333)</h1><blockquote><p><a href="https://blog.csdn.net/pan_h1995/article/details/105974385">【狂神说 Java】JavaScript 学习笔记</a></p></blockquote><h1 id="前端知识体系"><a href="#前端知识体系" class="headerlink" title="前端知识体系"></a>前端知识体系</h1><p>想要成为真正的“互联网 Java 全栈工程师”还有很长的一段路要走，其中前端是绕不开的一门必修课。</p><ul><li><p>HTML（结构）：决定网页的结构和内容</p></li><li><p>CSS（表现）：设定网页的表现样式。</p></li><li><p>JavaScript（行为）：是一种弱类型脚本语言，其源码不需经过编译，而是由浏览器解释运行，用于控制网页的行为.</p><hr></li></ul><h2 id="css-预处理器"><a href="#css-预处理器" class="headerlink" title="css 预处理器"></a>css 预处理器</h2><ul><li><p>SASS：基于 Ruby ，通过服务端处理，功能强大。解析效率高。需要学习 Ruby 语言，上手难度高于 LESS。</p></li><li><p>LESS：基于 NodeJS，通过客户端处理，使用简单。功能比 SASS 简单，解析效率也低于 SASS，但在实际开发中足够了，所以如果我们后台人员如果需要的话，<code>建议使用 LESS。</code></p><hr></li></ul><h2 id="JavaScript-框架"><a href="#JavaScript-框架" class="headerlink" title="JavaScript 框架"></a>JavaScript 框架</h2><ul><li><p><code>JQuery</code>:大家熟知的 JavaScript 库，优点就是简化了 DOM 操作，缺点就是 DOM 操作太频繁，影响前端性能；在前端眼里使用它<code>仅仅是为了兼容 IE6，7，8</code></p></li><li><p><code>Angular</code>:Google 收购的前端框架，由一群 Java 程序员开发，其特点是将后台的 MVC 模式搬到了前端并增加了模块化开发的理念，与微软合作，采用了 TypeScript 语法开发；对后台程序员友好，对前端程序员不太友好；最大的缺点是版本迭代不合理（如 1 代–&gt;2 代，除了名字，基本就是两个东西</p></li><li><p><code>React</code>:Facebook 出品，一款高性能的 JS 前端框架；特点是提出了新概念 【虚拟 DOM】用于减少真实 DOM 操作，在内存中模拟 DOM 操作，有效的提升了前端渲染效率；缺点是使用复杂，因为需要额外学习一门【JSX】语言；</p></li><li><p><code>Vue</code>:一款渐进式 JavaScript 框架，所谓渐进式就是逐步实现新特性的意思，如实现模块化开发、路由、状态管理等新特性。其特点是综合了 Angular（模块化）和 React(虚拟 DOM) 的优点；</p></li><li><p><code>Axios</code>:前端通信框架；因为 Vue 的边界很明确，就是为了处理 DOM，所以并不具备通信能力，此时就需要额外使用一个通信框架与服务器交互；当然也可以直接选择使用 jQuery 提供的 AJAX 通信功能</p><hr></li></ul><h2 id="UI-框架"><a href="#UI-框架" class="headerlink" title="UI 框架"></a>UI 框架</h2><ul><li><p><code>Ant-Design</code>：阿里巴巴出品，基于 React 的 UI 框架</p></li><li><p><code>ElementUI、iview、ice</code>：饿了么出品，基于 Vue 的 UI 框架</p></li><li><p><code>BootStrap</code>：Teitter 推出的一个用于前端开发的开源工具包</p></li><li><p><code>AmazeUI</code>：又叫“妹子 UI”，一款 HTML5 跨屏前端框架</p><hr></li></ul><h2 id="JavaScript-构建工具"><a href="#JavaScript-构建工具" class="headerlink" title="JavaScript 构建工具"></a>JavaScript 构建工具</h2><ul><li><p><code>Babel</code>：JS 编译工具，主要用于浏览器不支持的 ES 新特性，比如用于编译 TypeScript</p></li><li><p><code>WebPack</code>：模块打包器，主要作用就是打包、压缩、合并及按序加载</p><hr></li></ul><h2 id="三端统一"><a href="#三端统一" class="headerlink" title="三端统一"></a>三端统一</h2><ul><li>混合开发（Hybrid App）<ul><li>云打包：HBuild -&gt; HBuildX，DCloud 出品；API Cloud</li><li>本地打包： Cordova（前身是 PhoneGap）</li></ul></li><li>微信小程序:微信小程序 UI 开发的框架：WeUI</li></ul><hr><h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello-World"></a>Hello-World</h1><h2 id="内部开撸"><a href="#内部开撸" class="headerlink" title="内部开撸"></a>内部开撸</h2><ul><li>放在 head 或者 body 里面都可以,一般放在 head 中.<ul><li>需要注意如果 js 对 DOM 进行操作,标签位置会影响加载顺序以导致对 DOM 的操作可能无效.</li><li>比如要对 body 里的内容进行修改,js 放在 head 里就会无效(因为先加载的 js 后加载的 body),这种情况就需要 js 放在 body 的末尾.<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  alert(<span class="string">&quot;HelloWorld&quot;</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><h2 id="外部引入"><a href="#外部引入" class="headerlink" title="外部引入"></a>外部引入</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意 script 不是单标签,<code>&lt;script src=&quot;js/1.js&quot; /&gt;</code>这样写会出错.</p></blockquote><hr><h2 id="type"><a href="#type" class="headerlink" title="type"></a>type</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--不用显示定义type，也默认就是javaScript--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--! JavaScript严格区分大小写--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 1. 定义变量   变量类型 变量名 = 变量值</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> score = <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//alert(num);</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">// 2. 条件控制</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// if (score &gt; 60 &amp;&amp; score &lt; 70) &#123;</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">//   alert(&quot;60~70&quot;);</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// &#125; else if (score &gt; 70 &amp;&amp; score &lt; 80) &#123;</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">//   alert(&quot;70~80&quot;);</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// &#125; else &#123;</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">//   alert(&quot;other&quot;);</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// &#125;</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="浏览器调试"><a href="#浏览器调试" class="headerlink" title="浏览器调试"></a>浏览器调试</h1><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/20/Q8tygmLE41kB6pX.png" alt="20201220232055" /><ul><li>调试 HTML 和 css 一般在 Element</li><li>console 控制台一般用来调试 JavaScript.</li><li>检查文件和网络连接分别用 Source 和 Network</li><li>最后的 Application 用来存储网络数据.</li></ul><blockquote><p>摸摸就会了,不同特意学习.</p></blockquote><hr><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123</span>       <span class="regexp">//</span>整数<span class="number">123</span></span><br><span class="line"><span class="number">123.1</span>     <span class="regexp">//</span>浮点数<span class="number">123.1</span></span><br><span class="line"><span class="number">1.123</span>e3   <span class="regexp">//</span>科学计数法</span><br><span class="line">-<span class="number">99</span>       <span class="regexp">//</span>负数</span><br><span class="line">NaN      <span class="regexp">//</span>not a number</span><br><span class="line">Infinity  <span class="regexp">//</span> 表示无限大</span><br></pre></td></tr></table></figure><hr><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>‘abc’ “abc”</p><hr><h2 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h2><p>true，false</p><hr><h2 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h2><ul><li><p>&amp;&amp; 两个都为真，结果为真</p></li><li><p>|| 一个为真，结果为真</p></li><li><p>! 真即假，假即真</p></li></ul><hr><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><ul><li><p>= 赋值</p></li><li><p>== 等于（类型不一样，值一样比如:<code>1 与&quot;1&quot;</code>，也会判断为 true）</p><blockquote><p>这是一个 JS 的缺陷，坚持不要使用 == 比较</p></blockquote></li><li><p>=== 绝对等于（类型一样，值一样，结果为 true）</p><hr></li><li><p>NaN === NaN</p><ul><li>// false</li><li>只能通过 isNaN（NaN）来判断这个数是否是 NaN</li></ul></li></ul><hr><h2 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h2><ul><li><p>跟 C 语言一样,某些浮点数运算存在一定的精度损失.</p><ul><li>尽量避免使用浮点数运算.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> / <span class="number">3</span> === <span class="number">1</span> - <span class="number">2</span> / <span class="number">3</span>);</span><br></pre></td></tr></table></figure></li><li><p>函数调用类似 Java</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Math</span>.abs(<span class="number">1</span> / <span class="number">3</span> - (<span class="number">1</span> - <span class="number">2</span> / <span class="number">3</span>)) &lt; <span class="number">0.00000001</span>;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="null-amp-amp-undefined"><a href="#null-amp-amp-undefined" class="headerlink" title="null &amp;&amp; undefined"></a>null &amp;&amp; undefined</h2><ul><li>null 定义了但是事空的</li><li>undefined 未定义的</li></ul><hr><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><ul><li><p>定义,跟 Java 异曲同工.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保证代码的可读性，尽量使用[]</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="string">&quot;hello&quot;</span>, <span class="literal">null</span>, <span class="literal">true</span>];</span><br><span class="line"><span class="comment">//第二种定义方法</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="string">&quot;hello&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>差别</p><ul><li>JavaScript 的数组内可以存放不同类型的数据.</li><li>数组越界报错 undefined</li></ul></li></ul><hr><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><ul><li><p>对象是大括号，数组是中括号</p></li><li><p>每个属性之间使用逗号隔开，最后一个属性不需要逗号</p></li><li><p>与 Java 相同,变量和对象名完全可以用中文(但是不建议).</p></li><li><p>定义</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Person person = new Person(1,2,3,4,5);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">  name: <span class="string">&quot;Tom&quot;</span>,</span><br><span class="line">  age: <span class="number">3</span>,</span><br><span class="line">  tags: [<span class="string">&quot;js&quot;</span>, <span class="string">&quot;java&quot;</span>, <span class="string">&quot;web&quot;</span>, <span class="string">&quot;...&quot;</span>],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>取值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">person.name</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="string">&quot;Tom&quot;</span></span></span><br><span class="line"></span><br><span class="line">person.age</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 3</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="严格检查模式"><a href="#严格检查模式" class="headerlink" title="严格检查模式"></a>严格检查模式</h2><ul><li><p>js 里定义变量几种方法:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认全局变量(严禁这样写)</span></span><br><span class="line">i1 = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// 全局变量(不建议写法,可能引发问题)</span></span><br><span class="line"><span class="keyword">var</span> i2 = <span class="number">2</span>;</span><br><span class="line"><span class="comment">// 局部变量(建议)</span></span><br><span class="line"><span class="keyword">let</span> i3 = <span class="number">3</span>;</span><br></pre></td></tr></table></figure></li><li><p>严格检查</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="comment">//全局变量 (严格检查,会报错)</span></span><br><span class="line">i = <span class="number">1</span>;</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="字符串-1"><a href="#字符串-1" class="headerlink" title="字符串"></a>字符串</h1><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><ul><li>(基本跟 Java 一样)</li></ul><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">&#x27;</span></span></span><br><span class="line"><span class="tag">\<span class="name">n</span></span></span><br><span class="line"><span class="tag">\<span class="name">t</span></span></span><br><span class="line"><span class="tag">\<span class="name">u</span></span>4e2d    <span class="tag">\<span class="name">u</span></span>#### Unicode字符</span><br><span class="line"><span class="tag">\<span class="name">x</span></span>41Ascall字符</span><br></pre></td></tr></table></figure><hr><h2 id="多行字符串"><a href="#多行字符串" class="headerlink" title="多行字符串"></a>多行字符串</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tab上面 esc下面</span></span><br><span class="line"><span class="keyword">var</span> msg = <span class="string">`hello</span></span><br><span class="line"><span class="string">            world</span></span><br><span class="line"><span class="string">            你好呀</span></span><br><span class="line"><span class="string">            nihao</span></span><br><span class="line"><span class="string">            `</span>;</span><br></pre></td></tr></table></figure><hr><h2 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;Tom&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> age = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">var</span> msg = <span class="string">`你好，<span class="subst">$&#123;name&#125;</span> + <span class="subst">$&#123;age&#125;</span>`</span>;</span><br><span class="line"><span class="built_in">console</span>.log(msg);</span><br></pre></td></tr></table></figure><hr><h2 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">`123`</span>;</span><br><span class="line"><span class="comment">// str.函数名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 例如</span></span><br><span class="line"><span class="built_in">console</span>.log(str.length); <span class="comment">//字符串长度 3</span></span><br><span class="line"><span class="built_in">console</span>.log(str.indexOf(<span class="number">2</span>)); <span class="comment">//2的下标 1</span></span><br><span class="line"><span class="built_in">console</span>.log(str[<span class="number">1</span>]); <span class="comment">// 2</span></span><br></pre></td></tr></table></figure><hr><h2 id="字符串的可变性"><a href="#字符串的可变性" class="headerlink" title="字符串的可变性"></a>字符串的可变性</h2><ul><li>同 Java 的 String 对象,其本身不可变</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str[<span class="number">1</span>] = <span class="number">0</span>; <span class="comment">// 这样会报错,因为字符串是read-only的.</span></span><br></pre></td></tr></table></figure><hr><h2 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h2><ul><li>跟 Java 一样</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str.toUpperCase();</span><br><span class="line">str.toLowerCase();</span><br></pre></td></tr></table></figure><hr><h2 id="子串"><a href="#子串" class="headerlink" title="子串"></a>子串</h2><ul><li><code>[)</code> 左闭右开区间</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">student.substring(<span class="number">1</span>); <span class="comment">//从第一个字符串截取到最后一个字符串</span></span><br><span class="line">student.substring(<span class="number">1</span>, <span class="number">3</span>); <span class="comment">//[1,3)</span></span><br></pre></td></tr></table></figure><hr><h1 id="数组-1"><a href="#数组-1" class="headerlink" title="数组"></a>数组</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]; <span class="comment">//通过下标取值和赋值</span></span><br></pre></td></tr></table></figure><h2 id="长度"><a href="#长度" class="headerlink" title="长度"></a>长度</h2><ul><li>支持动态扩容,扩出来的元素位置是 undefined,如果缩小 length 的话,超出部分元素会丢失.</li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">arr.length</span> = <span class="number">1</span><span class="comment">;</span></span><br><span class="line"><span class="attr">arr.length</span> = <span class="number">2</span><span class="comment">; // 扩容</span></span><br><span class="line"><span class="attr">arr.length</span> = <span class="number">0</span><span class="comment">; // 缩小</span></span><br></pre></td></tr></table></figure><hr><h2 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf()"></a>indexOf()</h2><ul><li>获取元素位置</li><li><code>1</code> 与 <code>&quot;1&quot;</code> 是不同元素.</li></ul><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.indexOf(<span class="number">1</span>)<span class="comment">;</span></span><br><span class="line">arr.indexOf(<span class="string">&quot;1&quot;</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure><hr><h2 id="slice"><a href="#slice" class="headerlink" title="slice()"></a>slice()</h2><ul><li>等同于 subString()</li><li>截取数组并返回子数组</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line">arr = arr.slice(<span class="number">1</span>, <span class="number">5</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr); <span class="comment">// [ 2, 3, 4, 5 ]</span></span><br></pre></td></tr></table></figure><hr><h2 id="push-pop-unshift-shift"><a href="#push-pop-unshift-shift" class="headerlink" title="push(),pop(),unshift(),shift()"></a>push(),pop(),unshift(),shift()</h2><ul><li>分别是尾部添加/删除,头部添加/删除.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">arr.push(<span class="string">&quot;a&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr); <span class="comment">// [1, 2, 3, 4, 5, 6, &quot;a&quot;];</span></span><br><span class="line"></span><br><span class="line">arr.pop();</span><br><span class="line"><span class="built_in">console</span>.log(arr); <span class="comment">// [ 1, 2, 3, 4, 5, 6 ]</span></span><br><span class="line"></span><br><span class="line">arr.unshift(<span class="string">&quot;b&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr); <span class="comment">// [ &#x27;b&#x27;, 1, 2, 3, 4, 5, 6 ]</span></span><br><span class="line"></span><br><span class="line">arr.shift();</span><br><span class="line"><span class="built_in">console</span>.log(arr); <span class="comment">// [ 1, 2, 3, 4, 5, 6 ]</span></span><br></pre></td></tr></table></figure><hr><h2 id="reverse-sort"><a href="#reverse-sort" class="headerlink" title="reverse(),sort()"></a>reverse(),sort()</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">arr.reverse();</span><br><span class="line"><span class="built_in">console</span>.log(arr); <span class="comment">// [ 6, 5, 4, 3, 2, 1 ]</span></span><br><span class="line"></span><br><span class="line">arr.sort();</span><br><span class="line"><span class="built_in">console</span>.log(arr); <span class="comment">// [ 1, 2, 3, 4, 5, 6 ]</span></span><br></pre></td></tr></table></figure><hr><h2 id="concat"><a href="#concat" class="headerlink" title="concat()"></a>concat()</h2><ul><li>数组连接</li><li>并没有修改原来的数组,只是返回了一个新的数组.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1 = [<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>],</span><br><span class="line">  arr2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr1.concat(arr2)); <span class="comment">// [ &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, 1, 2, 3 ]</span></span><br></pre></td></tr></table></figure><hr><h2 id="join"><a href="#join" class="headerlink" title="join()"></a>join()</h2><ul><li>打印拼接数组，使用特定的字符串连接</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>];</span><br><span class="line">arr.join(<span class="string">&quot;-&quot;</span>); <span class="comment">// 并无效果</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.join(<span class="string">&quot;-&quot;</span>)); <span class="comment">// a-b-c</span></span><br></pre></td></tr></table></figure><hr><h2 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h2><ul><li>没啥花活.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [</span><br><span class="line">  [<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>],</span><br><span class="line">  [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">arr; <span class="comment">// [ [ &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27; ], [ 1, 2, 3 ] ]</span></span><br></pre></td></tr></table></figure><hr><h2 id="fill"><a href="#fill" class="headerlink" title="fill()"></a>fill()</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line">arr.length = <span class="number">10</span>;</span><br><span class="line">arr.fill(<span class="number">0</span>);</span><br><span class="line">arr; <span class="comment">// [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🟢CSS学习笔记-(二)</title>
      <link href="post/Web/css/css-2/"/>
      <url>post/Web/css/css-2/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2020-12-20 10:22:30 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:22:23 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Web\css\css-2.md * @Description: * @!: *********************************************************************--><ul><li><a href="#github-%E6%BA%90%E7%A0%81">GitHub 源码</a></li><li><a href="#%E6%B5%AE%E5%8A%A8">浮动</a><ul><li><a href="#%E5%85%83%E7%B4%A0%E5%B1%82%E7%BA%A7%E5%88%86%E7%B1%BB">元素层级分类</a></li><li><a href="#display">display</a></li><li><a href="#float">float</a></li><li><a href="#clear">Clear</a></li><li><a href="#overflow">Overflow</a></li><li><a href="#%E7%88%B6%E7%BA%A7%E8%BE%B9%E6%A1%86%E5%A1%8C%E9%99%B7%E9%97%AE%E9%A2%98">父级边框塌陷问题</a><ul><li><a href="#%E9%97%AE%E9%A2%98">问题</a></li><li><a href="#%E6%89%A9%E5%A4%A7%E7%88%B6%E7%BA%A7%E5%85%83%E7%B4%A0">扩大父级元素</a></li><li><a href="#%E5%A2%9E%E6%B7%BB%E7%A9%BA-div">增添空 div</a></li><li><a href="#%E8%87%AA%E5%8A%A8%E6%BA%A2%E5%87%BA">自动溢出</a></li><li><a href="#%E6%B7%BB%E5%8A%A0%E4%BC%AA%E7%B1%BB%E4%BC%98">添加伪类(优)</a></li><li><a href="#%E5%B0%8F%E7%BB%93">小结</a></li></ul></li></ul></li><li><a href="#%E5%AE%9A%E4%BD%8D">定位</a><ul><li><a href="#%E7%9B%B8%E5%AF%B9%E5%AE%9A%E4%BD%8D">相对定位</a></li><li><a href="#%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D">绝对定位</a></li><li><a href="#%E5%9B%BA%E5%AE%9A%E5%AE%9A%E4%BD%8D">固定定位</a></li><li><a href="#z-index">z-index</a></li></ul></li><li><a href="#%E5%8A%A8%E7%94%BB">动画</a></li><li><a href="#%E6%80%BB%E7%BB%93">总结</a></li></ul><h1 id="GitHub-源码"><a href="#GitHub-源码" class="headerlink" title="GitHub 源码"></a><a href="https://github.com/Weidows/Weidows/tree/master/Web/css">GitHub 源码</a></h1><h1 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h1><h2 id="元素层级分类"><a href="#元素层级分类" class="headerlink" title="元素层级分类"></a>元素层级分类</h2><ul><li><p>块级元素</p><ul><li>h1~h6(markdown 中不是 )</li><li>p</li><li>div</li><li>ui li</li></ul></li><li><p>行内元素</p><ul><li>span</li><li>a</li><li>img</li><li>strong</li></ul></li><li><p>块级元素可以包含行内元素,但反之不行.</p></li></ul><hr><h2 id="display"><a href="#display" class="headerlink" title="display"></a>display</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      display</span></span><br><span class="line"><span class="comment">        block 块元素</span></span><br><span class="line"><span class="comment">        inline 行内元素</span></span><br><span class="line"><span class="comment">        inline-block 行内块元素</span></span><br><span class="line"><span class="comment">        none 不显示</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      div &#123;</span><br><span class="line">        width: 100px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        border: 1px solid red;</span><br><span class="line">        display: inline;</span><br><span class="line">      &#125;</span><br><span class="line">      span &#123;</span><br><span class="line">        width: 100px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        border: 1px solid red;</span><br><span class="line">        display: inline-block;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>div块元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>span行内元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>效果图<br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/TZDOvMl9e8G6p4f.jpg" alt="e2tclC5Vkqm1b74"></li></ul><hr><h2 id="float"><a href="#float" class="headerlink" title="float"></a>float</h2><ul><li><p>float</p><ul><li>left</li><li>right</li></ul></li><li><p>浮动效果</p><ul><li>(可以让元素自动排版,但是可能会使结构错位塌陷)</li><li><code>在标准文档流之外.</code></li></ul></li><li><p><code>html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./style.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer01&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/3086109-ab66333e049109fc.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer02&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/3086109-e073f9a39c4bafe1.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer03&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/f0bcea9ca2acb59b4e97e3f9830d9c44.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer04&quot;</span>&gt;</span></span><br><span class="line">        浮动的盒子可以向左浮动,也可以向右浮动,直到它的外边缘碰到外层边界.</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>style.css</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#father</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.layer01</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.layer02</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#00f</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.layer03</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#0f0</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.layer04</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#666</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">23px</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>效果图</p><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/kJtpf73qTX1yMFg.jpg" alt="20201126004246"></p></li></ul><hr><h2 id="Clear"><a href="#Clear" class="headerlink" title="Clear"></a>Clear</h2><ul><li>清除(左/右)浮动效果,使元素像是标准文档流一样向下排布(但是并不在标准文档流).</li><li>right</li><li>left</li><li>both 两侧</li><li>none 不清除</li><li>两边都不能有浮动元素(图四样式)<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.layer04</span> &#123;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/05/svfDH412tiQGwRx.png" alt="20201205215331" /></li></ul><hr><h2 id="Overflow"><a href="#Overflow" class="headerlink" title="Overflow"></a>Overflow</h2><ul><li>溢出</li><li>hidden 越界部分隐藏(使用多)</li><li>scroll 越界的话显示滚动条</li><li>auto</li></ul><hr><h2 id="父级边框塌陷问题"><a href="#父级边框塌陷问题" class="headerlink" title="父级边框塌陷问题"></a>父级边框塌陷问题</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ul><li><p>问题就是内部的元素超出父级的边框(越界).</p></li><li><p>float 导致漂浮元素另成一层,即使 clear 也不按照标准文档流排布.</p></li><li><p>像是下面这种,父级的框圈不住子级 float 的元素.</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/05/3VfDEqGjPYbaQMx.png" alt="20201205221642" /></li><li><p>几种解决方案参下:</p></li></ul><hr><h3 id="扩大父级元素"><a href="#扩大父级元素" class="headerlink" title="扩大父级元素"></a>扩大父级元素</h3><ul><li>简单粗暴,直接把父级元素拉大,但是很拉胯.</li></ul><hr><h3 id="增添空-div"><a href="#增添空-div" class="headerlink" title="增添空 div"></a>增添空 div</h3><ul><li>在漂浮元素下面(一定要是下面)添加空 div,然后设置属性 clear.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer01&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/3086109-ab66333e049109fc.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer02&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/3086109-e073f9a39c4bafe1.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer03&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/f0bcea9ca2acb59b4e97e3f9830d9c44.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer04&quot;</span>&gt;</span></span><br><span class="line">    浮动的盒子可以向左浮动,也可以向右浮动,直到它的外边缘碰到外层边界.</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 方案二 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;clear&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 方案二 */</span></span><br><span class="line"><span class="selector-id">#clear</span> &#123;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>原理就是在箭头这里设置了没有边框的空元素,然后让它的两边都不能有 float 元素,所以父级的边框框住这个空 div 的同时也框住了 float 元素.</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/05/8nRVkKlgtBrvI6U.png" alt="ADVVKXK0V6MX4O0GI8BE03M" /><hr></li></ul><h3 id="自动溢出"><a href="#自动溢出" class="headerlink" title="自动溢出"></a>自动溢出</h3><ul><li>在父类里添加 <code>overflow</code> 属性</li><li>(因为父级边框并没有设边界大小,所以其大小就是 div 可容纳的包括浮动内部元素的范围大小)</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#father</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>效果:</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/06/x9l8HK75hMS3tIO.png" alt="20201206001209" /><hr></li></ul><h3 id="添加伪类-优"><a href="#添加伪类-优" class="headerlink" title="添加伪类(优)"></a>添加伪类(优)</h3><ul><li><p>此方法类似第二个添加空 div,就是利用伪类在父类后面添加空标签后 clear</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 方案四 */</span></span><br><span class="line"><span class="selector-id">#father</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/06/eO8DhqcTSmuBUYA.png" alt="20201206002751" /><hr><h1 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h1><ul><li><code>position</code><ul><li>relative</li><li>absolute</li><li>fix</li></ul></li></ul><h2 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a>相对定位</h2><ul><li><code>position: relative;</code><ul><li>left</li><li>right</li><li>bottom</li><li>top</li></ul></li><li>注意偏移是相对那个边来说,而不是偏移向那个方向.</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#first</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="built_in">rgb</span>(<span class="number">172</span>, <span class="number">96</span>, <span class="number">96</span>);</span><br><span class="line">  <span class="attribute">position</span>: relative; <span class="comment">/* 相对定位 */</span></span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">20px</span>; <span class="comment">/* 向上偏移20px */</span></span><br><span class="line">  <span class="attribute">left</span>: <span class="number">20px</span>; <span class="comment">/* 向左偏移20px */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>元素仍在标准文档中,只不过相对原先位置做了偏移</p><ul><li><p>此元素的信息仍为原先位置的信息(呈现与数据不同)</p></li><li><p>比如这里偏移后父级边框框的仍然是先前位置的那个元素.</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/18/xf6FoTqQU5cygvz.png" alt="20201218235557" /></li></ul></li><li><p>例子</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-id">#box</span> &#123;</span></span><br><span class="line">        width: 300px;</span><br><span class="line">        height: 300px;</span><br><span class="line">        padding: 10px;</span><br><span class="line">        border: 1px solid currentColor;</span><br><span class="line">      &#125;</span><br><span class="line">      a &#123;</span><br><span class="line">        width: 100px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        text-decoration: none;</span><br><span class="line">        background: violet;</span><br><span class="line">        line-height: 100px;</span><br><span class="line">        text-align: center;</span><br><span class="line">        color: white;</span><br><span class="line">        display: block;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">        background: blue;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.a2</span>,<span class="selector-class">.a4</span>&#123;</span></span><br><span class="line">        position: relative;</span><br><span class="line">        top: -100px;</span><br><span class="line">        left: 200px;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.a5</span>&#123;</span></span><br><span class="line">        position: relative;</span><br><span class="line">        top: -300px;</span><br><span class="line">        left: 100px;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;a1&quot;</span>&gt;</span>链接1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;a2&quot;</span>&gt;</span>链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;a3&quot;</span>&gt;</span>链接3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;a4&quot;</span>&gt;</span>链接4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;a5&quot;</span>&gt;</span>链接5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/20/uRpT8YF5QIBOoqM.png" alt="20201220001521" /></li></ul><hr><h2 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h2><ul><li><p><code>position:absolute;</code></p></li><li><p>基于上下左右进行定位.</p><ul><li>父级元素没有定位时,是相对于浏览器进行定位.</li><li>父级元素定位时,是相对于父级元素进行定位.(会用到)</li></ul></li><li><p>在<code>父级范围内偏移</code>(超出父级的内容不会显示)</p></li><li><p>原来位置不会被保留,而且不在标准文档流中.</p><hr></li><li><p>例子</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#father</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#666</span>;</span><br><span class="line">  <span class="comment">/* 这里父级元素虽然用了相对定位了,但是并没动,子级元素用来作绝对定位. */</span></span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#first</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="built_in">rgb</span>(<span class="number">172</span>, <span class="number">96</span>, <span class="number">96</span>);</span><br><span class="line">  <span class="comment">/* 相对于父级元素左端定位 */</span></span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h2><ul><li><p><code>position:fix;</code></p></li><li><p>把元素固定到浏览器某个位置不动.</p></li><li><p>例子</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      body &#123;</span><br><span class="line">        height: 2000px;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(1)</span> &#123;</span></span><br><span class="line">        width: 100px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background: tomato;</span><br><span class="line"><span class="css">        <span class="comment">/* 绝对定位 */</span></span></span><br><span class="line">        position: absolute;</span><br><span class="line">        right: 0;</span><br><span class="line">        bottom: 0;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(2)</span> &#123;</span></span><br><span class="line">        width: 50px;</span><br><span class="line">        height: 50px;</span><br><span class="line">        background: springgreen;</span><br><span class="line"><span class="css">        <span class="comment">/* 固定定位 */</span></span></span><br><span class="line">        position: fixed;</span><br><span class="line">        right: 0;</span><br><span class="line">        bottom: 0;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>div1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>div2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>绝对定位会随着页面滚动而移动,固定定位则不会.</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/20/hJnbPAH9LKIy8q4.png" alt="20201220093438" /></li></ul><hr><h2 id="z-index"><a href="#z-index" class="headerlink" title="z-index"></a>z-index</h2><ul><li><p><code>z-index: 0;</code></p></li><li><p>默认是 0,最高无限,类似 PS 的图层堆叠效果.</p><ul><li>(只有使用定位效果的元素才有层级)</li></ul></li><li><p>例子</p><ul><li><p>HTML</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./css/index.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;tip-text&quot;</span>&gt;</span>Weidows-学习中...<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;tip-bg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>时间: 2020年12月20日09:51:29<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>地点: Hebau<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#content</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">720px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span>,</span><br><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 这个的目的是让下面的子元素相对这个父级元素定位 */</span></span><br><span class="line"><span class="selector-id">#content</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tip-text</span>,</span><br><span class="line"><span class="selector-class">.tip-bg</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tip-text</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: aqua;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tip-bg</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>样式</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/20/s8pAdtSjOJaKBlV.png" alt="20201220102125" /></li></ul></li></ul><hr><h1 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h1><ul><li>css 一般只用来做小型动画或者渐变,复杂的一般用 JS.</li><li>稍作了解,需要的话网上找代码.</li></ul><hr><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/20/IfeB2C4M9LuWXom.jpg" alt="20200507153758833" />]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>👌Hexo-SEO 搜索引擎优化</title>
      <link href="post/Web/Node/Hexo/Hexo-SEO/"/>
      <url>post/Web/Node/Hexo/Hexo-SEO/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2020-12-18 16:39:24 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:06:24 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Hexo\Hexo-SEO.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6">安装插件</a></li><li><a href="#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">配置文件</a></li><li><a href="#%E7%AB%99%E9%95%BF%E6%B7%BB%E5%8A%A0%E7%BD%91%E7%AB%99">站长添加网站</a><ul><li><a href="#%E6%B3%A8%E6%84%8F">注意</a></li><li><a href="#hexo-%E6%A0%87%E7%AD%BE%E9%AA%8C%E8%AF%81%E7%BD%91%E7%AB%99">Hexo 标签验证网站</a></li></ul></li><li><a href="#%E6%B7%BB%E5%8A%A0%E7%AB%99%E7%82%B9%E5%9C%B0%E5%9B%BE">添加站点地图</a></li></ul><h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><ul><li><p>分别是生成百度和谷歌站点地图的插件.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><ul><li><p>根目录的<code>_config.yml</code>中添加以下:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidusitemap.xml</span></span><br></pre></td></tr></table></figure></li><li><p>xml 文件存放路径看着来,一般放在网站根目录.</p></li><li><p>现在<code>hexo generate</code>就会出现<code>public/sitemap.xml 和 baidusitemap.xml</code></p><ul><li>sitemap.xml 样式如下:</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">urlset</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.sitemaps.org/schemas/sitemap/0.9&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">loc</span>&gt;</span>https://weidows.github.io/post/Hexo/butterfly_modify/<span class="tag">&lt;/<span class="name">loc</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">lastmod</span>&gt;</span>2020-12-18<span class="tag">&lt;/<span class="name">lastmod</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">loc</span>&gt;</span>https://weidows.github.io/post/experience/markdown/<span class="tag">&lt;/<span class="name">loc</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">lastmod</span>&gt;</span>2020-12-14<span class="tag">&lt;/<span class="name">lastmod</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">loc</span>&gt;</span>https://weidows.github.io/post/backup/%E5%BF%AB%E6%8D%B7%E9%94%AE/<span class="tag">&lt;/<span class="name">loc</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">lastmod</span>&gt;</span>2020-12-12<span class="tag">&lt;/<span class="name">lastmod</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="站长添加网站"><a href="#站长添加网站" class="headerlink" title="站长添加网站"></a>站长添加网站</h1><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul><li>因为 <code>Hexo</code> 会对 HTML 文件进行修改,所以<code>无法通过文件验证添加网站</code><ul><li>可以通过 HTML 标签方式,比较方便.</li></ul></li></ul><h2 id="Hexo-标签验证网站"><a href="#Hexo-标签验证网站" class="headerlink" title="Hexo 标签验证网站"></a>Hexo 标签验证网站</h2><ul><li><p>我使用的是 Butterfly 主题,主体间会有所不同,定位如下文件:</p><ul><li>themes/butterfly/layout/includes/layout.pug</li></ul></li><li><p>在<code>body</code>行上方添加验证标签(注意需要转换成 pug 格式)</p><ul><li><a href="https://html2pug.com/">HTML=&gt;pug 格式转换</a></li></ul></li><li><p>添加之后如下:</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/18/eFC3Lqbpi9xQ4Mg.png" alt="20201218170353" /></li><li><p>最后</p><ul><li>hexo generate</li><li>hexo deploy</li><li>page 部署才能验证</li></ul></li></ul><hr><h1 id="添加站点地图"><a href="#添加站点地图" class="headerlink" title="添加站点地图"></a>添加站点地图</h1><ul><li><p>百度</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/18/KOl5p4gtIsBwrhE.png" alt="20201218173033" /></li><li><p>谷歌简单,略.</p></li><li><p>另外</p><ul><li>百度添加 sitemap 后一直处于等待状态是正常的,别在意…</li><li>谷歌添加 sitemap 一般第一次会失败,删掉重新添加就好了(立即生效)</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Node </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Website </tag>
            
            <tag> Hexo </tag>
            
            <tag> SEO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>✨SSH远程连接.</title>
      <link href="post/experience/SSH/"/>
      <url>post/experience/SSH/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-12-07 00:12:52 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:01:29 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\experience\SSH.md * @Description:--><ul><li><a href="#%E6%89%8B%E5%8A%A8%E6%8C%A1">手动挡</a><ul><li><a href="#%E7%94%9F%E6%88%90%E5%85%AC%E7%A7%81%E7%A7%98%E9%92%A5">生成公私秘钥</a></li><li><a href="#%E9%85%8D%E7%BD%AE%E8%BF%9E%E9%80%9A">配置连通</a></li><li><a href="#%E6%B5%8B%E8%AF%95%E5%91%BD%E4%BB%A4">测试命令</a></li></ul></li><li><a href="#%E8%87%AA%E5%8A%A8%E6%8C%A1">自动挡</a><ul><li><a href="#finalshell">FinalShell</a></li><li><a href="#vscode-%E8%BF%9E%E6%8E%A5">VScode 连接</a></li></ul></li><li><a href="#%E5%AD%98%E5%9C%A8%E3%81%AE%E9%97%AE%E9%A2%98">存在の问题</a><ul><li><a href="#root-denied">root-denied</a></li><li><a href="#vscode-ssh-%E6%96%AD%E5%BC%80%E8%BF%9E%E6%8E%A5">VScode-ssh-断开连接</a></li></ul></li><li><a href="#tcp-%E4%BF%9D%E6%B4%BB">TCP 保活</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="手动挡"><a href="#手动挡" class="headerlink" title="手动挡"></a>手动挡</h1><h2 id="生成公私秘钥"><a href="#生成公私秘钥" class="headerlink" title="生成公私秘钥"></a>生成公私秘钥</h2><ul><li><p>比如</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;utsuko27@qq.com&quot; -f ~/.ssh/Gitee_rsa</span><br></pre></td></tr></table></figure></li><li><p>生成后<code>.ssh/</code>文件夹下面就会出现两个文件</p><ul><li><code>Gitee_rsa</code> 私钥</li><li><code>Gitee_rsa.pub</code> 公钥</li></ul></li><li><p>通过<code>cd ~/.ssh</code>或者<code>cat ~/.ssh/Gitee_rsa.pub</code>的方式获取公钥</p><ul><li>一般.ssh 路径为<code>C:\Users\username\.ssh</code></li><li>把公钥复制到远程机上.</li></ul></li></ul><hr><h2 id="配置连通"><a href="#配置连通" class="headerlink" title="配置连通"></a>配置连通</h2><ul><li><p>在.ssh 下新建<code>config</code>文件,参照以下模板:</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gitee</span></span><br><span class="line"><span class="attr">Host</span> <span class="string">gitee.com</span></span><br><span class="line"><span class="attr">HostName</span> <span class="string">gitee.com</span></span><br><span class="line"><span class="attr">PreferredAuthentications</span> <span class="string">publickey</span></span><br><span class="line"><span class="attr">IdentityFile</span> <span class="string">~/.ssh/Gitee_rsa</span></span><br></pre></td></tr></table></figure></li><li><p>多个 ssh 秘钥在这个 config 文件里配置.</p></li><li><p>如果不想让它确认输入 yes,可以在这个文件里加上一行:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">StrictHostKeyChecking</span> <span class="literal">no</span></span><br></pre></td></tr></table></figure></li><li><p>配置文件完成,现在应该是这样子:</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/07/4slQ1hP92qxSUIW.png" alt="20201207100813" /></li></ul><hr><h2 id="测试命令"><a href="#测试命令" class="headerlink" title="测试命令"></a>测试命令</h2><ul><li><p>终端进入这个.ssh 文件夹(不在这个文件夹下无法导通)</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span> -T git<span class="variable">@gitee</span>.com</span><br></pre></td></tr></table></figure></li><li><p>出现<code>git@gitee.com: Permission denied (publickey).</code>,说明哪里没配置好出问题了.</p></li><li><p>出现<code>Hi Weidows! You&#39;ve successfully authenticated, but GITEE.COM does not provide shell access.</code>说明配置好了.</p></li><li><p>测试完成,两机处于连通状态!</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="自动挡"><a href="#自动挡" class="headerlink" title="自动挡"></a>自动挡</h1><h2 id="FinalShell"><a href="#FinalShell" class="headerlink" title="FinalShell"></a>FinalShell</h2><ul><li><p>连接树莓派,ip 为<code>192.168.43.119</code>,用户名为<code>pi</code>,密码为默认的<code>raspberry</code></p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/03/9SuJxmTWczQG2oE.png" alt="20201203113101" /></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h2 id="VScode-连接"><a href="#VScode-连接" class="headerlink" title="VScode 连接"></a>VScode 连接</h2><ul><li><p>安装插件<code>Remote-SSH</code></p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/04/25reFfkbShHl9q8.png" alt="20201204202003" /></li><li><p>安装后侧边栏出现<code>远程资源管理器</code>,然后点新建,出现下面东东~</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/28/vm3bRepxYuL4SUk.png" alt="20210128005600" /></li><li><p>照着他的提示输入就行,比如我以<code>pi</code>用户登录,树莓派<code>内网ip</code>是<code>192.168.2.116</code>,那么应该输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh pi@192.168.2.116 -A</span><br></pre></td></tr></table></figure></li><li><p>打开 <code>ssh 配置文件</code>查看一下,可以自定义修改配置,如下.</p><ul><li>我把 Host 后面的名字改成了树莓派,其他没动.</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host 树莓派</span><br><span class="line">  HostName 192.168.2.116</span><br><span class="line"> <span class="built_in"> User </span>pi</span><br><span class="line">  ForwardAgent <span class="literal">yes</span></span><br></pre></td></tr></table></figure></li><li><p>打开输入对应用户的密码就可以登录了.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="存在の问题"><a href="#存在の问题" class="headerlink" title="存在の问题"></a>存在の问题</h1><h2 id="root-denied"><a href="#root-denied" class="headerlink" title="root-denied"></a>root-denied</h2><ul><li>某些系统对 ssh 不开放 root,比如<code>Deepin</code>,网上有开放方法</li></ul><blockquote><p><a href="https://blog.csdn.net/weixin_42408060/article/details/102952986">深度（deepin）系统不能 ssh root 用户登录</a></p></blockquote><hr><h2 id="VScode-ssh-断开连接"><a href="#VScode-ssh-断开连接" class="headerlink" title="VScode-ssh-断开连接"></a>VScode-ssh-断开连接</h2><ul><li><p>按照上面配合后使用完全没有问题,但是 ssh 连接后一段时间你没有跟远程机传输数据的话,连接就会断开</p></li><li><p>网上搜了一大顿,有些解决办法,比如<code>修改ssh_config</code>,<code>卸载Chinese插件</code>,<code>TCP保活</code>,<code>定时唤醒</code>等等…</p></li></ul><hr><ul><li><p>最终,我用二分法查出了问题所在:</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/06/2GXOS5mW8EzIT7Y.png" alt="20210206124525" /></li><li><p>问题出自于一个叫<code>code time</code>的插件,它的<code>issue</code>里面也提了这个 bug,还没解决.</p><ul><li>可以用<code>wakatime</code>替代,这个插件没事.</li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="TCP-保活"><a href="#TCP-保活" class="headerlink" title="TCP 保活"></a>TCP 保活</h1><ul><li><p>没特殊需求的话不需要配置.</p><blockquote><p><a href="https://blog.fdawei.club/2018/03/04/47759cbac5b96ea23e90e57200b84274/">SSH 连接保活</a></p></blockquote></li><li><p>在<code>~/.ssh/config</code>里添加如下:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ClientAliveInterval <span class="number">10</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> experience </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>💥系统开发环境配置</title>
      <link href="post/system/system_variable/"/>
      <url>post/system/system_variable/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-12-04 11:38:58 * @LastEditors: Weidows * @LastEditTime: 2021-03-25 10:52:28 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\system\system_variable.md * @Description:--><ul><li><a href="#%E6%B7%B1%E5%85%A5%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">深入环境变量</a></li><li><a href="#scoop">Scoop</a></li><li><a href="#jdk">JDK</a></li><li><a href="#maven">Maven</a></li><li><a href="#git">Git</a></li><li><a href="#python">Python</a></li><li><a href="#nodejs">Node.js</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="深入环境变量"><a href="#深入环境变量" class="headerlink" title="深入环境变量"></a>深入环境变量</h1><blockquote><p><a href="../%E6%B7%B1%E5%85%A5%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">🎇 深入解析 Window 环境变量.</a></p></blockquote><h1 id="Scoop"><a href="#Scoop" class="headerlink" title="Scoop"></a>Scoop</h1><blockquote><p>详见<a href="../../tools/Scoop">🙌Windows 平台软件包管理器选择-Scoop</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h1><blockquote><p>通过 Scoop 安装会自动设置</p></blockquote><ul><li><p>新建<code>JAVA_HOME</code>环境变量值</p><ul><li><code>D:\Game\Demo\AdoptOpenJDK\</code></li></ul></li><li><p>Path 里面添加</p><ul><li><code>%JAVA_HOME%\bin</code></li></ul></li><li><p>JDK 创建 jre: 进入 JDK 根目录管理员模式输入(正常 JDK 自带)</p><ul><li><code>bin\jlink.exe --module-path jmods --add-modules java.desktop --output jre</code></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><blockquote><p>内部修改耦合 <a href="../../tools/IDEA/Modification#maven">🎉IDEA 魔改记录.</a></p></blockquote><ul><li><p>环境变量: 用 Scoop 安装不需要手动配置!</p></li><li><p>检查</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn -v</span><br></pre></td></tr></table></figure></li><li><p>VScode 中设置:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;java.configuration.maven.globalSettings&quot;: &quot;D:/Game/Scoop/persist/maven/conf/settings.xml&quot;,</span><br></pre></td></tr></table></figure></li><li><p>IDEA 中设置也需要覆盖</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210325105220.png" alt="20210325105220" /></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><blockquote><p>用 Scoop 安装自带环境变量,不用配置.</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><blockquote><p>通过 Scoop 安装会自动设置</p></blockquote><ul><li>Path 中+<figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:<span class="tag">\<span class="name">Game</span></span><span class="tag">\<span class="name">Scoop</span></span><span class="tag">\<span class="name">apps</span></span><span class="tag">\<span class="name">python</span></span></span><br><span class="line">D:<span class="tag">\<span class="name">Game</span></span><span class="tag">\<span class="name">Scoop</span></span><span class="tag">\<span class="name">apps</span></span><span class="tag">\<span class="name">python</span></span><span class="tag">\<span class="name">Scripts</span></span><span class="tag">\</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></li></ul><h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><blockquote><p>详见<a href="../../Web/Node/node">⬆ Node.js 环境配置 &amp;&amp; 使用</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> system </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
            <tag> 备忘录 </tag>
            
            <tag> 计算机系统 </tag>
            
            <tag> Scoop </tag>
            
            <tag> Git </tag>
            
            <tag> Python </tag>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派酱の吃灰日常.</title>
      <link href="post/system/RaspberryPi/"/>
      <url>post/system/RaspberryPi/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-12-03 10:44:06 * @LastEditors: Weidows * @LastEditTime: 2021-03-11 23:50:41 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\system\RaspberryPi.md * @Description:--><ul><li><a href="#%E6%97%A0%E5%B1%8F%E5%B9%95%E7%BA%BF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">无屏幕(线)解决方案</a></li><li><a href="#ssh-%E8%BF%9E%E6%8E%A5">SSH 连接</a></li><li><a href="#%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81">设置密码</a></li><li><a href="#%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE">树莓派系统设置</a></li><li><a href="#vnc-%E8%BF%9E%E6%8E%A5">VNC 连接</a></li><li><a href="#screenfetch">Screenfetch</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="无屏幕-线-解决方案"><a href="#无屏幕-线-解决方案" class="headerlink" title="无屏幕(线)解决方案"></a>无屏幕(线)解决方案</h1><ul><li><p>刚到手的树莓派裸机没屏幕和 Mini-HDMI 线,用 ssh 连接.</p></li><li><p>首先,用手机或者电脑开热点</p><ul><li>(注意 电脑的 5G 频段的可能无法连接)</li><li>我的树莓派 4B-4G 版这种方法连不上 电脑的 5G 频段的 WiFi,但是手机的热点可以.</li></ul></li><li><p>然后在桌面新建文件夹<code>树莓派</code>,存放今后需要的数据文件.</p><ul><li>新建文件命名为<code>ssh</code>,注意它没有后缀名和文件数据.</li><li>新建文件命名为 <code>wpa_supplicant.conf</code> ,文件数据如下:</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">country</span>=GB</span><br><span class="line"></span><br><span class="line"><span class="attribute">ctrl_interface</span>=DIR=/var/run/wpa_supplicant <span class="attribute">GROUP</span>=netdev</span><br><span class="line"></span><br><span class="line"><span class="attribute">update_config</span>=1</span><br><span class="line"></span><br><span class="line">network=&#123;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssid</span>=<span class="string">&quot;你的Wifi名称，注意大小写&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">psk</span>=<span class="string">&quot;你的Wifi密码&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://github.com/Weidows/Programming-Configuration/tree/master/raspberryPi/boot">文件链接</a></p></blockquote><ul><li>预览</li></ul><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/03/JgR8kpoTAl4q3bZ.png" alt="20201203110651" /></li><li><p>用读卡器把树莓派系统 TF 卡插进电脑,把这两个文件复制进内存卡里名叫 <code>boot</code> 的盘符根目录里.</p></li><li><p>开鸡,等会应该就会发现电脑或者手机连接上了,如下:</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/03/g2h8LQeGz145BT6.png" alt="20201203110842" /><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/03/qUjClYon8P5cuZi.jpg" alt="Screenshot_20201203_112505_com.android.settings" width="50%" /></li><li><p>然后就可以用 ssh 连接这个 IP 地址了.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="SSH-连接"><a href="#SSH-连接" class="headerlink" title="SSH 连接"></a>SSH 连接</h1><ul><li><p>用 ssh 软件连接,我用的是 <code>FinalShell</code>与<code>VScode</code></p></li><li><p>连接三要素是<code>IP地址 + 用户名 + 密码</code></p></li><li><p>树莓派系统默认账号是 <code>pi</code>，密码是 <code>raspberry</code></p></li></ul><blockquote><p>可参照 <a href="../../experience/SSH#%E8%87%AA%E5%8A%A8%E6%8C%A1">✨SSH 远程连接.</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h1><ul><li><p>连接成功后设置 root 账户密码</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo passwd root</span></span><br></pre></td></tr></table></figure></li><li><p>之后 <code>su root(切换到root用户)</code> 就需要密码验证了.</p></li><li><p>解锁用户密码设置</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd <span class="comment">--unlock root</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="树莓派系统设置"><a href="#树莓派系统设置" class="headerlink" title="树莓派系统设置"></a>树莓派系统设置</h1><ul><li>(可在 ssh 中显示)<figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo raspi-<span class="built_in">config</span></span><br></pre></td></tr></table></figure><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></li></ul><h1 id="VNC-连接"><a href="#VNC-连接" class="headerlink" title="VNC 连接"></a>VNC 连接</h1><ul><li>没屏幕或者没 Mini-HDMI 线时最佳方案.</li><li>首先<a href="https://www.realvnc.com/en/connect/download/viewer">下载 VNC 软件</a></li><li>安装后打开搜索树莓派的内网 ip,输入用户名连接<img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/04/tiYkwdcTq2ZpQfl.png" alt="20201204103758" /><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/04/DINsq97UmFPJbcZ.png" alt="20201204103843" /></li><li>OK.</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Screenfetch"><a href="#Screenfetch" class="headerlink" title="Screenfetch"></a>Screenfetch</h1><ul><li>显示系统、主题信息<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">install </span><span class="keyword">screenfetch</span></span><br><span class="line"><span class="keyword">screenfetch</span></span><br></pre></td></tr></table></figure><blockquote><p>这里不用 Neofetch 是因为树莓派 Debian8 系统的 repo 地址需要更新,安装还需要其他操作,怪麻烦~</p></blockquote></li><li>显示 Linux 系统及版本信息,如下:<img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/05/XVzvAUq7G4tP1DO.png" alt="20201205143342" /><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/03/iWXJzj5U9HyoG3R.png" alt="20201203115807" /></li></ul>]]></content>
      
      
      <categories>
          
          <category> system </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自用 &amp;&amp; 收藏的一些API</title>
      <link href="post/Web/API/"/>
      <url>post/Web/API/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:38:41 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Web\API.md--><ul><li><a href="#my-url-%E5%89%8D%E7%BC%80-gitee--github-%E6%97%81%E4%BA%BA%E6%B2%A1%E5%95%A5%E7%94%A8">My URL 前缀: Gitee &amp;&amp; GitHub (旁人没啥用…)</a><ul><li><a href="#gitee">Gitee</a></li><li><a href="#jsdelivr">JsDelivr</a></li><li><a href="#github">GitHub</a></li></ul></li><li><a href="#%E6%A8%AA%E5%B1%8F-api">横屏 API</a><ul><li><a href="#%E5%BF%85%E5%BA%94%E5%A3%81%E7%BA%B8">必应壁纸</a></li><li><a href="#%E9%A3%8E%E6%99%AF%E5%9B%BE">风景图</a></li><li><a href="#%E4%BA%8C%E6%AC%A1%E5%85%83-coser">二次元 coser</a></li><li><a href="#%E5%B0%8F%E5%BF%83%E8%BA%AB%E4%BD%93-%E6%8E%A8%E5%A5%B3%E9%83%8E">小心身体-推女郎</a></li></ul></li><li><a href="#%E7%AB%96%E5%B1%8F">竖屏</a><ul><li><a href="#%E4%BA%8C%E5%88%BA%E8%9E%88%E6%B6%A9%E5%9B%BE">二刺螈涩图</a></li></ul></li><li><a href="#%E6%9C%AA%E7%9F%A5%E5%9B%BE">未知图</a></li><li><a href="#%E5%9C%A8%E7%BA%BF%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81">在线生成二维码</a><ul><li><a href="#%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%8F%AF%E4%BD%BF%E7%94%A8-https">百度网盘(可使用 https)</a></li><li><a href="#iclick-%E6%8E%A5%E5%8F%A3-%E6%97%A0-https">iClick 接口 (无 https)</a></li><li><a href="#jiathis-%E6%8E%A5%E5%8F%A3%E6%97%A0-https">JiaThis 接口(无 https)</a></li><li><a href="#%E8%81%94%E5%9B%BE%E7%BD%91%E6%97%A0-https">联图网(无 https)</a></li><li><a href="#k780-%E6%95%B0%E6%8D%AE%E7%BD%91%E6%94%AF%E6%8C%81-https-%E5%92%8C-http">K780 数据网(支持 https 和 http)</a></li><li><a href="#qr-code-generatorhttps-%E6%8E%A5%E5%8F%A3">QR Code Generator(https 接口)</a></li></ul></li><li><a href="#%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E8%B7%9F%E9%9A%8F%E7%89%B9%E6%95%88-js">鼠标点击/跟随特效 js</a><ul><li><a href="#%E5%B0%8F%E5%BF%83%E5%BF%83%E7%89%B9%E6%95%88">小心心特效</a></li><li><a href="#%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E6%A0%B8%E5%BF%83%E4%BB%B7%E5%80%BC%E8%A7%82">社会主义核心价值观</a></li><li><a href="#%E8%8A%B1%E8%8A%B1%E7%89%B9%E6%95%88">花花特效</a></li><li><a href="#%E8%B7%9F%E9%9A%8F%E7%89%B9%E6%95%88">跟随特效</a></li></ul></li><li><a href="#%E8%8E%B7%E5%8F%96%E7%BD%91%E9%A1%B5%E6%88%AA%E5%9B%BE">获取网页截图</a></li><li><a href="#%E8%8E%B7%E5%8F%96%E5%8C%BA%E5%9F%9F%E6%97%B6%E9%97%B4">获取区域时间</a></li></ul><h1 id="My-URL-前缀-Gitee-amp-amp-GitHub-旁人没啥用…"><a href="#My-URL-前缀-Gitee-amp-amp-GitHub-旁人没啥用…" class="headerlink" title="My URL 前缀: Gitee &amp;&amp; GitHub (旁人没啥用…)"></a>My URL 前缀: Gitee &amp;&amp; GitHub (旁人没啥用…)</h1><h2 id="Gitee"><a href="#Gitee" class="headerlink" title="Gitee"></a>Gitee</h2><ul><li>图/文件: <code>https://gitee.com/Weidows/Weidows/raw/master/Website/public</code></li><li>链接: <code>https://gitee.com/Weidows/Weidows/blob/master</code></li><li>博客: <code>https://weidows.gitee.io</code></li></ul><h2 id="JsDelivr"><a href="#JsDelivr" class="headerlink" title="JsDelivr"></a>JsDelivr</h2><ul><li>GitHub 图床 CDN: <code>https://cdn.jsdelivr.net/gh/Weidows/Images/</code></li></ul><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><ul><li>链接: <code>https://github.com/Weidows/Weidows/tree/master</code></li><li>图片: <code>https://raw.githubusercontent.com/Weidows/Weidows.github.io/master/</code></li><li>GitHub Chart API: <code>http://ghchart.rshah.org/409ba5/Weidows</code><ul><li>其中<code>/409ba5/</code>是颜色的十六进制表示,#409ba5(使格子颜色变为蓝色)如下图<br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="http://ghchart.rshah.org/409ba5/Weidows" alt="GitHub Chart"></li></ul></li></ul><hr><h1 id="横屏-API"><a href="#横屏-API" class="headerlink" title="横屏 API"></a>横屏 API</h1><h2 id="必应壁纸"><a href="#必应壁纸" class="headerlink" title="必应壁纸"></a>必应壁纸</h2><ul><li>一位大佬写的接口,必应返回图片需要用户数据授权,URL 不固定,所以这个大佬当中介做了个 PHP 接口.<br><code>http://fly.atlinker.cn/api/bing/1920.php</code><br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="http://fly.atlinker.cn/api/bing/1920.php"></li></ul><hr><ul><li>必应官方 API</li></ul><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cn.bing.com/HPImageArchive.aspx?<span class="meta">format</span>=js<span class="variable">&amp;idx</span>=0<span class="variable">&amp;n</span>=1<span class="variable">&amp;mkt</span>=zh-CN</span><br></pre></td></tr></table></figure><ul><li>返回数据参下,需要浏览器处理才可呈现图像.</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;images&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;startdate&quot;</span>: <span class="string">&quot;20201201&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;fullstartdate&quot;</span>: <span class="string">&quot;202012011600&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;enddate&quot;</span>: <span class="string">&quot;20201202&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;/th?id=OHR.PorcupineBay_ZH-CN2252758146_1920x1080.jpg&amp;rf=LaDigue_1920x1080.jpg&amp;pid=hp&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;urlbase&quot;</span>: <span class="string">&quot;/th?id=OHR.PorcupineBay_ZH-CN2252758146&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;copyright&quot;</span>: <span class="string">&quot;基奈峡湾国家公园的尖顶湾，阿拉斯加 (© Sekar B/Shutterstock)&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;copyrightlink&quot;</span>: <span class="string">&quot;https://www.bing.com/search?q=%E5%9F%BA%E5%A5%88%E5%B3%A1%E6%B9%BE%E5%9B%BD%E5%AE%B6%E5%85%AC%E5%9B%AD&amp;form=hpcapt&amp;mkt=zh-cn&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;quiz&quot;</span>: <span class="string">&quot;/search?q=Bing+homepage+quiz&amp;filters=WQOskey:%22HPQuiz_20201201_PorcupineBay%22&amp;FORM=HPQUIZ&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;wp&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">&quot;hsh&quot;</span>: <span class="string">&quot;4b729291a1259dbc3355d68efe6de423&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;drk&quot;</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">&quot;top&quot;</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">&quot;bot&quot;</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">&quot;hs&quot;</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;tooltips&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;loading&quot;</span>: <span class="string">&quot;正在加载...&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;previous&quot;</span>: <span class="string">&quot;上一个图像&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;next&quot;</span>: <span class="string">&quot;下一个图像&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;walle&quot;</span>: <span class="string">&quot;此图片不能下载用作壁纸。&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;walls&quot;</span>: <span class="string">&quot;下载今日美图。仅限用作桌面壁纸。&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cn.bing.com/HPImageArchive.aspx?format=js&idx=0&n=1&mkt=zh-CN"></p><hr><h2 id="风景图"><a href="#风景图" class="headerlink" title="风景图"></a>风景图</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">api.ixiaowai.cn<span class="regexp">/gqapi/g</span>qapi.php</span><br></pre></td></tr></table></figure><h2 id="二次元-coser"><a href="#二次元-coser" class="headerlink" title="二次元 coser"></a>二次元 coser</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//u</span>ploadbeta.com<span class="regexp">/api/</span>pictures<span class="regexp">/random/</span>?key=二次元</span><br><span class="line">https:<span class="regexp">//u</span>ploadbeta.com<span class="regexp">/api/</span>pictures<span class="regexp">/random/</span>?key=动漫</span><br></pre></td></tr></table></figure><h2 id="小心身体-推女郎"><a href="#小心身体-推女郎" class="headerlink" title="小心身体-推女郎"></a>小心身体-推女郎</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//u</span>ploadbeta.com<span class="regexp">/api/</span>pictures<span class="regexp">/random/</span>?key=推女郎</span><br></pre></td></tr></table></figure><hr><h1 id="竖屏"><a href="#竖屏" class="headerlink" title="竖屏"></a>竖屏</h1><h2 id="二刺螈涩图"><a href="#二刺螈涩图" class="headerlink" title="二刺螈涩图"></a>二刺螈涩图</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>setu.awsl.ee/setu</span><br></pre></td></tr></table></figure><hr><!-- TODO --><h1 id="未知图"><a href="#未知图" class="headerlink" title="未知图"></a>未知图</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">风景随机图：http:<span class="regexp">//</span>pic.tsmp4.net<span class="regexp">/api/</span>fengjing/img.php</span><br><span class="line">女神随机图：http:<span class="regexp">//</span>pic.tsmp4.net<span class="regexp">/api/</span>nvsheng/img.php</span><br><span class="line">影视随机图：http:<span class="regexp">//</span>pic.tsmp4.net<span class="regexp">/api/yi</span>ngshi/img.php</span><br><span class="line">二次元随机图：http:<span class="regexp">//</span>pic.tsmp4.net<span class="regexp">/api/</span>erciyuan/img.php</span><br><span class="line">二次元随机图:http:<span class="regexp">//</span>www.dmoe.cc/random.php</span><br></pre></td></tr></table></figure><hr><h1 id="在线生成二维码"><a href="#在线生成二维码" class="headerlink" title="在线生成二维码"></a>在线生成二维码</h1><h2 id="百度网盘-可使用-https"><a href="#百度网盘-可使用-https" class="headerlink" title="百度网盘(可使用 https)"></a>百度网盘(可使用 https)</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>pan.baidu.com<span class="regexp">/share/</span>qrcode?w=<span class="number">150</span>&amp;h=<span class="number">150</span>&amp;url=</span><br></pre></td></tr></table></figure><h2 id="iClick-接口-无-https"><a href="#iClick-接口-无-https" class="headerlink" title="iClick 接口 (无 https)"></a>iClick 接口 (无 https)</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>bshare.optimix.asia/barCode?site=weixin&amp;url=</span><br></pre></td></tr></table></figure><h2 id="JiaThis-接口-无-https"><a href="#JiaThis-接口-无-https" class="headerlink" title="JiaThis 接口(无 https)"></a>JiaThis 接口(无 https)</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>s.jiathis.com/qrcode.php?url=</span><br></pre></td></tr></table></figure><h2 id="联图网-无-https"><a href="#联图网-无-https" class="headerlink" title="联图网(无 https)"></a>联图网(无 https)</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>qr.liantu.com/api.php?text=</span><br></pre></td></tr></table></figure><h2 id="K780-数据网-支持-https-和-http"><a href="#K780-数据网-支持-https-和-http" class="headerlink" title="K780 数据网(支持 https 和 http)"></a>K780 数据网(支持 https 和 http)</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http</span>://api.k<span class="number">780</span>.com:<span class="number">88</span>/?app=qr.get&amp;data=</span><br></pre></td></tr></table></figure><h2 id="QR-Code-Generator-https-接口"><a href="#QR-Code-Generator-https-接口" class="headerlink" title="QR Code Generator(https 接口)"></a>QR Code Generator(https 接口)</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>api.qrserver.com<span class="regexp">/v1/</span>create-qr-code/?size=<span class="number">150</span>x150&amp;data=</span><br></pre></td></tr></table></figure><hr><h1 id="鼠标点击-跟随特效-js"><a href="#鼠标点击-跟随特效-js" class="headerlink" title="鼠标点击/跟随特效 js"></a>鼠标点击/跟随特效 js</h1><h2 id="小心心特效"><a href="#小心心特效" class="headerlink" title="小心心特效"></a>小心心特效</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>cdn.jsdelivr.net<span class="regexp">/gh/</span>Sanarous<span class="regexp">/files@1.151/</span>js/clicklove.js</span><br></pre></td></tr></table></figure><h2 id="社会主义核心价值观"><a href="#社会主义核心价值观" class="headerlink" title="社会主义核心价值观"></a>社会主义核心价值观</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>cdn.jsdelivr.net<span class="regexp">/gh/</span>Sanarous<span class="regexp">/files@1.151/</span>js/clicksocialvalue.js</span><br></pre></td></tr></table></figure><h2 id="花花特效"><a href="#花花特效" class="headerlink" title="花花特效"></a>花花特效</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>cdn.jsdelivr.net<span class="regexp">/gh/</span>Sanarous<span class="regexp">/files@1.151/</span>js/click.min.js</span><br></pre></td></tr></table></figure><h2 id="跟随特效"><a href="#跟随特效" class="headerlink" title="跟随特效"></a>跟随特效</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>cdn.jsdelivr.net<span class="regexp">/gh/</span>sviptzk<span class="regexp">/HexoStaticFile@latest/</span>Hexo<span class="regexp">/js/m</span>ouse_snow.min.js</span><br></pre></td></tr></table></figure><hr><h1 id="获取网页截图"><a href="#获取网页截图" class="headerlink" title="获取网页截图"></a>获取网页截图</h1><ul><li>链接<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//im</span>age.thum.io<span class="regexp">/get/</span>width<span class="regexp">/1024/</span>crop<span class="regexp">/768/</span>https:<span class="regexp">//gi</span>thub.com/Weidows</span><br></pre></td></tr></table></figure></li><li>展示<br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://image.thum.io/get/width/1024/crop/768/https://github.com/Weidows"></li></ul><hr><h1 id="获取区域时间"><a href="#获取区域时间" class="headerlink" title="获取区域时间"></a>获取区域时间</h1><ul><li>time.js<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>time.is</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青年大学习跳过学习视频</title>
      <link href="post/others/TeenagersLearning/"/>
      <url>post/others/TeenagersLearning/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-11-30 17:50:20 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:12:06 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\others\TeenagersLearning.md * @Description:青年大学习--><ul><li><a href="#%E5%89%8D%E8%A8%80">前言</a></li><li><a href="#%E5%AE%89%E8%A3%85%E6%A0%B8%E5%BF%83">安装核心</a></li><li><a href="#%E8%BF%9B%E5%85%A5%E8%A7%86%E9%A2%91">进入视频</a></li><li><a href="#enjoy-it"><code>Enjoy it!</code></a></li></ul><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><h2 id="只是可以跳过视频播放-题还是需要自己做"><a href="#只是可以跳过视频播放-题还是需要自己做" class="headerlink" title="只是可以跳过视频播放,题还是需要自己做"></a>只是可以跳过视频播放,<code>题还是需要自己做</code></h2><blockquote><p>青年哟,不要用在奇怪的用途上!<br>2020-11-30 测试有效.</p></blockquote></li><li><h2 id="复制保存好下面的代码段-或者收藏网址-免得丢失下次不知道怎么做-2333"><a href="#复制保存好下面的代码段-或者收藏网址-免得丢失下次不知道怎么做-2333" class="headerlink" title="复制保存好下面的代码段,或者收藏网址,免得丢失下次不知道怎么做 2333."></a>复制保存好下面的代码段,或者收藏网址,免得丢失下次不知道怎么做 2333.</h2></li></ul><hr><h1 id="安装核心"><a href="#安装核心" class="headerlink" title="安装核心"></a>安装核心</h1><ul><li><h2 id="随便进入个公众号-比如-XXXX-团-给他发下面这段代码"><a href="#随便进入个公众号-比如-XXXX-团-给他发下面这段代码" class="headerlink" title="随便进入个公众号(比如 XXXX 团),给他发下面这段代码:"></a>随便进入个公众号(比如 XXXX 团),给他发下面这段代码:</h2><blockquote><p>只需要安装一次,以后一直生效.</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">debugmm.qq.com/?forcex5=true ;</span><br><span class="line"></span><br><span class="line">http:<span class="regexp">//</span>debugtbs.qq.com</span><br><span class="line"></span><br><span class="line">http:<span class="regexp">//</span>debugx5.qq.com</span><br></pre></td></tr></table></figure></li><li><h2 id="示例"><a href="#示例" class="headerlink" title="示例:"></a>示例:</h2><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/z2Epsq7kAv1NB6P.jpg" alt="Screenshot_20201130_175729_com.tencent.mm"></p></li><li><h2 id="然后从上到下把链接点开一下-没错-点开然后关掉就行"><a href="#然后从上到下把链接点开一下-没错-点开然后关掉就行" class="headerlink" title="然后从上到下把链接点开一下(没错,点开然后关掉就行)"></a>然后从上到下把链接点开一下(没错,<code>点开然后关掉</code>就行)</h2><ul><li>第三个链接需要打开一个东西,如下:<br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/UIMEakuX2x3sD1C.jpg" alt="Screenshot_20201130_184015_com.tencent.mm"></li><li>如果你截图时不想让小绿格显示,在这里再关掉.</li></ul></li><li><h2 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成!"></a>安装完成!</h2></li></ul><hr><h1 id="进入视频"><a href="#进入视频" class="headerlink" title="进入视频"></a>进入视频</h1><ul><li><h2 id="照常打开学习视频-右下角会出现上面图中那个小绿格"><a href="#照常打开学习视频-右下角会出现上面图中那个小绿格" class="headerlink" title="照常打开学习视频,右下角会出现上面图中那个小绿格"></a><code>照常打开学习视频</code>,右下角会出现上面图中那个<code>小绿格</code></h2><blockquote><p>那就说明你成功了! 如果没成的话或许是 Bug.</p></blockquote></li><li><h2 id="点开小绿格vConsole-输入下面指令"><a href="#点开小绿格vConsole-输入下面指令" class="headerlink" title="点开小绿格vConsole,输入下面指令:"></a>点开<code>小绿格vConsole</code>,输入下面指令:</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(<span class="string">&#x27;Bvideo&#x27;</span>).<span class="attribute">currentTime</span>=1000;</span><br></pre></td></tr></table></figure></li><li><p>示例:<br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/SoapzrVJ1jsbnEQ.jpg" alt="Screenshot_20201130_185325_com.tencent.mm"></p></li></ul><hr><h1 id="Enjoy-it"><a href="#Enjoy-it" class="headerlink" title="Enjoy it!"></a><code>Enjoy it!</code></h1>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown中一些新奇写法.</title>
      <link href="post/experience/markdown/"/>
      <url>post/experience/markdown/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-11-30 00:09:37 * @LastEditors: Weidows * @LastEditTime: 2021-04-10 15:42:47 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\experience\markdown.md * @Description:--><ul><li><a href="#%E5%9F%BA%E6%9C%AC%E7%9A%84">基本的</a></li><li><a href="#%E6%96%B0%E5%A5%87%E5%86%99%E6%B3%95">新奇写法</a><ul><li><a href="#"><code>![]()</code></a></li><li><a href="#-url"><code>[]: URL</code></a></li><li><a href="#%E5%AF%B9%E8%AF%9D">对话</a></li><li><a href="#%E5%BC%95%E7%94%A8%E6%9D%A1%E7%9B%AE">引用+条目</a></li></ul></li><li><a href="#%E6%96%87%E5%AD%97%E6%A0%B7%E5%BC%8F">文字样式</a><ul><li><a href="#%E6%96%9C%E4%BD%93-%E6%88%96-_%E6%96%9C%E4%BD%93_"><code>*斜体*</code> 或 <code>_斜体_</code></a></li><li><a href="#%E7%B2%97%E4%BD%93"><code>**粗体**</code></a></li><li><a href="#%E6%A0%87%E8%AF%86%E5%AD%97"><code>标识字</code></a></li><li><a href="#%E4%B8%AD%E5%88%92%E7%BA%BF"><code>~~中划线~~</code></a></li></ul></li><li><a href="#html-%E6%A0%87%E7%AD%BE">HTML 标签</a><ul><li><a href="#%E6%94%B6%E7%BC%A9%E6%A1%86">收缩框</a></li><li><a href="#%E4%B8%8B%E5%88%92%E7%BA%BF">下划线</a></li><li><a href="#%E9%94%AE%E7%9B%98%E6%A0%B7%E5%BC%8F">键盘样式</a></li></ul></li><li><a href="#%E6%B3%A8%E6%84%8F%E7%82%B9">注意点</a></li></ul><h1 id="基本的"><a href="#基本的" class="headerlink" title="基本的"></a>基本的</h1><ul><li><p><code>&gt; 内容</code></p><ul><li>展示:</li></ul><blockquote><p>在这里做个展示.</p></blockquote></li></ul><hr><ul><li><p><code>- ## 内容</code></p><ul><li><p>段落形式的标题,如下</p></li><li><h3 id="这是一个段落标题-h3-字号"><a href="#这是一个段落标题-h3-字号" class="headerlink" title="这是一个段落标题,h3 字号"></a>这是一个段落标题,h3 字号</h3></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="新奇写法"><a href="#新奇写法" class="headerlink" title="新奇写法"></a>新奇写法</h1><h2 id=""><a href="#" class="headerlink" title="[![]()]()"></a><code>[![]()]()</code></h2><ul><li><p>这样写是把图片嵌套进了链接里,如下:</p><p><a href="https://i.loli.net/2020/11/30/o6shLZ1G53qliBY.jpg"><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/o6shLZ1G53qliBY.jpg" alt="图片"></a></p></li><li><p>本来只是展示图片,现在点击图片跳转了.</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">![图片</span>](<span class="link">https://i.loli.net/2020/11/30/o6shLZ1G53qliBY.jpg</span>)](<span class="link">https://i.loli.net/2020/11/30/o6shLZ1G53qliBY.jpg</span>)</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="URL"><a href="#URL" class="headerlink" title="[]: URL"></a><code>[]: URL</code></h2><ul><li><p>类似定义变量(引用)</p></li><li><p>上面指定,下面可以引用.</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">github-shield</span>]: <span class="link">https://img.shields.io/github/stars/Weidows/vscode-weidows-theme?style=social</span></span><br><span class="line">[<span class="symbol">github-url</span>]: <span class="link">https://github.com/Weidows/vscode-weidows-theme</span></span><br><span class="line">[<span class="symbol">vscode-shield</span>]: <span class="link">https://img.shields.io/visual-studio-marketplace/r/TabNine.tabnine-vscode?logo=visual-studio-code&amp;style=social</span></span><br><span class="line">[<span class="symbol">vscode-url</span>]: <span class="link">https://bit.ly/3pqj7o2</span></span><br><span class="line"></span><br><span class="line">[<span class="string">![Github Repo</span>][<span class="symbol">github-shield</span>]][<span class="symbol">github-url</span>]</span><br><span class="line">[<span class="string">![VSCode Plugin</span>][<span class="symbol">vscode-shield</span>]][<span class="symbol">vscode-url</span>]</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="对话"><a href="#对话" class="headerlink" title="对话"></a>对话</h2><blockquote><p>发现自: <a href="http://blog.2baxb.me/">Axb 的自我修养</a>,样式如下:</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210329091216.png" alt="20210329091216" /><ul><li><p>写法:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">比如某天...</span><br><span class="line"></span><br><span class="line"><span class="quote">&gt; 喂?是....</span></span><br></pre></td></tr></table></figure></li><li><p>样式:</p><p>比如某天…</p><blockquote><p>喂?是….</p></blockquote></li></ul><hr><h2 id="引用-条目"><a href="#引用-条目" class="headerlink" title="引用+条目"></a>引用+条目</h2><ul><li><p>样式:</p><blockquote><ul><li>对应不同业务需求,存在 N 中不同的监听器接口可供实现.</li><li>监听器经常在 GUI 编程中使用.</li></ul></blockquote></li><li><p>写法:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; - 对应不同业务需求,存在 N 中不同的监听器接口可供实现.</span></span><br><span class="line"><span class="quote">&gt; - 监听器经常在 GUI 编程中使用.</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h1><h2 id="斜体-或-斜体"><a href="#斜体-或-斜体" class="headerlink" title="*斜体* 或 _斜体_"></a><code>*斜体*</code> 或 <code>_斜体_</code></h2><ul><li>样式:<br><em>斜体</em></li></ul><hr><h2 id="粗体"><a href="#粗体" class="headerlink" title="**粗体**"></a><code>**粗体**</code></h2><ul><li>样式:<br><strong>粗体</strong></li></ul><h2 id="标识字"><a href="#标识字" class="headerlink" title="标识字"></a><code>标识字</code></h2><ul><li><p>样式:</p><p><code>标识字</code></p></li></ul><hr><h2 id="中划线"><a href="#中划线" class="headerlink" title="~~中划线~~"></a><code>~~中划线~~</code></h2><ul><li>样式<br><del>样式演示</del></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="HTML-标签"><a href="#HTML-标签" class="headerlink" title="HTML 标签"></a>HTML 标签</h1><h2 id="收缩框"><a href="#收缩框" class="headerlink" title="收缩框"></a>收缩框</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">summary</span>&gt;</span>收缩框标题<span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">  这里写内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>演示<details>  <summary>收缩框标题</summary>  这里写内容</details></li></ul><hr><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>样式<br><u>文字</u></li></ul><hr><h2 id="键盘样式"><a href="#键盘样式" class="headerlink" title="键盘样式"></a>键盘样式</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Ctrl + shift + [<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>样式<br><kbd>Ctrl + shift + [</kbd></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h1><ol><li><p>markdown 文件写的超过 1K 行后,每次格式化和页面加载的性能损耗是恐怖的,所以尽量控制 markdown 行数别太多</p></li><li><p>不同平台对 markdown 渲染不同,有可能会产生格式不对称问题.</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> experience </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PS中一些小用法</title>
      <link href="post/design/PS/"/>
      <url>post/design/PS/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-11-29 12:05:07 * @LastEditors: Weidows * @LastEditTime: 2021-03-03 16:44:18 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\design\PS.md * @Description:--><ul><li><a href="#%E5%BF%AB%E6%8D%B7%E9%94%AE">快捷键</a></li><li><a href="#%E8%A7%A3%E9%94%81%E5%9B%BE%E5%B1%82">解锁图层</a></li><li><a href="#%E9%80%8F%E6%98%8E%E8%83%8C%E6%99%AF">透明背景</a></li><li><a href="#%E5%AE%9A%E5%90%91%E5%8F%98%E8%89%B2">定向变色</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">复制图层</td><td align="center"><code>Ctrl + J</code></td></tr><tr><td align="center">调整图层位置和大小</td><td align="center"><code>Ctrl + T</code></td></tr></tbody></table><hr><h1 id="解锁图层"><a href="#解锁图层" class="headerlink" title="解锁图层"></a>解锁图层</h1><ul><li><p>索引模式无法解锁</p><ul><li>图像-&gt;模式-&gt;(索引颜色-&gt;RGB 颜色)</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/nAuKRTkt5J1zZOo.jpg" alt="20201129120716"></p></li><li><p>解锁</p><ul><li>双击图层</li><li>把锁拖进垃圾桶图标</li></ul></li></ul><hr><h1 id="透明背景"><a href="#透明背景" class="headerlink" title="透明背景"></a>透明背景</h1><ul><li>选择-&gt;色彩范围，点击取色<br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/QxWfLSMuHa9GD1e.jpg" alt="20201129121309"></li><li>选中后按 Delete</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="定向变色"><a href="#定向变色" class="headerlink" title="定向变色"></a>定向变色</h1><ul><li><p>变色前后对比</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/10/tjFf2dSG4yKBnOV.png" alt="20210210193706" /></li><li><p>首先选择颜色范围,参考<a href="#%E9%80%8F%E6%98%8E%E8%83%8C%E6%99%AF">透明背景</a></p></li><li><p>然后右键选择<code>填充</code>,或者在菜单里找<code>【图像】——【调整】——【替换颜色】</code></p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/10/dxuwaHpbknNlFAi.png" alt="20210210193939" /></li><li><p>填入目标色即可.</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> PS </tag>
            
            <tag> 设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🍗各种地方用到的快捷键</title>
      <link href="post/others/backup/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>post/others/backup/%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-11-24 22:33:53 * @LastEditors: Weidows * @LastEditTime: 2021-04-11 11:38:35 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\others\backup\快捷键.md * @Description:--><ul><li><a href="#%E9%80%9A%E7%94%A8">通用</a><ul><li><a href="#%E4%BF%AE%E6%94%B9%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE">修改的快捷键</a></li></ul></li><li><a href="#vscode">VScode</a><ul><li><a href="#%E9%9D%9E%E4%BF%AE%E6%94%B9%E9%94%AE%E4%BD%8D%E6%8F%92%E4%BB%B6%E9%94%AE%E4%BD%8D">非修改键位/插件键位</a></li><li><a href="#mover-%E9%9D%9E%E4%BF%AE%E6%94%B9%E5%B7%B2%E5%BC%83%E7%94%A8"><del>Mover 非修改</del>(已弃用)</a></li><li><a href="#%E9%94%AE%E4%BD%8D%E4%BF%AE%E6%94%B9%E5%90%8E">键位修改后.</a></li></ul></li><li><a href="#idea">IDEA</a><ul><li><a href="#%E5%8E%9F%E7%94%9F">原生</a></li><li><a href="#%E7%BB%A7%E6%89%BF-vscode-%E9%94%AE%E4%BD%8D%E4%BF%AE%E6%94%B9">继承 VScode 键位修改</a></li><li><a href="#%E6%99%BA%E8%83%BD%E8%A1%A5%E5%85%A8">智能补全</a></li></ul></li><li><a href="#%E6%B5%8F%E8%A7%88%E5%99%A8">浏览器</a><ul><li><a href="#%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%B8%A6">浏览器自带</a></li><li><a href="#%E4%BF%AE%E6%94%B9">修改</a></li></ul></li><li><a href="#git">Git</a></li><li><a href="#qq">QQ</a></li><li><a href="#%E6%90%9C%E7%8B%97">搜狗</a><ul><li><a href="#%E9%97%AE%E9%A2%98">问题</a></li></ul></li><li><a href="#windows">Windows</a><ul><li><a href="#%E5%9F%BA%E6%9C%AC">基本</a></li><li><a href="#windows-%E5%BE%BD%E6%A0%87%E9%94%AE">Windows 徽标键</a></li><li><a href="#%E8%A7%A6%E6%91%B8%E6%9D%BF">触摸板</a><ul><li><a href="#%E5%8E%9F%E9%85%8D">原配</a></li><li><a href="#%E4%BF%AE%E6%94%B9%E5%90%8E">修改后</a></li></ul></li></ul></li><li><a href="#utools">Utools</a><ul><li><a href="#%E5%BF%AB%E6%8D%B7%E9%94%AE">快捷键</a></li><li><a href="#%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB">数据迁移</a></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h1><ul><li><p><code>IDEA</code> 与 <code>VScode</code>与 <code>浏览器</code>(某些部分) 通用性的非修改的快捷键</p><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">全屏</td><td align="center"><code>F11</code></td></tr><tr><td align="center">关闭标签 // 后台打开链接</td><td align="center"><code>中键</code></td></tr><tr><td align="center">搜索 // 新建标签 // 关闭标签 // 保存</td><td align="center"><code>Ctrl + F // T // W(F4) // S</code></td></tr><tr><td align="center">恢复刚关闭的标签</td><td align="center"><code>Ctrl + shift + T</code></td></tr><tr><td align="center">切换左右标签 // 转到第 N 编辑器块</td><td align="center"><code>Ctrl + PageUp/PageDown //~ / 1 / 2 / 3 ...</code></td></tr><tr><td align="center">放大/缩小</td><td align="center"><code>Ctrl + +(=) / -(-)</code></td></tr><tr><td align="center">行//块注释</td><td align="center"><code>shift + alt + A</code>//<code>Ctrl + /</code></td></tr><tr><td align="center">撤销 / 重做</td><td align="center"><code>Ctrl + Z</code> / <code>Ctrl + shift + Z</code></td></tr><tr><td align="center">查找(替换) / 全局查找(替换) / 文件内逐词遍历(方便)</td><td align="center"><code>Ctrl + F(H)</code> / <code>Ctrl + shift + F(H)</code> / <code>F3</code></td></tr><tr><td align="center">在多个列上添加光标 // 多个行尾添加光标</td><td align="center"><code>Ctrl + alt + ↑ / ↓</code>/<code>(中键)</code> // <code>在行首添加完再转行尾</code></td></tr><tr><td align="center">移动编辑器组</td><td align="center"><code>Ctrl + K + ←/↑/↓/→</code></td></tr><tr><td align="center">把当前行上/下移 // 向下/上复制一行</td><td align="center"><code>alt + ↑ / ↓</code> // <code>shift + alt + ↓ / ↑</code></td></tr><tr><td align="center">格式化</td><td align="center"><code>shift + alt + F</code></td></tr><tr><td align="center">跳转</td><td align="center"><code>Ctrl/alt + G</code></td></tr><tr><td align="center">向右拆分编辑器</td><td align="center"><code>Ctrl + \</code></td></tr><tr><td align="center">功能键区</td><td align="center"><code>shift + 小键盘数字</code></td></tr><tr><td align="center">源代码操作(生成)</td><td align="center"><code>alt + insert</code> / <code>shift + alt + Num0</code></td></tr><tr><td align="center">快速修复</td><td align="center"><code>alt + \</code></td></tr></tbody></table><hr></li></ul><h2 id="修改的快捷键"><a href="#修改的快捷键" class="headerlink" title="修改的快捷键"></a>修改的快捷键</h2><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">上 / 下 / 左 / 右移</td><td align="center"><code>Alt + I / K / J(U) / L(O)</code></td></tr><tr><td align="center">转到行首/尾 // 选中到行首/尾(不包含缩进)</td><td align="center"><code>alt + N(home) / M(end)</code> // <code>shift + Alt + N / M</code></td></tr><tr><td align="center">换行//向上扩展行</td><td align="center"><code>alt + ,</code> / <code>Ctrl + enter</code> // <code>Ctrl + Shift + Enter</code></td></tr><tr><td align="center">删除行</td><td align="center"><code>alt + ;</code></td></tr></tbody></table><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="VScode"><a href="#VScode" class="headerlink" title="VScode"></a>VScode</h1><h2 id="非修改键位-插件键位"><a href="#非修改键位-插件键位" class="headerlink" title="非修改键位/插件键位"></a>非修改键位/插件键位</h2><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">选中当前行 / 返回上一个光标位置</td><td align="center"><code>Ctrl + L</code> / <code>Ctrl + U</code></td></tr><tr><td align="center">非调试运行/运行</td><td align="center"><code>(Ctrl) + F5</code></td></tr><tr><td align="center">收缩/扩展选择</td><td align="center"><code>shift + alt + ←</code> / <code>→</code></td></tr><tr><td align="center">快速选择引号内容</td><td align="center"><code>alt + A</code></td></tr><tr><td align="center">资源管理器 / 项目管理器</td><td align="center"><code>Ctrl + shift + E</code> / <code>shift + alt + P</code></td></tr><tr><td align="center">保持打开状态 / 固定标签</td><td align="center"><code>Ctrl + K &amp;&amp; Enter</code> / <code>Ctrl + K &amp;&amp; shift + Enter</code></td></tr><tr><td align="center">插入文件头 / 函数注释 / Code Runner</td><td align="center"><code>Ctrl+ alt + I</code> / <code>T</code> / <code>N</code></td></tr><tr><td align="center">开关侧边栏 / 开关 Console</td><td align="center"><code>Ctrl + B</code> / <code>Ctrl + ~</code></td></tr><tr><td align="center">​​​​​Quokka 运行 JS</td><td align="center"><code>Ctrl + K + Q</code></td></tr><tr><td align="center">Find all Reference</td><td align="center"><code>Ctrl + alt + F12</code></td></tr><tr><td align="center">上/下页跳转光标 // 视图上/下滚动(翻页)</td><td align="center"><code>PageUp / PageDown</code> / <code>alt + ↑(PageUp) / ↓(PageDown)</code></td></tr><tr><td align="center">markdown 预览 / picgo 插入/粘贴图片 / 插入书签</td><td align="center"><code>Ctrl + Shift + V</code> / <code>E/U</code> / <code>K</code></td></tr><tr><td align="center">匹配文本后面出现光标(贼重要) / 全文匹配文本逐一遍历选择(好用)</td><td align="center"><code>Ctrl + shift + L</code> / <code>Ctrl + D</code></td></tr><tr><td align="center">Java 重构 // Debug</td><td align="center"><code>Ctrl + shift + R</code> // <code>Ctrl + alt + N</code></td></tr><tr><td align="center">单词训练</td><td align="center"><code>alt + shift + Q</code></td></tr></tbody></table><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/dADwqUKR2WHoTan.jpg" alt="tjT21PGqH5xQNwz"></p><hr><h2 id="Mover-非修改-已弃用"><a href="#Mover-非修改-已弃用" class="headerlink" title="Mover 非修改(已弃用)"></a><del>Mover 非修改</del>(已弃用)</h2><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">剪切/复制/粘贴</td><td align="center"><code>alt + X / C / V</code></td></tr><tr><td align="center">跳行</td><td align="center"><code>alt + 数字 + ↑ / ↓</code></td></tr><tr><td align="center">上下左右移动视图</td><td align="center"><code>alt + E / D / S / F</code></td></tr></tbody></table><hr><h2 id="键位修改后"><a href="#键位修改后" class="headerlink" title="键位修改后."></a>键位修改后.</h2><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">触发代码补全 /</td><td align="center"><code>Ctrl + I</code></td></tr><tr><td align="center">向左/右缩进 // 全折叠/全展开</td><td align="center"><code>(shift + tab) Ctrl + [ / ]</code> // <code>Ctrl + shift + [ / ]</code></td></tr><tr><td align="center">markdown 创建文章目录</td><td align="center"><code>alt + &#39;</code></td></tr><tr><td align="center">浏览器/侧边栏打开//关闭 Server</td><td align="center"><code>alt + [</code> / <code>]</code> (右键菜单)<code>//</code>Ctrl + shift + S`</td></tr><tr><td align="center">终止//最大化终端</td><td align="center"><code>alt + . // /</code></td></tr></tbody></table><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h1><h2 id="原生"><a href="#原生" class="headerlink" title="原生"></a>原生</h2><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">引入变量(右键-&gt;重构-&gt;也可以)</td><td align="center"><code>Ctrl + alt + V</code></td></tr><tr><td align="center">生成代码</td><td align="center"><code>alt + insert(shift + Num0)</code></td></tr></tbody></table><h2 id="继承-VScode-键位修改"><a href="#继承-VScode-键位修改" class="headerlink" title="继承 VScode 键位修改"></a>继承 VScode 键位修改</h2><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">基本快捷键</td><td align="center"><code>VScode keyboard map</code></td></tr><tr><td align="center">Mover</td><td align="center"><code>已手动适配</code></td></tr></tbody></table><hr><h2 id="智能补全"><a href="#智能补全" class="headerlink" title="智能补全"></a>智能补全</h2><table><thead><tr><th align="center">输入</th><th align="center">补全</th></tr></thead><tbody><tr><td align="center">fori</td><td align="center">for(int i = 0;i &lt; ;i++){}</td></tr><tr><td align="center">100.for</td><td align="center">for(int i = 0;i &lt; ;i++){}</td></tr><tr><td align="center">数组对象 a.for</td><td align="center">for (int i : a) {}</td></tr><tr><td align="center">foreach</td><td align="center">for(:){}</td></tr><tr><td align="center">ifn</td><td align="center">if(args == null)</td></tr><tr><td align="center">sout</td><td align="center">System.out.println()</td></tr><tr><td align="center">xxx.sout</td><td align="center">System.out.println(xxx)</td></tr><tr><td align="center">st</td><td align="center">String</td></tr><tr><td align="center">main/psvm</td><td align="center">public static void main(String[] args) {}</td></tr></tbody></table><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h1><h2 id="浏览器自带"><a href="#浏览器自带" class="headerlink" title="浏览器自带"></a>浏览器自带</h2><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">选中地址栏</td><td align="center"><code>alt + D</code> / <code>Ctrl + L</code></td></tr><tr><td align="center">新建标签</td><td align="center"><code>Ctrl + T</code></td></tr><tr><td align="center">打开下载管理器</td><td align="center"><code>shift + X</code></td></tr><tr><td align="center">刷新</td><td align="center"><code>Ctrl + R</code></td></tr><tr><td align="center">添加收藏夹</td><td align="center"><code>Ctrl + D</code></td></tr><tr><td align="center">下载管理器</td><td align="center"><code>Ctrl + J</code></td></tr><tr><td align="center">开关 Dark Reader</td><td align="center"><code>shift + alt + D</code></td></tr><tr><td align="center">后台跳转链接</td><td align="center"><code>Ctrl + 左键</code></td></tr><tr><td align="center">检查元素</td><td align="center"><code>Ctrl + shift + C</code></td></tr></tbody></table><hr><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">暂无</td><td align="center"></td></tr></tbody></table><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">提交+推送</td><td align="center"><code>Ctrl + Enter</code></td></tr></tbody></table><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="QQ"><a href="#QQ" class="headerlink" title="QQ"></a>QQ</h1><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">打开消息面板</td><td align="center"><code>Ctrl + alt + Z</code></td></tr></tbody></table><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="搜狗"><a href="#搜狗" class="headerlink" title="搜狗"></a>搜狗</h1><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">暂无</td><td align="center"></td></tr></tbody></table><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ul><li><p>有时候会遇到上传配置失败的情况</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/02/06/snJxi9YVkeulmf2.png" alt="20210206124107" /></li><li><p>可能是系统设置了代理,比如 clash 会<code>开启代理</code>,暂时关掉就好了.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><h2 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h2><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">任务管理器</td><td align="center"><code>Ctrl + shift + Esc</code></td></tr></tbody></table><hr><h2 id="Windows-徽标键"><a href="#Windows-徽标键" class="headerlink" title="Windows 徽标键"></a>Windows 徽标键</h2><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">emoji 输入面板</td><td align="center"><code>win + . / ;</code></td></tr><tr><td align="center">最小化除了当前窗口的所有窗口//所有窗口</td><td align="center"><code>win + home // D</code></td></tr><tr><td align="center">预览桌面</td><td align="center"><code>win + ,</code></td></tr><tr><td align="center">打开我的电脑//运行//控制中心</td><td align="center"><code>win + E//R//A</code></td></tr><tr><td align="center">window 语音听写</td><td align="center"><code>win + H(hear)</code></td></tr><tr><td align="center">锁屏</td><td align="center"><code>win + L(Lock)</code></td></tr><tr><td align="center">电脑基本信息</td><td align="center"><code>win + pausebreak</code></td></tr></tbody></table><hr><h2 id="触摸板"><a href="#触摸板" class="headerlink" title="触摸板"></a>触摸板</h2><h3 id="原配"><a href="#原配" class="headerlink" title="原配"></a>原配</h3><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">视频前进/后退</td><td align="center"><code>双指左/右拖</code></td></tr></tbody></table><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/q6tg4mwoeWrAbaV.jpg" alt="ygIOkb9ur1cdpMe"></p><h3 id="修改后"><a href="#修改后" class="headerlink" title="修改后"></a>修改后</h3>  <img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/27/zdx87UKBR5WYM2n.png" alt="20201227104041" /><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Utools"><a href="#Utools" class="headerlink" title="Utools"></a>Utools</h1><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">打开</td><td align="center"><code>alt + space</code></td></tr><tr><td align="center">面板上下选择//快捷选择</td><td align="center"><code>alt + J/K</code> // <code>alt + 1/2/3...</code></td></tr></tbody></table><hr><h2 id="数据迁移"><a href="#数据迁移" class="headerlink" title="数据迁移"></a>数据迁移</h2><ul><li><p>退出程序,把数据目录剪切过来,然后执行:</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mklink /d &quot;C:<span class="symbol">\U</span>sers<span class="symbol">\2</span>9845<span class="symbol">\A</span>ppData<span class="symbol">\R</span>oaming<span class="symbol">\u</span>Tools&quot; &quot;D:<span class="symbol">\G</span>ame<span class="symbol">\S</span>coop<span class="symbol">\p</span>ersist<span class="symbol">\u</span>Tools&quot;</span><br></pre></td></tr></table></figure></li><li><p>会生成一个映射文件夹.</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
          <category> backup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VScode </tag>
            
            <tag> 备忘录 </tag>
            
            <tag> IDEA </tag>
            
            <tag> 推荐 </tag>
            
            <tag> 工具 </tag>
            
            <tag> 快捷键 </tag>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>⬆ Node.js环境配置 &amp;&amp; 使用</title>
      <link href="post/Web/Node/node/"/>
      <url>post/Web/Node/node/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-11-24 21:59:29 * @LastEditors: Weidows * @LastEditTime: 2021-03-27 10:26:31 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Web\Node\node.md * @Description:--><ul><li><a href="#%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE">环境配置</a></li><li><a href="#%E5%AE%89%E8%A3%85-yarn">安装 yarn</a></li><li><a href="#%E6%8D%A2%E9%98%BF%E9%87%8C%E6%BA%90">换阿里源</a></li><li><a href="#%E4%BE%9D%E8%B5%96%E5%8D%87%E7%BA%A7">依赖升级</a></li><li><a href="#%E5%8F%82%E6%95%B0%E5%8F%8A%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4">参数及常用命令</a><ul><li><a href="#-gglobal"><code>-g(global)</code></a></li><li><a href="#-save"><code>-save</code></a></li></ul></li><li><a href="#local-%E5%85%A8%E5%B1%80%E4%BE%9D%E8%B5%96">local 全局依赖</a></li><li><a href="#%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99">运行报错</a></li><li><a href="#%E6%8E%A8%E8%8D%90%E6%96%87%E7%AB%A0">推荐文章</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><ul><li><p>之前一直在乐此不疲的修改 npm 和 yarn 的 global 路径,因为每次 Node.js 更新会导致目录索引失效…</p></li><li><p>后来发现,Scoop 完美解决了这个问题!</p></li><li><p>它使用<code>Scoop/persist</code>这个文件夹来挂载数据,不影响程序本身,即使更新也不会影响.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="安装-yarn"><a href="#安装-yarn" class="headerlink" title="安装 yarn"></a>安装 yarn</h1><ul><li><p>Node.js 是 JavaScript 运行环境,某个项目运行起来可能会需要一些依赖</p></li><li><p>npm 和 yarn 就是管理这些依赖的</p></li><li><p>安装 node.js 后自带 npm,并不会带 yarn(但是建议使用 yarn)</p></li><li><p>虽然 npm 与 yarn 是同一类东西,但是可以用 npm 安装 yarn(神不神奇,因为 npm 和 yarn 本身就是依赖)</p></li><li><p>用 Scoop 安装(<code>零配置</code>)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install yarn</span><br></pre></td></tr></table></figure><ul><li><p>(也可以去官网下载安装,不过那样更复杂麻烦)</p></li><li><p>或者用 npm 安装(这样的话需要进行一些目录配置)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g  yarn</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul></li></ul><h1 id="换阿里源"><a href="#换阿里源" class="headerlink" title="换阿里源"></a>换阿里源</h1><ul><li><p>替换源地址</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li><p>检查</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm<span class="built_in"> config </span><span class="builtin-name">get</span> registry</span><br><span class="line">yarn<span class="built_in"> config </span><span class="builtin-name">get</span> registry</span><br></pre></td></tr></table></figure></li><li><p>也可以直接定位 npm 和 yarn 的配置文件 -&gt; <code>C:\Users\用户名</code></p><ul><li>这个目录下的<code>.npmrc和.yarnrc</code></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="依赖升级"><a href="#依赖升级" class="headerlink" title="依赖升级"></a>依赖升级</h1><ul><li><p>package path 简介</p><ul><li>Node.Js 的包管理器有<code>npm,cnpm,yarn</code>等,通过上面操作后咱就用<code>npm</code><ul><li>(因为 cnpm 会可能会出现包中包现象,导致很多模块冲突报错)</li></ul></li><li>Node.Js 通过 npm 可以安装 hexo 模块,hexo 里面的插件也是通过 npm 安装</li><li>npm 安装/升级/移除的模块都在<code>node_modules/</code>里面,不会影响外面的东西</li></ul></li><li><p>npm check &amp;&amp; upgrade(node 插件)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g npm-check</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g npm-upgrade</span><br></pre></td></tr></table></figure><ul><li>使用:直接<code>npm-check</code>/<code>npm-upgrade</code></li></ul></li><li><p>缓存清理</p><ul><li>会清空 node_cache</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean --force</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="参数及常用命令"><a href="#参数及常用命令" class="headerlink" title="参数及常用命令"></a>参数及常用命令</h1><blockquote><p><a href="https://www.cnblogs.com/lililia/p/10482169.html">详见 yarn 的常用命令</a></p></blockquote><ul><li>按照 package.json 文件的配置安装 module 到 node_modules/里面</li></ul><h2 id="g-global"><a href="#g-global" class="headerlink" title="-g(global)"></a><code>-g(global)</code></h2><ul><li>全局安装/卸载</li><li>注意脚手架如果是全局安装的话,卸载也要加上<code>-g</code>才能全局卸载.</li></ul><hr><h2 id="save"><a href="#save" class="headerlink" title="-save"></a><code>-save</code></h2><ul><li>默认直接 install 会安装进那个目录,但是不会修改 package.json 文件</li><li>加上-save 会修改文件,使下次 npm install 也会安装</li><li>写在前面和后面都可以<ul><li><code>npm install --save hexo-tag-aplayer</code></li><li><code>npm install hexo-tag-aplayer --save</code></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="local-全局依赖"><a href="#local-全局依赖" class="headerlink" title="local 全局依赖"></a>local 全局依赖</h1><ul><li>npm</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g eslint</span><br></pre></td></tr></table></figure><hr><ul><li>yarn</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn global add hexo-cli</span><br><span class="line">yarn global add vsce</span><br></pre></td></tr></table></figure><hr><ul><li><p>路径</p><ul><li><p>用 Scoop 安装的,其数据挂载<code>摆脱了C盘!</code></p></li><li><p>npm 与 yarn 管理方式并不全然一样</p></li><li><p>npm: <code>Scoop\persist\nodejs\bin</code></p></li><li><p>yarn: <code>D:\Game\Scoop\persist\yarn\global</code></p></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="运行报错"><a href="#运行报错" class="headerlink" title="运行报错"></a>运行报错</h1><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node_modules\<span class="keyword">pascal</span>-<span class="keyword">case</span>\dist\<span class="keyword">index</span>.js:<span class="number">21</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><ul><li><p>有可能是依赖有故障了,其实用不着挨个排除是哪个依赖有问题</p></li><li><p>直接把<code>node_modules</code>整个删掉,然后<code>npm install</code>就好了.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="推荐文章"><a href="#推荐文章" class="headerlink" title="推荐文章"></a>推荐文章</h1><blockquote><p><a href="https://mp.weixin.qq.com/s?__biz=MzIyMDkwODczNw==&mid=2247496886&idx=1&sn=513b863b8468fcfaf8c8e750ce266899&chksm=97c66918a0b1e00eb920d278ae03b10ebe1d765db0e17cb8fe5bc60b737fb3c6af1d96fcf724&mpshare=1&scene=23&srcid=0327cIro7WXAp1jgObHXuKCE&sharer_sharetime=1616807246544&sharer_shareid=ff6bb8cfd138294e80df076b8b76232d#rd">很多人上来就删除的 package-lock.json，还有这么多你不知道的（深度内容）</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
            <tag> package </tag>
            
            <tag> npm </tag>
            
            <tag> yarn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub操作上的一些问题</title>
      <link href="post/tools/Git/matters/"/>
      <url>post/tools/Git/matters/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-11-21 19:28:51 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:03:15 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\tools\Git\matters.md * @Description:--><ul><li><a href="#%E9%A6%96%E9%A1%B5%E7%BB%BF%E6%A0%BC%E5%AD%90">首页绿格子</a></li><li><a href="#license-%E9%80%89%E6%8B%A9">License 选择</a></li><li><a href="#%E5%9B%BD%E5%86%85%E6%97%B6%E5%8C%BA%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98">国内时区错位问题</a></li><li><a href="#%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D">博客域名</a></li><li><a href="#%E5%88%A0%E9%99%A4%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF">删除远程分支</a></li><li><a href="#git-%E5%87%AD%E8%AF%81">Git 凭证</a><ul><li><a href="#%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95">解决办法</a></li></ul></li><li><a href="#%E8%A2%AB%E5%A2%99%E9%97%AE%E9%A2%98">被墙问题</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="首页绿格子"><a href="#首页绿格子" class="headerlink" title="首页绿格子"></a>首页绿格子</h1><ul><li>Github 不显示 fork 仓库的 commit<ul><li>比如 Auto-green 需要独立出来</li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="License-选择"><a href="#License-选择" class="headerlink" title="License 选择"></a>License 选择</h1><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/46lbZztfLjkM2n7.jpg" alt="License"></p><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="国内时区错位问题"><a href="#国内时区错位问题" class="headerlink" title="国内时区错位问题"></a>国内时区错位问题</h1><ul><li>我在东八区,布置的 GitHub Action 是 0 点执行<ul><li>结果是在早上八点多才执行的(大概是八点半左右,误差&lt;5min)</li><li>因为 GitHub 服务器不是在国内,时区不同,其对应的大概是欧洲伦敦那块的标准时区.</li></ul></li><li><code>结论</code>:布置 Action 定时任务时,设置的时间要早八个小时(对应东八区)</li></ul><h1 id="博客域名"><a href="#博客域名" class="headerlink" title="博客域名"></a>博客域名</h1><ul><li><p>GitHub 与 Gitee-pages 部署域名规则不同.</p></li><li><p>github 上当且仅当 Repo 名字为<code>userName.github.io</code>时,域名为<code>userName.github.io</code></p><ul><li>其他 Repo 名字为<code>userName.github.io/repoName/</code></li></ul></li><li><p>Gitee 是当且仅当 Repo 名字为<code>userName.gitee.io</code>时,域名为<code>userName.gitee.io</code></p><ul><li>否则类似上面</li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h1><ul><li>不能删除当前默认分支.</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="Git-凭证"><a href="#Git-凭证" class="headerlink" title="Git 凭证"></a>Git 凭证</h1><ul><li><p>本地 git 有时候会遇到 github 凭证失效问题</p></li><li><p>在 VScode 里的 git 仓库失效后会老是催你登陆,没完没了</p><ul><li>(VScode 让你登录后只是暂时性的,你关闭后就还是会失效)</li></ul></li></ul><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><ul><li><p>VScode 让登录时一次,然后保存凭证就好了!</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global credential.helper store</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="被墙问题"><a href="#被墙问题" class="headerlink" title="被墙问题"></a>被墙问题</h1><ul><li><p>有时候 github 会被墙,导致无法推送,需要挂代理</p></li><li><p>方案:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global https.proxy http://127.0.0.1:1080</span><br></pre></td></tr></table></figure></li><li><p>或者直接修改<code>~/.gitconfig</code>文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[core]</span></span><br><span class="line">  <span class="attr">autocrlf</span> = <span class="literal">true</span></span><br><span class="line">  <span class="attr">longpaths</span> = <span class="literal">true</span></span><br><span class="line">  <span class="attr">editor</span> = code.exe</span><br><span class="line"><span class="section">[user]</span></span><br><span class="line">  <span class="attr">name</span> = Weidows</span><br><span class="line">  <span class="attr">email</span> = utsuko27@qq.com</span><br><span class="line"><span class="section">[http]</span></span><br><span class="line">  <span class="attr">proxy</span> = localhost://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">7890</span></span><br><span class="line"><span class="section">[https]</span></span><br><span class="line">  <span class="attr">proxy</span> = localhost://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">7890</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>成长路线(倒叙)</title>
      <link href="post/others/Lord_road/"/>
      <url>post/others/Lord_road/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-11-17 11:06:25 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:11:44 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\others\Lord_road.md * @Description:成长路线--><ul><li><a href="#2021-03-14">2021-03-14</a><ul><li><a href="#%E6%B5%81%E9%87%8F%E5%BC%95%E5%85%A5">流量引入</a></li><li><a href="#%E7%94%9F%E5%AD%98%E5%91%A8%E6%9C%9F">生存周期</a></li><li><a href="#%E5%91%88%E7%8E%B0%E9%9A%BE%E5%BA%A6">呈现难度</a></li><li><a href="#%E4%BA%8E%E6%98%AF">于是</a></li></ul></li><li><a href="#2020-11-17">2020-11-17</a></li></ul><h1 id="2021-03-14"><a href="#2021-03-14" class="headerlink" title="2021-03-14"></a>2021-03-14</h1><p>再寻信息流向.log 理理头绪</p><p>不得不说我这专业吃流量和用户量，个人并不想通过恶意营销和广告形式引流。<br>博客开了一段日子了，结合实际来看发现很多问题。此处与主流的视频媒体和公众号横向对比下。</p><h2 id="流量引入"><a href="#流量引入" class="headerlink" title="流量引入"></a>流量引入</h2><p>不大不小的问题，通过 SEO 可以解决一部分弊病，品牌 IP 塑造前期格外艰难，即使有优秀的作品，在成相当的体量之前，用户量提升很小。<br>SEO 方面，谷歌＞必应＞百度，准确度和收录速度差好几条街</p><h2 id="生存周期"><a href="#生存周期" class="headerlink" title="生存周期"></a>生存周期</h2><p>个人发现博客和网站的生存周期远远大于视频媒体。比如写个博客发在 CSDN 上，一般来说价值有效期在三年范围内。而同样的内容在视频媒体呈现上，价值生存周期比较难突破三个月。而最后的公众号，更是惨，点赞－收藏－之后没了，SEO 收录不到，推荐系统更是辣鸡。</p><h2 id="呈现难度"><a href="#呈现难度" class="headerlink" title="呈现难度"></a>呈现难度</h2><p>视频＞公众号＞博客<br>也有一种现象，有的人视频做的贼好，但是内容吸引度低，上不高大上，下不接地气，精力收成比低。<br>公众号很容易上手，但是流量吸引极其靠人脉 IP，只能从其他平台已有 IP 进行横向迁移，其他途径，男上加男。<br>博客的话，更像是插排，它的功能用处和价值体现靠开发者本身，单说内容呈现难度来说很低，精力收成比较高，但是很大程度上不为大多数人所接受。</p><h2 id="于是"><a href="#于是" class="headerlink" title="于是"></a>于是</h2><p>写到这里，就是为了记录一下，整理下思路，并寻找下一代内容呈现方式。<br>这或许是二十一世纪二十年代的风口，不知会被谁打破当局。</p><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="2020-11-17"><a href="#2020-11-17" class="headerlink" title="2020-11-17"></a>2020-11-17</h1><ul><li><p>JAVA 初级工程师 9k-15k 一般是 1-3 年的经验<br>要求：掌握<br>JAVA 基础，spring springmvc mybatis servlet restful，webservice，h5 css3 JavaScript jquery angular vue。<br>常用的服务器技术：tomcat，apache nginx。<br>git maven redis dubbo zookeeper<br>同时还有 多线程，设计模式，JAVA io nio<br>网络方面：tcp，udp，netty</p></li><li><p>JAVA 中级工程师 15k-25k 一般是 3-5 年的经验<br>要求：精通<br>springcloud dubbo。<br>还得熟悉一些中间件技术：分布式技术，rpc 技术，缓存，消息系统。<br>懂互联网业务，要求有大规模高并发访问 web 应用的经验。<br>熟悉一些虚拟化技术：docker，vmware，openstack。<br>深入理解数据结构和算法。<br>精通设计模式（至少常用的七八种设计模式必须达到精通的水平），就是能用到设计模式到项目中，让项目的代码更规范。</p></li><li><p>JAVA 高级工程师 25k-35k 一般是 3-5 年<br>得会开发，设计还得有领导能力，必须能带领一个团队，分析产品技术设计，负责新功能的技术开发，参与平台的需求分析，业务规划，帮助团队成员解决技术问题。决定技术方向和业务选型。<br>有些公司还会要求你了解大数据的一些技术；hadoop impala spark flink 主流的大数据框架<br>精通 jvm 内存管理，要会 jvm 调优<br>熟悉分布式常用技术，</p></li><li><p>JAVA 架构师（研发经理）40k-60k 一般是 5-10 年<br>参与微服务架构的设计和落地。要发觉和解决复杂问题，关键技术的公关和改进现有的架构。<br>就是着重于优化和架构设计的工作。要精通多线程，要有高并发，大数据处理的经验。可能会要求主导过大型高可用，高并发，分布式，自动化的项目经验。熟悉自动化部署技术比如 k8s</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> 成长路线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS学习笔记-(一)</title>
      <link href="post/Web/css/css-1/"/>
      <url>post/Web/css/css-1/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-11-10 00:49:54 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:22:11 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Web\css\css-1.md * @Description:CSS学习笔记--><ul><li><a href="#github-%E6%BA%90%E7%A0%81">GitHub 源码</a></li><li><a href="#%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E7%9A%84">需要了解的</a></li><li><a href="#%E6%A0%B7%E5%BC%8F%E5%BC%95%E5%85%A5">样式引入</a><ul><li><a href="#%E5%86%85%E9%83%A8%E6%A0%B7%E5%BC%8F">内部样式</a></li><li><a href="#%E5%A4%96%E9%83%A8%E6%A0%B7%E5%BC%8F">外部样式</a></li><li><a href="#%E8%A1%8C%E5%86%85%E6%A0%B7%E5%BC%8F">行内样式</a></li></ul></li><li><a href="#%E9%80%89%E6%8B%A9%E5%99%A8">选择器</a><ul><li><a href="#%E5%9F%BA%E6%9C%AC%E9%80%89%E6%8B%A9%E5%99%A8">基本选择器</a><ul><li><a href="#%E6%A0%87%E7%AD%BE%E9%80%89%E6%8B%A9%E5%99%A8">标签选择器</a></li><li><a href="#%E7%B1%BB%E9%80%89%E6%8B%A9%E5%99%A8">类选择器</a></li><li><a href="#id-%E9%80%89%E6%8B%A9%E5%99%A8">id 选择器</a></li></ul></li><li><a href="#%E5%B1%82%E6%AC%A1%E9%80%89%E6%8B%A9%E5%99%A8">层次选择器</a><ul><li><a href="#%E5%90%8E%E4%BB%A3%E9%80%89%E6%8B%A9%E5%99%A8">后代选择器</a></li><li><a href="#%E5%AD%90%E9%80%89%E6%8B%A9%E5%99%A8">子选择器</a></li><li><a href="#%E7%9B%B8%E9%82%BB%E5%85%84%E5%BC%9F%E9%80%89%E6%8B%A9%E5%99%A8">相邻(兄弟)选择器</a></li><li><a href="#%E9%80%9A%E7%94%A8%E5%85%84%E5%BC%9F%E9%80%89%E6%8B%A9%E5%99%A8">通用(兄弟)选择器</a></li></ul></li><li><a href="#%E7%BB%93%E6%9E%84%E4%BC%AA%E7%B1%BB%E9%80%89%E6%8B%A9%E5%99%A8">结构伪类选择器</a></li><li><a href="#%E5%B1%9E%E6%80%A7%E9%80%89%E6%8B%A9%E5%99%A8%E5%B8%B8%E7%94%A8">属性选择器(常用)</a></li></ul></li><li><a href="#%E7%BD%91%E9%A1%B5%E7%BE%8E%E5%8C%96">网页美化</a><ul><li><a href="#%E5%AD%97%E4%BD%93%E6%A0%B7%E5%BC%8F">字体样式</a></li><li><a href="#%E6%96%87%E6%9C%AC%E6%A0%B7%E5%BC%8F">文本样式</a></li><li><a href="#%E8%B6%85%E9%93%BE%E6%8E%A5%E4%BC%AA%E7%B1%BB">超链接伪类</a></li><li><a href="#%E5%88%97%E8%A1%A8">列表</a></li><li><a href="#%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B">盒子模型</a></li><li><a href="#%E5%9C%86%E8%A7%92%E8%BE%B9%E6%A1%86">圆角边框</a></li><li><a href="#%E9%98%B4%E5%BD%B1">阴影</a></li></ul></li></ul><h1 id="GitHub-源码"><a href="#GitHub-源码" class="headerlink" title="GitHub 源码"></a><a href="https://github.com/Weidows/Weidows/tree/master/Web/css">GitHub 源码</a></h1><h1 id="需要了解的"><a href="#需要了解的" class="headerlink" title="需要了解的"></a>需要了解的</h1><ul><li>前端分离有利于 SEO 优化,便于搜索引擎收录<ul><li>Vue 框架极其难被收录</li><li>因为 Vue 框架加载时需要执行 JavaScript 来引入 HTML,CSS 或者 JavaScript,而搜索引擎的爬虫并不会执行,所以像是这种框架写出来的页面,本身就是个空壳,爬虫爬不到关键性的内容,所以 SEO 比较弱.</li></ul></li></ul><hr><h1 id="样式引入"><a href="#样式引入" class="headerlink" title="样式引入"></a>样式引入</h1><ul><li>优先级: 行内样式&gt;内部样式&gt;外部样式</li></ul><h2 id="内部样式"><a href="#内部样式" class="headerlink" title="内部样式"></a>内部样式</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="外部样式"><a href="#外部样式" class="headerlink" title="外部样式"></a>外部样式</h2><ul><li>链接式(css3)</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;CSS/1.css&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>导入式(不建议使用,css2 中的)</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">  <span class="keyword">@import</span> url(<span class="string">&quot;CSS/1.css&quot;</span>);</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="行内样式"><a href="#行内样式" class="headerlink" title="行内样式"></a>行内样式</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1 style=&quot;color:aqua&quot;&gt;行内样式&lt;/h1&gt;</span><br></pre></td></tr></table></figure><hr><h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h1><h2 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h2><ul><li>优先级: id &gt; class &gt; 标签</li></ul><h3 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: aqua;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.Span</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: chartreuse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="id-选择器"><a href="#id-选择器" class="headerlink" title="id 选择器"></a>id 选择器</h3><ul><li>id 必须保证全局唯一</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#Div-3</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blueviolet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="层次选择器"><a href="#层次选择器" class="headerlink" title="层次选择器"></a>层次选择器</h2><h3 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h3><ul><li>在某个元素的后面所有</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 对于ul后面的所有p标签 */</span></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="子选择器"><a href="#子选择器" class="headerlink" title="子选择器"></a>子选择器</h3><ul><li>只选择后面的一代</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 对于body里面第一代的p标签 */</span></span><br><span class="line"><span class="selector-tag">body</span> &gt; <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="相邻-兄弟-选择器"><a href="#相邻-兄弟-选择器" class="headerlink" title="相邻(兄弟)选择器"></a>相邻(兄弟)选择器</h3><ul><li>对于选中的标签的下一个同级标签</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#action</span> + <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: tomato;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>类似上面,这个是选择后面所有的同级标签</li></ul><h3 id="通用-兄弟-选择器"><a href="#通用-兄弟-选择器" class="headerlink" title="通用(兄弟)选择器"></a>通用(兄弟)选择器</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#action</span> ~ <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: orange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 避免使用class,id选择器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="comment">/* ul的第一个子元素 */</span></span></span><br><span class="line"><span class="css">      <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line">        background: violet;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="comment">/* ul的最后一个子元素 */</span></span></span><br><span class="line"><span class="css">      <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span></span><br><span class="line">        background: yellow;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="comment">/* 选中父级第一个元素(p1) */</span></span></span><br><span class="line"><span class="css">      <span class="selector-tag">p</span><span class="selector-pseudo">:nth-child(1)</span> &#123;</span></span><br><span class="line">        background: rgb(255, 0, 255);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="comment">/* 选中父级第二个类型为p的元素 */</span></span></span><br><span class="line"><span class="css">      <span class="selector-tag">p</span><span class="selector-pseudo">:nth-of-type(2)</span> &#123;</span></span><br><span class="line">        background: wheat;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="comment">/* 鼠标悬浮 */</span></span></span><br><span class="line"><span class="css">      <span class="selector-tag">p</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">        background: black;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>li1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>li2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>li3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="属性选择器-常用"><a href="#属性选择器-常用" class="headerlink" title="属性选择器(常用)"></a>属性选择器(常用)</h2><ul><li>相当于 class + id 选择器</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="comment">/* 选中demo类下的a标签</span></span></span><br><span class="line">      这个不是讲解,这个只是页面初始化,好看些 */</span><br><span class="line"><span class="css">      <span class="selector-class">.demo</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">        float: left;</span><br><span class="line">        display: block;</span><br><span class="line">        height: 50px;</span><br><span class="line">        width: 50px;</span><br><span class="line">        border-radius: 10px;</span><br><span class="line">        background: violet;</span><br><span class="line">        text-align: center;</span><br><span class="line">        color: gainsboro;</span><br><span class="line">        text-decoration: none;</span><br><span class="line">        margin-right: 10px;</span><br><span class="line">        font: bold 20px/50px Arial;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      /*</span><br><span class="line">      = 是绝对等于</span><br><span class="line">      *= 是包含</span><br><span class="line">      ^= 以这个开头</span><br><span class="line">      $= 以这个结尾</span><br><span class="line">      */</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="comment">/* 选中存在id属性的元素 */</span></span></span><br><span class="line"><span class="css">      <span class="selector-tag">a</span><span class="selector-attr">[id]</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/* background: yellow; */</span></span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="comment">/* 选中对应属性的元素(属性值可以使用正则表达式!!!) */</span></span></span><br><span class="line"><span class="css">      <span class="selector-tag">a</span><span class="selector-attr">[id=<span class="string">&quot;first&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/* background: yellow; */</span></span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="comment">/* 选中class中有links的元素 */</span></span></span><br><span class="line"><span class="css">      <span class="selector-tag">a</span><span class="selector-attr">[class*=<span class="string">&quot;links&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/* background: yellow; */</span></span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="comment">/* 以http开头的元素 */</span></span></span><br><span class="line"><span class="css">      <span class="selector-tag">a</span><span class="selector-attr">[herf^=<span class="string">&quot;http&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/* background: yellow; */</span></span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="comment">/* 以pdf结尾 */</span></span></span><br><span class="line"><span class="css">      <span class="selector-tag">a</span><span class="selector-attr">[herf$=<span class="string">&quot;pdf&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/* background: yellow; */</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> <span class="attr">class</span>=<span class="string">&quot;links item first&quot;</span> <span class="attr">id</span>=<span class="string">&quot;first&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">        <span class="attr">href</span>=<span class="string">&quot;http://blog.kuangstudy.com&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;links item active&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">title</span>=<span class="string">&quot;test&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span>2<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">here</span>=<span class="string">&quot;images/123.html&quot;</span> <span class="attr">class</span>=<span class="string">&quot;links item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">here</span>=<span class="string">&quot;images/123.png&quot;</span> <span class="attr">class</span>=<span class="string">&quot;links item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">here</span>=<span class="string">&quot;images/123.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;links item&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">here</span>=<span class="string">&quot;abc&quot;</span> <span class="attr">class</span>=<span class="string">&quot;links item&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">here</span>=<span class="string">&quot;/a.pdf&quot;</span> <span class="attr">class</span>=<span class="string">&quot;links item&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">here</span>=<span class="string">&quot;/abc.pdf&quot;</span> <span class="attr">class</span>=<span class="string">&quot;links item&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">here</span>=<span class="string">&quot;abc.doc&quot;</span> <span class="attr">class</span>=<span class="string">&quot;links item&quot;</span>&gt;</span>9<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">here</span>=<span class="string">&quot;abcd.doc&quot;</span> <span class="attr">class</span>=<span class="string">&quot;links item&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="网页美化"><a href="#网页美化" class="headerlink" title="网页美化"></a>网页美化</h1><h2 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="comment">/* 从左到右依次检查是否有指定字体,有的话就使用.注意像是第一个T罗马字体这种分段的要用单引号括起来,常用字体一般是微软雅黑,宋体,T罗马 */</span></span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Times New Roman&quot;</span>, Times, serif;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 谷歌浏览器字体默认16px(会根据屏幕大小略有变动) */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 跟VScode一样,实际开发中常用实际数字表示加粗/变细(100-900)m默认宽度是400/normal,bold是加粗(700),不用常变细 */</span></span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 文字样式 正常/斜体italic,一般不给文字加倾斜,常用的是把倾斜字体(em,i)正过来*/</span></span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 行高 */</span></span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*复合属性font:font-style font-weight font-size/line-height font-family,中间空格分隔开,顺序不能颠倒,除了font-size和-family之外其他的可以省略取默认值 */</span></span><br><span class="line">  <span class="attribute">font</span>: italic <span class="number">700</span> <span class="number">16px</span>/<span class="number">20px</span> <span class="string">&quot;Times New Roman&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h2><ul><li>颜色 <code>color</code></li><li>对齐方式 <code>text-align</code></li><li>首行缩进 <code>text-indent</code></li><li>行高 <code>line-height</code></li><li>装饰 <code>text-decoration</code></li></ul><blockquote><p><a href="https://www.cnblogs.com/xiaocaiyuxiaoniao/p/10407830.html">CSS 总结 div 中的内容垂直居中的五种方法</a></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span></span></span><br><span class="line"><span class="tag">      <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=0&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>textStyle<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="comment">/* 约定俗成的,把比较重点的内容一般用span修饰便于修改 */</span></span></span><br><span class="line"><span class="css">      <span class="selector-id">#span1</span> &#123;</span></span><br><span class="line">        /*</span><br><span class="line">        color指定方法:</span><br><span class="line"><span class="css">          1<span class="selector-class">.red</span></span></span><br><span class="line"><span class="css">          2.<span class="selector-id">#FF0000</span></span></span><br><span class="line">          3.rgb(255,0,0)/rgb(100%,0%,0%)</span><br><span class="line"><span class="css">          4<span class="selector-class">.rgba</span>(255,0,0,0<span class="selector-class">.9</span>)</span></span><br><span class="line">          开发中最常用的是2.十六进制方式</span><br><span class="line">        */</span><br><span class="line">        color: red;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.p1</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/* 首行缩进2字符 */</span></span></span><br><span class="line">        text-indent: 2em;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 居中对齐 */</span></span></span><br><span class="line">        text-align: center;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 块高 &amp;&amp; 行高(这两个高度一致就可以上下居中) */</span></span></span><br><span class="line">        height: 100px;</span><br><span class="line">        line-height: 100px;</span><br><span class="line">        background: green;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 上中下划线(这三个只能同时生效一个) */</span></span></span><br><span class="line"><span class="css">        <span class="comment">/* text-decoration: overline; */</span></span></span><br><span class="line"><span class="css">        <span class="comment">/* text-decoration: line-through; */</span></span></span><br><span class="line">        text-decoration: underline;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="comment">/* 文本相对图片垂直居中 */</span></span></span><br><span class="line">      img,</span><br><span class="line"><span class="css">      <span class="selector-id">#span2</span> &#123;</span></span><br><span class="line">        vertical-align: middle;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>欢迎学习<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;span1&quot;</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./assets/2020-11-17-22-38-18.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;span2&quot;</span>&gt;</span>djaowidjalwdjaoidj<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="超链接伪类"><a href="#超链接伪类" class="headerlink" title="超链接伪类"></a>超链接伪类</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      a &#123;</span><br><span class="line">        text-decoration: none;</span><br><span class="line">        color: black;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">        color: orange;</span><br><span class="line">        font-size: 30px;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span></span><br><span class="line">        color: green;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-id">#QQ</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/* 文字阴影,水平偏移,垂直偏移,阴影半径 */</span></span></span><br><span class="line">        text-shadow: aqua 0px 0px 10px;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>秦疆老师的CSS教程，快速上手CSS必备<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>从基础到进阶，每一个小知识都带有小案例，学习不枯燥<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>狂神说Java系列，努力打造通俗易懂的教程<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;QQ&quot;</span>&gt;</span>QQ交流群 : 664386224<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul><li><p>HTML</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>列表样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>全部商品分类<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>图书<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>音像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>数字商品<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>家用电器<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>手机<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>数码<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>电脑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>办公<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>家居<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>家装<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>厨具<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>服饰鞋帽<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>个性化妆<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>礼品箱包<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>钟表<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>珠宝<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>食品饮料<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>保健食品<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>彩票<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>旅行<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>充值<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>票务<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#nav</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">245</span>, <span class="number">245</span>, <span class="number">245</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">  <span class="attribute">background</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="comment">/* list-style</span></span><br><span class="line"><span class="comment">    none 去掉圆点</span></span><br><span class="line"><span class="comment">    circle 空心圆</span></span><br><span class="line"><span class="comment">    decimal 序号</span></span><br><span class="line"><span class="comment">    square 正方形</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">  <span class="attribute">text-indent</span>: <span class="number">1em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: orange;</span><br><span class="line">  <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/D94Uxjch8gsEJAm.jpg" alt="RaeLiJknrlFpfYQ"></p><h2 id="圆角边框"><a href="#圆角边框" class="headerlink" title="圆角边框"></a>圆角边框</h2><ul><li>美化常用,比如头像都是方形的图片,用这个来把头像框变成圆形</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      div &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        height: 200px;</span><br><span class="line">        border: 5px solid red;</span><br><span class="line">        border-radius: 10px 50px;</span><br><span class="line"><span class="css">        <span class="comment">/* 顺序: 左上,右上,右下,左下(顺时针方向) */</span></span></span><br><span class="line">      &#125;</span><br><span class="line">      img &#123;</span><br><span class="line">        border-radius: 50%;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./image/8096a62be4c90b28aac3b3c59333a81e.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>效果图</p><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/PV6nfAx3vTCarDc.jpg" alt="coJYANqxg8vXuM2"><br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/v7gMKXbcIkBi4wF.jpg" alt="NniKVFIq9AuBhts"></p></li></ul><hr><h2 id="阴影"><a href="#阴影" class="headerlink" title="阴影"></a>阴影</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      div &#123;</span><br><span class="line">        width: 100px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        border: 10px solid red;</span><br><span class="line">        box-shadow: 0 0 100px yellow;</span><br><span class="line">      &#125;</span><br><span class="line">      img &#123;</span><br><span class="line">        border-radius: 100%;</span><br><span class="line">        box-shadow: 0 0 100px yellow;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./image/8096a62be4c90b28aac3b3c59333a81e.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>效果图<br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/HxtyER4QW7IJa9q.jpg" alt="tNEI4Mk93qx5HCv"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符编码转换器</title>
      <link href="post/Java/TransformCharset/"/>
      <url>post/Java/TransformCharset/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:15:08 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\TransformCharset.md--><ul><li><a href="#%E7%AE%80%E4%BB%8B">简介</a></li><li><a href="#%E6%BA%90%E7%A0%81">源码</a></li></ul><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li>这是个文件字符编码转换程序</li><li>只能支持文本文件,比如<code>.txt</code>/<code>.cpp</code>/<code>.java</code>等等,不支持二进制文件(二进制文件也用不到这个 2333)</li><li>OK ,上源码,具体使用下面<code>main方法</code>里有简介</li></ul><hr><h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><ul><li><code>TransformCharset.java</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @?: *********************************************************************</span></span><br><span class="line"><span class="comment"> * @Author: Weidows</span></span><br><span class="line"><span class="comment"> * @Date: 2020-10-31 14:49:51</span></span><br><span class="line"><span class="comment"> * @LastEditors: Weidows</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2021-01-02 13:33:25</span></span><br><span class="line"><span class="comment"> * @FilePath: \Weidows\Java\src\main\java\twenty\october\stream\TransformCharset.java</span></span><br><span class="line"><span class="comment"> * @Description:转换文件编码格式</span></span><br><span class="line"><span class="comment"> * 原理:</span></span><br><span class="line"><span class="comment"> *    1.把文件读入并转换格式,输出到./bufferFile这个中间文件内</span></span><br><span class="line"><span class="comment"> *    2.把原文件删除并把中间文件回传</span></span><br><span class="line"><span class="comment"> * Java对象层面的操作使单一文件改写困难,而且多对象同时操作同一文件会覆写.</span></span><br><span class="line"><span class="comment"> * @!: *********************************************************************</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// package twenty.october.stream;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStreamWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransformCharset</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> String path = <span class="keyword">null</span>, charsetName_input = <span class="keyword">null</span>, charsetName_output = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ifFile</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    File file = <span class="keyword">new</span> File(path);</span><br><span class="line">    <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;File/Path not found: &quot;</span> + path);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      runCircle(file);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@description</span>: 通过递归获取所有文件</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;File&#125; file</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> &#123;*&#125;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">runCircle</span><span class="params">(File file)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (file.isFile()) &#123;</span><br><span class="line">      transformCharset(file);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      File[] files = file.listFiles(); <span class="comment">//获取目录下的东西</span></span><br><span class="line">      <span class="keyword">if</span> (files != <span class="keyword">null</span> &amp;&amp; files.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (File f : files) &#123;</span><br><span class="line">          runCircle(f);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">transformCharset</span><span class="params">(File file)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    BufferedReader bufferReader = <span class="keyword">new</span> BufferedReader(</span><br><span class="line">        <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(file.getPath()), charsetName_input));</span><br><span class="line">    BufferedWriter bufferWriteFile = <span class="keyword">new</span> BufferedWriter(</span><br><span class="line">        <span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;./bufferFile&quot;</span>), charsetName_output));</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 中间变量</span></span><br><span class="line">    <span class="keyword">char</span>[] string = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">int</span> length = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 把字符格式转换并传入中间文件</span></span><br><span class="line">    <span class="keyword">while</span> ((length = bufferReader.read(string)) != -<span class="number">1</span>) &#123;</span><br><span class="line">      bufferWriteFile.write(string, <span class="number">0</span>, length);</span><br><span class="line">    &#125;</span><br><span class="line">    bufferReader.close();</span><br><span class="line">    bufferWriteFile.flush();</span><br><span class="line">    bufferWriteFile.close();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 把中间文件再回传</span></span><br><span class="line">    BufferedReader bufferReadFile = <span class="keyword">new</span> BufferedReader(</span><br><span class="line">        <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;./bufferFile&quot;</span>), charsetName_output));</span><br><span class="line">    BufferedWriter bufferWriter = <span class="keyword">new</span> BufferedWriter(</span><br><span class="line">        <span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(file.getPath()), charsetName_output));</span><br><span class="line">    <span class="keyword">while</span> ((length = bufferReadFile.read(string)) != -<span class="number">1</span>) &#123;</span><br><span class="line">      bufferWriter.write(string, <span class="number">0</span>, length);</span><br><span class="line">    &#125;</span><br><span class="line">    bufferReadFile.close();</span><br><span class="line">    bufferWriter.flush();</span><br><span class="line">    bufferWriter.close();</span><br><span class="line">    <span class="keyword">new</span> File(<span class="string">&quot;./bufferFile&quot;</span>).delete();</span><br><span class="line">    System.out.println(<span class="string">&quot;TransformCharset done:\t&quot;</span> + file.getPath());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">TransformCharset</span><span class="params">(String path, String charsetName_input, String charsetName_output)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.path = path;</span><br><span class="line">    <span class="keyword">this</span>.charsetName_input = charsetName_input;</span><br><span class="line">    <span class="keyword">this</span>.charsetName_output = charsetName_output;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 程序入口:</span></span><br><span class="line"><span class="comment">     * path是文件/文件夹路径</span></span><br><span class="line"><span class="comment">     * TransformCharset()构造器第一个参数是path,第二个是文件原编码形式,第三个参数是想要改成的编码形式.</span></span><br><span class="line"><span class="comment">     * 对象只有一个可供调用的入口方法.isFile()</span></span><br><span class="line"><span class="comment">     * 完全可以有多个path,多个对象,随便玩~</span></span><br><span class="line"><span class="comment">     * 因为涉及IO操作,必须有try-catch,这个不能删去.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String path = <span class="string">&quot;./Java/src/main/java/twenty/october/stream/1&quot;</span>;</span><br><span class="line">    TransformCharset t = <span class="keyword">new</span> TransformCharset(path, <span class="string">&quot;GB2312&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      t.ifFile();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ! 附:</span></span><br><span class="line"><span class="comment"> * Java中。GBK和GB2312都是1个汉字占2个字节，UTF-8是1个汉字占3个字节。而ISO编码则是1上汉字1个字节。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 测试成功:</span></span><br><span class="line"><span class="comment"> *    UTF-8转GBK/GB2312没有问题</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 实际转化中会存在很多问题:</span></span><br><span class="line"><span class="comment"> *    比如UTF-8 -&gt; GBK/GB2312 -&gt; UTF-8 回转会有问题(或需要中间编码中转)</span></span><br><span class="line"><span class="comment"> *    想要转为GBK有些文件却识别为为GB2312</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 详见参考:https://www.cnblogs.com/clnchanpin/p/6892870.html</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 编码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javadoc使用 &amp;&amp; 命名规范</title>
      <link href="post/Java/Javadoc/"/>
      <url>post/Java/Javadoc/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:08:44 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\Javadoc.md--><ul><li><a href="#%E6%96%87%E6%A1%A3%E6%B3%A8%E9%87%8A%E6%96%B9%E6%B3%95">文档注释方法</a></li><li><a href="#%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE">常用标签</a></li><li><a href="#%E5%B8%B8%E7%94%A8">常用@</a></li><li><a href="#generate">Generate</a><ul><li><a href="#%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E7%94%9F%E6%88%90-javadoc-%E6%96%87%E6%A1%A3%E6%B3%A8%E6%84%8F%E5%AD%98%E6%94%BE%E7%9B%AE%E5%BD%95%E6%9C%80%E5%A5%BD%E6%98%AF%E7%A9%BA%E7%9A%84%E4%B8%8D%E7%84%B6%E4%BC%9A%E4%B8%80%E5%9B%A2%E4%B9%B1%E9%BA%BB">在命令行当前目录生成 JavaDoc 文档,注意存放目录最好是空的,不然会….一团乱麻!</a></li></ul></li><li><a href="#java-%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83">Java 命名规范</a></li></ul><h1 id="文档注释方法"><a href="#文档注释方法" class="headerlink" title="文档注释方法"></a>文档注释方法</h1><ul><li>在类/方法上面写个<code>/**</code>就会出来</li><li>文档注释会在代码提示中显示,也可以用 Javadoc 生成文档</li><li>其中的标签不用闭合,比如写<code>&lt;p&gt;</code>的话用不着写<code>&lt;/p&gt;</code>,但是写上也不会错</li></ul><hr><h1 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h1><ul><li><code>&lt;p&gt;</code> Passage 段落标签</li></ul><hr><h1 id="常用"><a href="#常用" class="headerlink" title="常用@"></a>常用@</h1><ul><li><code>@author</code></li><li><code>@version</code></li><li><code>@since</code></li><li><code>@see</code></li><li><code>@link</code></li><li><code>@code</code></li><li><code>@param</code></li><li><code>@return</code></li><li><code>@exception</code></li><li><code>@throws</code></li></ul><hr><h1 id="Generate"><a href="#Generate" class="headerlink" title="Generate"></a>Generate</h1><h3 id="在命令行当前目录生成-JavaDoc-文档-注意存放目录最好是空的-不然会…-一团乱麻"><a href="#在命令行当前目录生成-JavaDoc-文档-注意存放目录最好是空的-不然会…-一团乱麻" class="headerlink" title="在命令行当前目录生成 JavaDoc 文档,注意存放目录最好是空的,不然会….一团乱麻!"></a>在命令行当前目录生成 JavaDoc 文档,注意存放目录最好是空的,不然会….一团乱麻!</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javadoc -encoding UTF<span class="number">-8</span> -charset UTF<span class="number">-8</span> Path/文件名</span><br></pre></td></tr></table></figure><hr><h1 id="Java-命名规范"><a href="#Java-命名规范" class="headerlink" title="Java 命名规范"></a>Java 命名规范</h1><ol><li><p>见名知意</p><ol><li><p>不要用中文/拼音命名</p></li><li><p>即使命名不规范也可能不会出 bug,但是问题很大!</p></li></ol></li><li><p>驼峰命名(变量,方法)</p></li><li><p>类,首字母大写,驼峰命名</p></li><li><p>包,全小写命名+下划线</p></li><li><p>常量/枚举,全大写命名+下划线</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Javadoc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些字体和VScode字体设置</title>
      <link href="post/others/font/"/>
      <url>post/others/font/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:10:56 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\others\font.md--><ul><li><a href="#%E7%AD%89%E5%AE%BD%E5%AD%97%E4%BD%93">等宽字体</a></li><li><a href="#%E9%9D%9E%E7%AD%89%E5%AE%BD%E5%AD%97%E4%BD%93">非等宽字体</a></li><li><a href="#%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93">中文字体</a></li><li><a href="#vscode-%E4%B8%AD%E5%AD%97%E4%BD%93%E7%B3%BB%E5%88%97%E8%AE%BE%E7%BD%AE">VScode 中字体系列设置</a></li><li><a href="#vscode-%E4%B8%AD%E5%AE%9A%E4%B9%89%E5%85%B3%E9%94%AE%E5%AD%97%E4%BD%93%E6%A0%B7%E5%BC%8F">VScode 中定义关键字体样式</a></li><li><a href="#%E8%BF%9E%E5%AD%97%E6%95%88%E6%9E%9C"><code>连字效果</code></a><ul><li><a href="#%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D">简单介绍</a></li><li><a href="#vscode-%E4%B8%AD%E5%BC%80%E5%90%AF%E8%BF%9E%E5%AD%97">VScode 中开启连字</a></li></ul></li></ul><h1 id="等宽字体"><a href="#等宽字体" class="headerlink" title="等宽字体"></a>等宽字体</h1><ul><li><p><code>Fira Code</code>(Most popular)</p></li><li><p><code>Operator Mono</code>(Very strange &amp;&amp; beautiful)</p></li><li><p><code>Victor Mono</code></p></li><li><p><code>Hactor</code>(Operator+Victor)</p></li><li><p><code>Dank Mono</code>(Operator Like)</p></li><li><p><code>Jetbrains Mono</code></p></li><li><p><code>Source Code Pro</code></p></li><li><p><code>Consolas</code>(Windows 自带,备用货)</p><hr></li><li><p>Operator Mono 字体<br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/NceHJmuqKvM4XUL.jpg" alt="jhKmYOnMX1pecEI"></p></li></ul><h1 id="非等宽字体"><a href="#非等宽字体" class="headerlink" title="非等宽字体"></a>非等宽字体</h1><ul><li><p><code>Comic Sans MS</code></p></li><li><p><code>Candara</code></p></li><li><p><code>Lemon</code></p></li><li><p><code>Gen Jyuu Gothic Normal</code>(思源柔黑)</p><hr></li></ul><h1 id="中文字体"><a href="#中文字体" class="headerlink" title="中文字体"></a>中文字体</h1><ul><li><code>问藏书房</code></li><li><code>汉仪楷体简</code></li><li><code>米开飘逸行楷</code></li><li><code>思源柔黑</code></li></ul><hr><h1 id="VScode-中字体系列设置"><a href="#VScode-中字体系列设置" class="headerlink" title="VScode 中字体系列设置"></a>VScode 中字体系列设置</h1><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;editor.fontFamily&quot;</span>: <span class="type"></span>&quot;<span class="string">&#x27;Operator Mono Lig&#x27;</span>,<span class="string">&#x27;问藏书房&#x27;</span><span class="string">&quot;</span></span><br></pre></td></tr></table></figure><ul><li>字体系列从左到右依次为显示优先级,比如上面<code>Operator Mono Lig</code>为英文字体,而<code>问藏书房</code>为中文字体,这样设置后,VScode 英文显示为前者,中文显示为后者</li><li>如果某类型字体重复设置,则优先取左边的(比如字体系列为<code>Operator Mono Lig</code>和<code>Fira Code</code>,则优先选择显示<code>Operator Mono Lig</code>)</li><li>字体系列只能填入字体集的名字,比如<code>Fira Code</code>,不能填其中的某个分类,如<code>Fira Code Bold</code><ul><li>另外,VScode 默认选择使用的是字体集里面<code>Book</code>/<code>Medium</code>类型字体,如果在系统字体库中没安装这种默认类型的,VScode 才会去找<code>Bold</code>/<code>Italic</code>类型的</li><li>所以,如果想要把 VScode 默认字体改成<code>Italic(斜体)</code>,需要把对应字体集中的<code>Book</code>/<code>Medium</code>等默认类型字体删除.</li></ul></li></ul><hr><h1 id="VScode-中定义关键字体样式"><a href="#VScode-中定义关键字体样式" class="headerlink" title="VScode 中定义关键字体样式"></a>VScode 中定义关键字体样式</h1><ul><li>在 VScode 设置中加入如下配置(可以根据需要酌情调整)</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;editor.tokenColorCustomizations&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;textMateRules&quot;</span>: [</span><br><span class="line">    &#123;<span class="regexp">//</span>监视下面关键词换成斜体字</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;italic font&quot;</span>,</span><br><span class="line">      <span class="string">&quot;scope&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;keyword&quot;</span>,</span><br><span class="line">        <span class="string">&quot;storage&quot;</span>,</span><br><span class="line">        <span class="string">&quot;keyword.control.import&quot;</span>,</span><br><span class="line">        <span class="string">&quot;keyword.control.default&quot;</span>,</span><br><span class="line">        <span class="string">&quot;keyword.control.from&quot;</span>,</span><br><span class="line">        <span class="string">&quot;keyword.operator.new&quot;</span>,</span><br><span class="line">        <span class="string">&quot;keyword.control.export&quot;</span>,</span><br><span class="line">        <span class="string">&quot;keyword.control.flow&quot;</span>,</span><br><span class="line">        <span class="string">&quot;storage.type.class&quot;</span>,</span><br><span class="line">        <span class="string">&quot;storage.type.function&quot;</span>,</span><br><span class="line">        <span class="string">&quot;storage.type&quot;</span>,</span><br><span class="line">        <span class="string">&quot;storage.type.class&quot;</span>,</span><br><span class="line">        <span class="string">&quot;variable.language&quot;</span>,</span><br><span class="line">        <span class="string">&quot;variable.language.super&quot;</span>,</span><br><span class="line">        <span class="string">&quot;variable.language.this&quot;</span>,</span><br><span class="line">        <span class="string">&quot;meta.class&quot;</span>,</span><br><span class="line">        <span class="string">&quot;meta.var.expr&quot;</span>,</span><br><span class="line">        <span class="string">&quot;constant.language.null&quot;</span>,</span><br><span class="line">        <span class="string">&quot;support.type.primitive&quot;</span>,</span><br><span class="line">        <span class="string">&quot;entity.name.method.js&quot;</span>,</span><br><span class="line">        <span class="string">&quot;entity.other.attribute-name&quot;</span>,</span><br><span class="line">        <span class="string">&quot;punctuation.definition.comment&quot;</span>,</span><br><span class="line">        <span class="string">&quot;text.html.basic entity.other.attribute-name.html&quot;</span>,</span><br><span class="line">        <span class="string">&quot;text.html.basic entity.other.attribute-name&quot;</span>,</span><br><span class="line">        <span class="string">&quot;tag.decorator.js entity.name.tag.js&quot;</span>,</span><br><span class="line">        <span class="string">&quot;tag.decorator.js punctuation.definition.tag.js&quot;</span>,</span><br><span class="line">        <span class="string">&quot;source.js constant.other.object.key.js string.unquoted.label.js&quot;</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="string">&quot;settings&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;fontStyle&quot;</span>: <span class="string">&quot;italic&quot;</span>,</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;<span class="regexp">//</span>监视下面关键词换成粗体字</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;bold font&quot;</span>,</span><br><span class="line">      <span class="string">&quot;scope&quot;</span>: [</span><br><span class="line">      <span class="regexp">//</span> <span class="string">&quot;text&quot;</span>,</span><br><span class="line">        <span class="string">&quot;comment&quot;</span>,</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">&quot;settings&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;fontStyle&quot;</span>: <span class="string">&quot;bold&quot;</span>,</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="连字效果"><a href="#连字效果" class="headerlink" title="连字效果"></a><code>连字效果</code></h1><h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><ul><li>连字效果是将<code>&gt;=</code>,<code>&lt;=</code>,<code>==</code>等等连接起来的效果,编程方面比较好看,<code>需要使用的字体支持</code>.</li><li>下载的字体文件一般有<code>.ttf</code> / <code>.otf</code>,分别对应 True Type Font 和 Open Type Font<ul><li>其中只有 otf 支持开启连字效果(它支持,但是.otf 的字体不一定带有连字效果)</li><li>.ttf 肯定打不开,.otf 有的字体支持有的不支持(而且同一种字体的.otf 有可能也存在”带有连字效果和不带有连字效果”两种文件)</li><li>font 文件带有<code>Lig</code>/<code>Ligatures</code>的话<code>有可能</code>是带有连字效果的字体</li></ul></li></ul><h2 id="VScode-中开启连字"><a href="#VScode-中开启连字" class="headerlink" title="VScode 中开启连字"></a>VScode 中开启连字</h2><ul><li>“editor.fontLigatures”: true</li></ul>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VScode </tag>
            
            <tag> 推荐 </tag>
            
            <tag> Font </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VScode撞上赛博朋克风!赛高!</title>
      <link href="post/tools/vscode/custom_css/"/>
      <url>post/tools/vscode/custom_css/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:03:29 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\tools\vscode\custom_css.md--><ul><li><a href="#%E7%AE%80%E4%BB%8B">简介</a></li><li><a href="#%E9%9C%80%E8%A6%81%E7%9A%84%E4%B8%9C%E8%A5%BF">需要的东西</a></li><li><a href="#css-%E5%BC%95%E5%85%A5">CSS 引入</a></li><li><a href="#%E6%BA%90%E7%A0%81%E9%93%BE%E6%8E%A5">源码链接</a></li></ul><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li>大半夜水群,发现群友扯皮发了一张美照(就是代码)</li><li>惊艳老夫一整天! 赶紧想办法把他整出来!<br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/jkVQ7r2LuKMx8EB.jpg" alt="23XdzqSlUGZPcym"></li><li>这种荧光效果是 CSS 渲染成的,VScode 插件商店有现成的主题可供使用<ul><li>想广泛了解可以搜索关键词<code>SynthWave</code>,会有不少主题可供使用,但是需要注意如果你想应用这种荧光主题必须舍弃现在你所喜欢的某个主题了…</li><li>于是,对我们魔改狂来说,这只是开始!</li></ul></li></ul><hr><h1 id="需要的东西"><a href="#需要的东西" class="headerlink" title="需要的东西"></a>需要的东西</h1><ul><li><p><code>Custom CSS and JS Loader</code></p><ul><li>这是 VScode 商店里的一个插件,用来引入用户想引入的 CSS/JS 文件</li><li>这篇文章只需要下载这一个插件,其他的用不着<del>~</del></li></ul><hr></li><li><p>我们想引入的 CSS 渲染文件</p><ul><li>这个由于不同人,不同审美,在此只放下我个人的 CSS 源码</li><li>如果你想找其他版本可以搜<code>SynthWave</code>来寻找符合心意的主题,并定位其中的 CSS,拿过来供自己使用(不违法:)</li></ul></li></ul><hr><h1 id="CSS-引入"><a href="#CSS-引入" class="headerlink" title="CSS 引入"></a>CSS 引入</h1><ul><li><p>在 VScode 设置文件里加入下面的代码</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;vscode_custom_css.imports&quot;: [&quot;[file:///D:/Game/Demo/Weidows/.vscode/lights-on.css](https://cdn.jsdelivr.net/gh/Weidows/Weidows/.vscode/lights-on.css)&quot;]</span><br></pre></td></tr></table></figure></li><li><p>注意<code>路径</code>和<code>文件名</code>对应好,<code>必须修改</code></p></li><li><p>上面步骤完成并引入下面 CSS 后,就会产生如下效果:</p><ul><li><p>初版</p><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/Mue7ZD5zR1vCkLf.jpg" alt="20201124011913"></p></li><li><p>二版</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/hpp/20210308184630.png" alt="20210308184630" /></li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="源码链接"><a href="#源码链接" class="headerlink" title="源码链接"></a>源码链接</h1><blockquote><p><a href="https://github.com/Weidows/Weidows/blob/master/.vscode/lights-on.css">源码链接</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VScode </tag>
            
            <tag> CSS </tag>
            
            <tag> 美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VScode中Java出现&quot;none-project&quot;错误(无法识别Java-Maven项目)</title>
      <link href="post/Java/VScode_project_errors/"/>
      <url>post/Java/VScode_project_errors/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:15:42 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\VScode_project_errors.md--><ul><li><a href="#%E9%97%AE%E9%A2%98">问题:</a></li><li><a href="#%E8%A7%A3%E5%86%B3"><code>解决:</code></a></li></ul><h1 id="问题"><a href="#问题" class="headerlink" title="问题:"></a>问题:</h1><ul><li>在打开 VScode 后 Java 虚拟机已经启动,但是并没有识别工作区里面 Maven 的项目</li><li>所以 Java 只能提供语法上的错误检查,无法基于项目提供开发环境(包括编译)</li><li>总之就是—&gt;<code>报错(none-project)</code>,而且大部分功能无法使用</li></ul><h1 id="解决"><a href="#解决" class="headerlink" title="解决:"></a><code>解决:</code></h1><ul><li>经过一番折腾发现这是 Project 检测机制的问题,如下</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 工作区文件夹</span><br><span class="line"><span class="bullet">  -</span> 文件夹A</span><br><span class="line"><span class="bullet">    -</span> Maven项目A</span><br><span class="line"><span class="bullet">  -</span> 文件夹B</span><br><span class="line"><span class="bullet">    -</span> Maven项目B</span><br></pre></td></tr></table></figure><ul><li>上面那种层级结构会使得 Java 虚拟机在启动构建时 <code>Maven 项目不被识别</code>.</li></ul><hr><ul><li><p>VScode 只能识别<code>工作区本身</code>或者<code>工作区向内一层目录</code>是 Maven 项目,这样才能使 Java 项目运行环境成功构建启动.</p></li><li><p>按照以下方法可以解决此问题:</p><ul><li>解决方案层级一</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 工作区文件夹A</span><br><span class="line"><span class="bullet">  -</span> Maven项目A</span><br><span class="line"><span class="bullet">-</span> 工作区文件夹B</span><br><span class="line"><span class="bullet">  -</span> Maven项目B</span><br></pre></td></tr></table></figure><ul><li>解决方案层级二</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 工作区文件夹</span><br><span class="line"><span class="bullet">  -</span> Maven项目A</span><br><span class="line"><span class="bullet">  -</span> Maven项目B</span><br></pre></td></tr></table></figure><ul><li>解决方案层级三</li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>工作区为Maven项目A</span><br><span class="line"><span class="bullet">- </span>工作区为Maven项目B</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> VScode </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何让Windows下的终端变得漂亮和好用起来</title>
      <link href="post/experience/shell/pwsh/"/>
      <url>post/experience/shell/pwsh/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-11 23:48:26 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\experience\shell\pwsh.md--><ul><li><a href="#%E9%A2%84%E8%A7%88">预览</a></li><li><a href="#%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE">环境配置</a></li><li><a href="#%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6">安装插件</a></li><li><a href="#%E5%90%AF%E7%94%A8%E4%B8%BB%E9%A2%98%E5%8F%8A%E6%8F%92%E4%BB%B6">启用主题及插件</a></li><li><a href="#oh-my-posh%E4%B8%BB%E9%A2%98"><code>oh-my-posh</code>主题</a></li><li><a href="#%E5%90%AF%E7%94%A8%E7%AE%A1%E7%90%86%E5%91%98%E6%A8%A1%E5%BC%8F">启用管理员模式</a></li></ul><h1 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h1><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/L26PcmM3KnW9YfT.jpg" alt="siDz8M1QlGIanE3"></p><hr><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><ul><li>不同于 Windows 自带的 Windows PowerShell,这个 PowerShell 需要另行安装(百度搜,安装上就行)</li><li>配置环境变量:Path 里面+ 格式参照如下:<ul><li><code>D:\Game\Demo\PowerShell\</code></li><li>如果用 VScode 的话,实际上不设置环境变量也行,因为在 VScode 内需要指定 powershell 路径</li><li>Scoop 安装全自动,不需要配置.</li></ul></li></ul><hr><h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><ul><li><p><code>oh-my-posh</code> (Posh 增强主题) &amp;&amp; <code>posh-git</code> (用于扩展 Posh 里的 Git)</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Install</span>-<span class="keyword">Module</span> oh-my-posh</span><br></pre></td></tr></table></figure></li><li><p>安装 <code>PoshFuck</code></p><ul><li>(不必在意格式,复制就行)</li></ul><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy RemoteSigned</span><br><span class="line">  iex ((<span class="keyword">new</span>-<span class="keyword">object</span> net.webclient).<span class="constructor">DownloadString(&#x27;<span class="params">https</span>:<span class="operator">/</span><span class="operator">/</span><span class="params">raw</span>.<span class="params">githubusercontent</span>.<span class="params">com</span><span class="operator">/</span><span class="params">mattparkes</span><span class="operator">/</span>PoShFuck<span class="operator">/</span><span class="params">master</span><span class="operator">/</span>Install-TheFucker.<span class="params">ps1</span>&#x27;)</span>)</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="启用主题及插件"><a href="#启用主题及插件" class="headerlink" title="启用主题及插件"></a>启用主题及插件</h1><blockquote><p><a href="https://github.com/Weidows/Programming-Configuration/blob/master/PowerShell/Microsoft.PowerShell_profile.ps1">我的配置文件链接</a></p></blockquote><ul><li><p><code>启用主题</code>: ~/文档/PowerShell/Microsoft.PowerShell_profile.ps1 加上以下字段</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Import</span>-<span class="keyword">Module</span> oh-my-posh</span><br><span class="line"><span class="keyword">Import</span>-<span class="keyword">Module</span> posh-git</span><br><span class="line"><span class="keyword">Set</span>-PoshPrompt -Theme powerlevel10k_classic</span><br></pre></td></tr></table></figure></li><li><p><code>Posh中类似Linux形式补全</code></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Set</span>-PSReadlineKeyHandler -<span class="keyword">Key</span> <span class="keyword">Tab</span> -<span class="keyword">Function</span> MenuComplete</span><br></pre></td></tr></table></figure></li><li><p><code>Posh-Fuck</code>,类似<code>Zsh-theFuck</code></p><ul><li>用法: <code>fuck</code> / <code>fuck!</code> / <code>WTF</code> / <code>Get-Fucked</code></li></ul><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Import</span>-<span class="keyword">Module</span> PoShFuck</span><br></pre></td></tr></table></figure></li><li><p>这个文件实际上是 PowerShell 打开时默认加载的指令集,可以自定义添加命令</p><ul><li>清除打开时的版本信息<ul><li>最后一行添加: <code>clear</code></li></ul></li></ul></li></ul><hr><h1 id="oh-my-posh主题"><a href="#oh-my-posh主题" class="headerlink" title="oh-my-posh主题"></a><code>oh-my-posh</code>主题</h1><ul><li><p>查看所有主题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-PoshThemes</span><br></pre></td></tr></table></figure></li><li><p>用法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-PoshPrompt -Theme xxx</span><br></pre></td></tr></table></figure><ul><li>(自上之下按本人推荐程度排序,<code>萝卜白菜各有所爱</code>,希望能找到您喜欢的~)</li></ul><hr></li><li><p>推荐</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Powerlevel10k-Classic</span> (好看没的说)</span><br><span class="line"><span class="selector-tag">AgnosterPlus</span></span><br><span class="line"><span class="selector-tag">Paradox</span> (最常用)</span><br><span class="line"><span class="selector-tag">PowerLine</span> (上一个不换行形式)</span><br><span class="line"><span class="selector-tag">Avit</span></span><br><span class="line"><span class="selector-tag">Darkblood</span> (看起来还行)</span><br><span class="line"><span class="selector-tag">tehrob</span></span><br><span class="line"><span class="selector-tag">Pararussel</span></span><br><span class="line"><span class="selector-tag">Material</span></span><br><span class="line"><span class="selector-tag">Zash</span></span><br></pre></td></tr></table></figure><hr></li><li><p>不是很推荐的</p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Honukai</span><br><span class="line">Agnoster</span><br><span class="line">ys</span><br><span class="line">Sorin</span><br><span class="line">Star</span><br><span class="line">Lambda</span><br><span class="line"><span class="keyword">pure</span></span><br><span class="line">Powerlevel10k-Lean</span><br><span class="line">Punk</span><br><span class="line">robbyrussell</span><br><span class="line">Fish (错位)</span><br><span class="line">qwerty</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="启用管理员模式"><a href="#启用管理员模式" class="headerlink" title="启用管理员模式"></a>启用管理员模式</h1><ul><li>作用就是让右键文件时出现管理员权限<ul><li>实际上没啥用,并不太推荐使用.</li><li>这个东西与上面 PowerShell 没啥关系</li></ul></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add <span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Kernel&quot;</span> <span class="regexp">/v DisableTsx /</span>t REG_DWORD <span class="regexp">/d 0 /</span>f</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> experience </category>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> shell </tag>
            
            <tag> PowerShell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一篇文章帮你装好C/C++和VScode环境</title>
      <link href="post/experience/C/C_Configuration/"/>
      <url>post/experience/C/C_Configuration/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-03-11 23:43:02 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\experience\C\C_Configuration.md--><ul><li><a href="#%E7%BC%96%E8%AF%91%E5%99%A8">编译器</a></li><li><a href="#%E9%85%8D%E7%BD%AE%E8%AF%AD%E8%A8%80%E7%8E%AF%E5%A2%83">配置语言环境</a></li><li><a href="#vscode-%E5%86%85%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE">VScode 内插件配置</a></li><li><a href="#vscode-%E5%B7%A5%E4%BD%9C%E5%8C%BA%E9%85%8D%E7%BD%AE">VScode 工作区配置</a><ul><li><a href="#launchjson"><code>launch.json</code></a></li><li><a href="#taskjson"><code>task.json</code></a></li><li><a href="#%E6%BA%90%E7%A0%81-github-%E9%93%BE%E6%8E%A5">源码 Github 链接</a></li></ul></li><li><a href="#%E9%87%8D%E5%A4%B4%E6%88%8F--%E8%A7%A3%E5%86%B3%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98"><code>重头戏!</code>–解决乱码问题</a><ul><li><a href="#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">解决方案:</a></li></ul></li><li><a href="#%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E9%97%AE%E9%A2%98--%E5%A4%9A%E6%96%87%E4%BB%B6%E7%BC%96%E8%AF%91">另外一个问题–多文件编译</a></li></ul><h1 id="编译器"><a href="#编译器" class="headerlink" title="编译器"></a>编译器</h1><p>C/C++编译器好多种,而且名字起得特别扭,列几个常见的理理思路.</p><ul><li><p><code>gcc</code> (The GNU Compiler Collection)</p><ul><li><code>MinGW</code></li><li><code>MinGW-w64</code> (常叫做 <code>MinGW64</code>)</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MinGW-w64是一套可自由使用和自由发布的Windows特定头文件和使用GNU工具集导入库的集合，它支持GCC编译器在Windows系统上创建的。它有分叉的。<span class="number">2007</span>年，为了支持<span class="number">64</span>位和新的api，此后被广泛使用和分布。</span><br><span class="line"></span><br><span class="line">MinGW 的全称是：Minimalist GNU on Windows 。它实际上是将经典的开源 C语言 编译器 GCC 移植到了 Windows 平台下，并且包含了 Win32API ，因此可以将源代码编译为可在 Windows 中运行的可执行程序。而且还可以使用一些 Windows 不具备的，Linux平台下的开发工具。一句话来概括：MinGW 就是 GCC 的 Windows 版本</span><br><span class="line"></span><br><span class="line">以上是 MinGW 的介绍，MinGW-w64 与 MinGW 的区别在于 MinGW 只能编译生成<span class="number">32</span>位可执行程序，而 MinGW-w64 则可以编译生成 <span class="number">64</span>位 或 <span class="number">32</span>位 可执行程序。</span><br><span class="line"></span><br><span class="line">正因为如此，MinGW 现已被 MinGW-w64 所取代，且 MinGW 也早已停止了更新</span><br></pre></td></tr></table></figure></li><li><p><code>llvm</code></p><ul><li><code>Clang</code></li><li>LLDB</li><li>OpenMP</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">LLVM 是伊利诺伊大学的一个开源项目，LLVM 提供了完整的 C<span class="regexp">/C++工具链，Clang 属于其中的一个子项目，是 LLVM 原生的 ” C/</span>C++/Objective-C” 编译器前端，Clang 负责完成词法分析和语法分析，并将分析结果转换为 Abstract Syntax Tree ( 抽象语法树 ) ，最后使用 LLVM 作为后端代码的生成器。</span><br><span class="line"></span><br><span class="line">Clang 的开发目标是提供一个可以替代 GCC 的前端编译器。与 GCC 相比，Clang 是一个重新设计的编译器前端，具有一系列优点，例如模块化，代码简单易懂，占用内存小以及容易扩展和重用等。由于 Clang 在设计上的优异性，使得 Clang 非常适合用于设计源代码级别的分析和转化工具。Clang 也已经被应用到一些重要的开发领域，如 Static Analysis 是一个基于 Clang 的静态代码分析工具。还有 vim 中的插件 YouCompleteMe 就是利用 Clang 完成语法分析并给出精确的自动补全和语法错误提示（即静态分析）。</span><br><span class="line"></span><br><span class="line">作者：衣介书生</span><br><span class="line">链接：https:<span class="regexp">//</span>www.jianshu.com<span class="regexp">/p/</span><span class="number">861</span>c1a630059</span><br><span class="line">来源：简书</span><br></pre></td></tr></table></figure></li><li><p><code>llvm-mingw</code></p><ul><li>scoop 里发现的神奇环境,是 win-clang</li></ul></li></ul><hr><h1 id="配置语言环境"><a href="#配置语言环境" class="headerlink" title="配置语言环境"></a>配置语言环境</h1><ul><li><p>下载<code>MinGW64编译器</code>,这个不用安装,解压到想放的位置就行(注意存放路径不要出现中文或特殊符号)</p></li><li><p>然后打开<code>MinGW64\bin</code>并复制其路径,比如:<br><code>D:\Game\Dev-Cpp\MinGW64\bin</code></p></li><li><p>打开系统属性配置<code>环境变量</code>,在<code>Path</code>中新建添加以上路径</p></li><li><p>好了,现在 gcc/g++编译器可以正常使用了</p></li></ul><hr><h1 id="VScode-内插件配置"><a href="#VScode-内插件配置" class="headerlink" title="VScode 内插件配置"></a>VScode 内插件配置</h1><ul><li><p>下载<code>C/C++</code>插件,这个是必须的,功能支持很全面 (虽然 Bug 很多,但是确实无可替代…)</p></li><li><p>再下载<code>Code Runner</code>,用于直接通过一条指定指令来编译运行程序 (除非不嫌麻烦想敲又臭又长的命令行执行)</p></li></ul><hr><h1 id="VScode-工作区配置"><a href="#VScode-工作区配置" class="headerlink" title="VScode 工作区配置"></a>VScode 工作区配置</h1><ul><li><p>以上配置还不能使用 VScode 直接编译运行 C/Cpp 文件,需要配置工作区的编译运行逻辑(各个工作区分别配置),其配置文件是在名为.vscode 的文件夹下,结构参下:</p><ul><li>注意如果已存在其他语言配置(如 Java,Python 等),需要结合内容<code>谨慎插入</code>,以免原有配置失效!</li><li>C/C++运行调试环境仅需<code>launch.json</code>和<code>task.json</code></li><li>注意如果代码源文件取名<code>包含中文</code>肯定会导致调试程序<code>报错</code>(但是可以用 Code Runner 运行)</li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-</span> <span class="selector-class">.vscode</span></span><br><span class="line">  <span class="selector-tag">-</span> <span class="selector-tag">launch</span><span class="selector-class">.json</span></span><br><span class="line">  <span class="selector-tag">-</span> <span class="selector-tag">setting</span><span class="selector-class">.json</span></span><br><span class="line">  <span class="selector-tag">-</span> <span class="selector-tag">task</span><span class="selector-class">.json</span></span><br></pre></td></tr></table></figure><h2 id="launch-json"><a href="#launch-json" class="headerlink" title="launch.json"></a><code>launch.json</code></h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;0.2.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;configurations&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//C/C++配置开始</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;C/C++&quot;</span>, <span class="comment">// 配置名称，将会在启动配置的下拉菜单中显示</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;cppdbg&quot;</span>, <span class="comment">// 配置类型，这里只能为cppdbg</span></span><br><span class="line">      <span class="attr">&quot;request&quot;</span>: <span class="string">&quot;launch&quot;</span>, <span class="comment">// 请求配置类型，可以为launch（启动）或attach（附加）</span></span><br><span class="line">      <span class="attr">&quot;program&quot;</span>: <span class="string">&quot;$&#123;fileDirname&#125;//$&#123;fileBasenameNoExtension&#125;.exe&quot;</span>, <span class="comment">// 将要进行调试的程序的路径</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span>: [], <span class="comment">// 程序调试时传递给程序的命令行参数，一般设为空即可</span></span><br><span class="line">      <span class="attr">&quot;stopAtEntry&quot;</span>: <span class="literal">false</span>, <span class="comment">// 设为true时程序将暂停在程序入口处，一般设置为false</span></span><br><span class="line">      <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span>, <span class="comment">// 调试程序时的工作目录，一般为$&#123;workspaceRoot&#125;即代码所在目录 workspaceRoot已被弃用，现改为workspaceFolder</span></span><br><span class="line">      <span class="attr">&quot;environment&quot;</span>: [],</span><br><span class="line">      <span class="attr">&quot;externalConsole&quot;</span>: <span class="literal">true</span>, <span class="comment">// 调试时是否显示控制台窗口，一般设置为true显示控制台</span></span><br><span class="line">      <span class="attr">&quot;MIMode&quot;</span>: <span class="string">&quot;gdb&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;miDebuggerPath&quot;</span>: <span class="string">&quot;gdb.exe&quot;</span>, <span class="comment">// miDebugger的路径，注意这里要与MinGw的路径对应</span></span><br><span class="line">      <span class="attr">&quot;preLaunchTask&quot;</span>: <span class="string">&quot;C/C++: gcc.exe build active file&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;setupCommands&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;Enable pretty-printing for gdb&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;-enable-pretty-printing&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;ignoreFailures&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125; <span class="comment">//配置结束</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="task-json"><a href="#task-json" class="headerlink" title="task.json"></a><code>task.json</code></h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;2.0.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tasks&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//这是我的g++环境配置</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;shell&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;C/C++: gcc.exe build active file&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;g++&quot;</span>, <span class="comment">//就是在shell里输入的gcc</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span>: [<span class="string">&quot;-g&quot;</span>, <span class="string">&quot;$&#123;file&#125;&quot;</span>, <span class="string">&quot;-o&quot;</span>, <span class="string">&quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span>],</span><br><span class="line">      <span class="attr">&quot;problemMatcher&quot;</span>: [<span class="string">&quot;$gcc&quot;</span>],</span><br><span class="line">      <span class="attr">&quot;group&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;kind&quot;</span>: <span class="string">&quot;build&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;isDefault&quot;</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="comment">//gcc配置到这里结束</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="源码-Github-链接"><a href="#源码-Github-链接" class="headerlink" title="源码 Github 链接"></a><a href="https://github.com/Weidows/Weidows/tree/master/.vscode">源码 Github 链接</a></h2><hr><h1 id="重头戏-–解决乱码问题"><a href="#重头戏-–解决乱码问题" class="headerlink" title="重头戏!–解决乱码问题"></a><code>重头戏!</code>–解决乱码问题</h1><ul><li><p>接下来,个人找到了一个解决方案,不敢说全网独一份,但是咱确实没见到过.</p></li><li><p>因为 MinGW64 编译器并不能指定源文件编码,而且 Windows 系统下终端默认使用的是<code>GBK</code>显示,于是只能用 GBK 保存运行才不乱码(但是 VScode 终端只能接收 UTF-8 数据)</p><ul><li>于是,种种冲突<code>乱码了</code>…</li></ul><hr></li></ul><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案:"></a>解决方案:</h2><ul><li>源文件<code>使用UTF-8</code>编码,改写 Code Runner 运行规则</li><li>(找到配置文件里面的<code>code-runner.executorMap</code>),修改如下:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;c&quot;</span>: <span class="string">&quot;chcp 65001 &amp;&amp; gcc *.c -o <span class="variable">$fileNameWithoutExt</span> &amp;&amp; ./<span class="variable">$fileNameWithoutExt</span>&quot;</span>,</span><br><span class="line"><span class="string">&quot;cpp&quot;</span>: <span class="string">&quot;chcp 65001 &amp;&amp; g++ *.cpp -o <span class="variable">$fileNameWithoutExt</span> &amp;&amp; ./<span class="variable">$fileNameWithoutExt</span>&quot;</span>,</span><br></pre></td></tr></table></figure><ul><li>其原理就是让 Windows 下的 Console 在运行时转到 UTF-8 代码页 65001 显示(因为默认情况下为 GBK936 页会使 UTF-8 输出数据乱码)<ul><li><code>提倡任何语言都使用UTF-8</code>编码,当然如果是 Linux/Mac 系统下不需要更改代码页,需要把上面相应的<code>chcp 65001 &amp;&amp;</code>去掉.</li></ul></li></ul><hr><h1 id="另外一个问题–多文件编译"><a href="#另外一个问题–多文件编译" class="headerlink" title="另外一个问题–多文件编译"></a>另外一个问题–多文件编译</h1><ul><li><p>默认的 Code Runner 执行的命令只能编译运行一个 C/C++源文件,但是很多情况下需要编译链接多文件的项目,上面我提供的命令支持编译同一目录下的所有 C/C++源文件</p><ul><li>但是需要注意修改后此目录下所有源文件都参与编译(不管项目是不是需要它),所以需要格外注意源文件所属的目录及层级结构.</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> experience </category>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VScode </tag>
            
            <tag> 备忘录 </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用VScode编写调试Processing.pde程序</title>
      <link href="post/experience/processing/Processing/"/>
      <url>post/experience/processing/Processing/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @LastEditors: Weidows * @LastEditTime: 2021-02-13 16:59:15 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\experience\processing\Processing.md--><ul><li><a href="#%E7%8E%AF%E5%A2%83%E9%9C%80%E6%B1%82">环境需求</a></li><li><a href="#%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83">编译环境</a><ul><li><a href="#%E6%BA%90%E7%A0%81-github-%E9%93%BE%E6%8E%A5">源码 Github 链接</a></li></ul></li><li><a href="#%E8%BF%9B%E9%98%B6%E7%8E%A9%E6%B3%95">进阶玩法</a><ul><li><a href="#%E7%BB%93%E5%90%88-code-runner-%E8%BF%90%E8%A1%8C%E5%85%A8%E7%BD%91%E7%8B%AC%E5%AE%B6">结合 Code Runner 运行(<em>全网独家</em>)</a></li><li><a href="#%E5%AE%89%E8%A3%85processing%E4%B8%AD%E6%96%87%E5%8A%A9%E6%89%8B">安装<code>Processing中文助手</code></a></li></ul></li></ul><h1 id="环境需求"><a href="#环境需求" class="headerlink" title="环境需求"></a>环境需求</h1><ol><li>需要在电脑里下载好 Processing 主程序.</li></ol><ul><li><p>这个 processing 主程序可以由 Scoop 安装(免去配置环境变量).</p></li><li><p>不然需要在 Path 里添加上主程序目录,如 <code>D:\\Game\\Scoop\\apps\\processing\\current\\processing-java</code></p></li></ul><ol start="2"><li>在 VScode 里安装<code>Processing Language</code>插件,它支持语法高亮和代码补全</li></ol><ul><li>现在基本的编写环境已经配置好了,下面是编译环境.</li></ul><hr><h1 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a>编译环境</h1><ul><li>找到工作区目录下的.vscode/tasks.json,添加以下代码(已优化过,百度上找的兼容性差,这个更好些:)</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;Run Sketch&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;shell&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;group&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;kind&quot;</span>: <span class="string">&quot;build&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isDefault&quot;</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;$&#123;config:processing.path&#125;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;presentation&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;echo&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reveal&quot;</span>: <span class="string">&quot;always&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;focus&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;panel&quot;</span>: <span class="string">&quot;dedicated&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;--force&quot;</span>,</span><br><span class="line">    <span class="string">&quot;--sketch=$&#123;fileDirname&#125;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;--output=$&#123;fileDirname&#125;\\out&quot;</span>,</span><br><span class="line">    <span class="string">&quot;--run&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;windows&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;--force&quot;</span>,</span><br><span class="line">      <span class="string">&quot;--sketch=$&#123;fileDirname&#125;&quot;</span>,</span><br><span class="line">      <span class="string">&quot;--output=$&#123;fileDirname&#125;\\out&quot;</span>,</span><br><span class="line">      <span class="string">&quot;--run&quot;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>上面的代码是在 tasks:[]层级内部,为避免覆盖其他环境配置(比如 gcc),需要格外注意,可以参考我的如下配置</li></ul><h2 id="源码-Github-链接"><a href="#源码-Github-链接" class="headerlink" title="源码 Github 链接"></a><a href="https://github.com/Weidows/Programming-Configuration/blob/master/.vscode/launch.json">源码 Github 链接</a></h2><hr><ul><li>现在就可以按<code>Ctrl + shift + B</code>编译运行了.<ul><li>注意! :.pde 文件必须放在一个同名的文件夹中,而且名字不能是纯数字(<code>尽量按着 Java 起名</code>),举个大栗子</li></ul></li></ul><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> root</span></span><br><span class="line"><span class="ruby">  - project_1</span></span><br><span class="line"><span class="ruby">    - project_1.pde         正确</span></span><br><span class="line"><span class="ruby">    - project_2.pde         名字与文件夹不匹配,不会被编译,无效</span></span><br><span class="line"><span class="ruby">  - project_2</span></span><br><span class="line"><span class="ruby">    - <span class="number">1</span>.pde                 名字不合法</span></span><br><span class="line"><span class="ruby">  - a.pde                   路径不对</span></span><br></pre></td></tr></table></figure><h1 id="进阶玩法"><a href="#进阶玩法" class="headerlink" title="进阶玩法"></a>进阶玩法</h1><h2 id="结合-Code-Runner-运行-全网独家"><a href="#结合-Code-Runner-运行-全网独家" class="headerlink" title="结合 Code Runner 运行(全网独家)"></a>结合 Code Runner 运行(<em>全网独家</em>)</h2><ul><li>找到<code>VScode-Code Runner</code>插件配置文件里的<code>code-runner.executorMap</code>,参照其他语言在{}里添加如下代码<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;pde&quot;</span>: <span class="string">&quot;processing-java --force --sketch=<span class="variable">$dir</span> --output=<span class="variable">$dir</span>\\out --run&quot;</span>,</span><br></pre></td></tr></table></figure></li><li>现在,写完.pde 按上面的快捷键或 Code Runner 的<code>小三角</code>都可以运行了!</li></ul><h2 id="安装Processing中文助手"><a href="#安装Processing中文助手" class="headerlink" title="安装Processing中文助手"></a>安装<code>Processing中文助手</code></h2><ul><li>装上就对了,反正挺好用的</li></ul>]]></content>
      
      
      <categories>
          
          <category> experience </category>
          
          <category> processing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VScode </tag>
            
            <tag> 备忘录 </tag>
            
            <tag> Processing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>匿名对象 &amp;&amp; 使用</title>
      <link href="post/Java/anonymous_object/"/>
      <url>post/Java/anonymous_object/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-09-10 17:34:47 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:07:38 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\anonymous_object.md--><ul><li><a href="#%E5%8C%BF%E5%90%8D%E5%AF%B9%E8%B1%A1%E4%B8%80-testjava">匿名对象一 (Test.java)</a></li><li><a href="#%E5%8C%BF%E5%90%8D%E5%AF%B9%E8%B1%A1%E4%BA%8C-circlejava">匿名对象二 (Circle.java)</a></li></ul><h1 id="匿名对象一-Test-java"><a href="#匿名对象一-Test-java" class="headerlink" title="匿名对象一 (Test.java)"></a>匿名对象一 (Test.java)</h1><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/aqpo7tPHMDxAkbn.jpg" alt="anonymous_object_1"></p><details><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> twenty.september.anonymous_object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> count)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;这是个测试&quot;</span> + count);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 这里new了一个匿名对象,可以直接调用此对象的方法.</span></span><br><span class="line"><span class="comment">    * 如果一个对象只需要进行一次方法调用,可以使用匿名对象</span></span><br><span class="line"><span class="comment">    * 常使用匿名对象作为实参传递给一个方法调用</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">new</span> Test().test(<span class="keyword">new</span> Test().count);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><hr><h1 id="匿名对象二-Circle-java"><a href="#匿名对象二-Circle-java" class="headerlink" title="匿名对象二 (Circle.java)"></a>匿名对象二 (Circle.java)</h1><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/PtY473dAChgsqpQ.jpg" alt="anonymous_object_2"></p><details><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> twenty.september.anonymous_object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">double</span> radius;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Circle</span><span class="params">(<span class="keyword">double</span> radius)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.radius = radius;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> ret = <span class="number">3.14</span> * radius * radius;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 可以同时使用构造器初始化类属性然后再调用方法</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    System.out.println(<span class="keyword">new</span> Circle(<span class="number">5</span>).getArea());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java设计模式</title>
      <link href="post/Java/design_pattern/"/>
      <url>post/Java/design_pattern/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-09-09 22:53:55 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:07:54 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\design_pattern.md--><ul><li><a href="#%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F">单例设计模式</a></li></ul><h1 id="单例设计模式"><a href="#单例设计模式" class="headerlink" title="单例设计模式"></a>单例设计模式</h1><ul><li><p>设计目的:</p><ul><li>当多个程序读取同一个文件的数据时,可以把配置文件封装为对象,为了使得所有程序获取的是同一个对象的数据,那么就需要保证该对象在内存中是唯一的</li></ul></li><li><p>设计方法:</p><ol><li><p>不开放其他程序实例化此对象的权限</p></li><li><p>在本类中实例化私有对象</p></li><li><p>public 方法来使其他程序获取此对象数据</p></li><li><p>因为 new 对象需要构造器初始化,所以令构造器 private,其他程序就无法 new 对象了</p></li></ol></li><li><p>代码实现:</p></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 这种会在初始化时就创建好了静态类成员对象</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Single</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">Single</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  &#125; <span class="comment">//私有化构造函数。</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Single s = <span class="keyword">new</span> Single(); <span class="comment">//创建私有并静态的本类对象。</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Single <span class="title">getInstance</span>(<span class="params"></span>)</span> &#123; <span class="comment">//定义公有并静态的方法，返回该对象。</span></span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 这种初始化时没调用构造器,对象只是null,在调用getInstance()方法时才会创建对象(懒加载)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Single2</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">Single2</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Single2 s = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Single2 <span class="title">getInstance</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (s == <span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">      s = <span class="keyword">new</span> Single2();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java(非)静态代码块及其作用</title>
      <link href="post/Java/static_unstatic_block/"/>
      <url>post/Java/static_unstatic_block/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-09-04 10:49:16 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:14:27 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\static_unstatic_block.md--><ul><li><a href="#%E5%B0%B1%E4%BF%A9%E6%96%87%E4%BB%B6%E8%B0%A8%E6%AD%A4">就俩文件,谨此</a></li><li><a href="#personjava">Person.java</a></li><li><a href="#testjava">Test.java</a></li></ul><h1 id="就俩文件-谨此"><a href="#就俩文件-谨此" class="headerlink" title="就俩文件,谨此"></a>就俩文件,谨此</h1><p>图片下方给出了源代码,折叠起来了.</p><hr><h1 id="Person-java"><a href="#Person-java" class="headerlink" title="Person.java"></a>Person.java</h1><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/GCvw1FlIot7T5iA.jpg" alt="UpRI1nOdso2Z4ak"></p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>源代码</span></div>    <div class="hide-content"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @Author: Weidows</span></span><br><span class="line"><span class="comment">* @Date: 2020-09-04 17:39:50</span></span><br><span class="line"><span class="comment">* @LastEditors: Weidows</span></span><br><span class="line"><span class="comment">* @LastEditTime: 2020-09-07 11:11:06</span></span><br><span class="line"><span class="comment">* @FilePath: \Weidows\Java\src\main\java\twenty\september\new_object\Person.java</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> twenty.september.new_object;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* ! 在new Person()时,执行顺序是</span></span><br><span class="line"><span class="comment">*    1.name这种成员变量的初始化</span></span><br><span class="line"><span class="comment">*    2.执行代码块(多个代码块会按照从上到下顺序执行)</span></span><br><span class="line"><span class="comment">*    3.执行构造函数</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*  两种代码块都可以用输出语句,可以对类的成员变量做初始化操作</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  String name;</span><br><span class="line">  <span class="keyword">static</span> TestPerson tp = <span class="keyword">new</span> TestPerson();</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">    System.out.println(<span class="string">&quot;执行的是构造方法&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;这是Person的test方法&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ! 非静态的代码块</span></span><br><span class="line">  &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;执行的是非静态的代码块1&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;执行的是非静态的代码块2&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;执行的是非静态的代码块3&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * ! 静态代码块</span></span><br><span class="line"><span class="comment">  * 里面只能放/调用static变量/方法</span></span><br><span class="line"><span class="comment">  * static代码块在程序运行周期只能被执行一次(new多次对象时共用一个静态类变量,不能被重复调用)</span></span><br><span class="line"><span class="comment">  * 静态代码块运行优先于非静态代码块</span></span><br><span class="line"><span class="comment">  *  实际开发中常用,用来初始化类的静态对象属性(成员对象变量),比如tp那样,或者用在内部类替代构造器使用</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;执行的是静态的代码块&quot;</span>);</span><br><span class="line">    tp.age = <span class="number">1</span>;</span><br><span class="line">    tp.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestPerson</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line">  String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><hr><h1 id="Test-java"><a href="#Test-java" class="headerlink" title="Test.java"></a>Test.java</h1><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/XZ7JLfemrapqcC8.jpg" alt="Q9r36pXoBen4Hcy"></p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>源代码</span></div>    <div class="hide-content"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @Author: Weidows</span></span><br><span class="line"><span class="comment">* @Date: 2020-09-04 17:42:06</span></span><br><span class="line"><span class="comment">* @LastEditors: Weidows</span></span><br><span class="line"><span class="comment">* @LastEditTime: 2020-09-07 11:10:02</span></span><br><span class="line"><span class="comment">* @FilePath: \Weidows\Java\src\main\java\twenty\september\new_object\test.java</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> twenty.september.new_object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    in.close();</span><br><span class="line">    <span class="comment">// new Person();</span></span><br><span class="line">    <span class="comment">// new Person();</span></span><br><span class="line">    Person p = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * ! 这是一个匿名内部类</span></span><br><span class="line"><span class="comment">      * 因为这种内部类没有类名,也就无法搞一个新的构造器(用的还是原来Person的)</span></span><br><span class="line"><span class="comment">      * 也就是这个类初始化后的成员变量还是跟原来的Person类的一样</span></span><br><span class="line"><span class="comment">      *  这里就会用到代码块来初始化类的属性</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      &#123; <span class="comment">///这里这种代码块就可以替代构造器使用</span></span><br><span class="line">        <span class="keyword">this</span>.name = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">        * 这里无论写this.name/name/super.name都会变为&quot;李四&quot;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行的是被Override的Person&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    System.out.println(<span class="string">&quot;这个类里面的name是:\t&quot;</span> + p.name);</span><br><span class="line">    p.test();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><hr>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>butterfly内部魔改记录</title>
      <link href="post/Web/Node/Hexo/butterfly_modify/"/>
      <url>post/Web/Node/Hexo/butterfly_modify/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-09-03 22:49:05 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:05:05 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Web\Node\Hexo\butterfly_modify.md--><ul><li><a href="#%E9%AD%94%E6%94%B9%E6%BB%9A%E5%8A%A8%E6%9D%A1">魔改滚动条</a></li><li><a href="#%E6%96%87%E7%AB%A0%E8%83%8C%E6%9D%BF%E9%80%8F%E6%98%8E">文章背板透明</a></li><li><a href="#footer-%E7%B1%BB-github-%E5%B0%8F%E6%A0%87%E7%AD%BE">footer 类 github 小标签</a></li><li><a href="#%E6%B7%BB%E5%8A%A0-footer-%E5%B0%8F%E7%BA%A2%E5%BF%83">添加 footer 小红心</a></li><li><a href="#%E4%BF%AE%E6%94%B9%E9%BC%A0%E6%A0%87%E6%A0%B7%E5%BC%8F">修改鼠标样式</a></li><li><a href="#%E9%80%82%E9%85%8D-pjax">适配 Pjax</a></li><li><a href="#%E4%BC%98%E5%8C%96">优化</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="魔改滚动条"><a href="#魔改滚动条" class="headerlink" title="魔改滚动条"></a>魔改滚动条</h1><ul><li><p>找到<code>mine.styl</code>添加以下: (注意缩进格式)</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*scrollbar*/</span></span><br><span class="line">::-webkit-scrollbar</span><br><span class="line">  <span class="built_in">width</span>: 10px;</span><br><span class="line">  <span class="built_in">height</span>: 10px;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-thumb</span><br><span class="line">  <span class="built_in">background</span>-<span class="built_in">color</span>: rgba(<span class="number">255</span>, <span class="number">86</span>, <span class="number">232</span>, <span class="number">0.815</span>);</span><br><span class="line">  <span class="built_in">background</span>-<span class="built_in">image</span>: -webkit-<span class="built_in">linear</span>-gradient(</span><br><span class="line">    45deg,</span><br><span class="line">    #34bf49 <span class="number">25</span><span class="symbol">%</span>,</span><br><span class="line">    <span class="built_in">transparent</span> <span class="number">25</span><span class="symbol">%</span>,</span><br><span class="line">    <span class="built_in">transparent</span> <span class="number">50</span><span class="symbol">%</span>,</span><br><span class="line">    #ff4c4c <span class="number">50</span><span class="symbol">%</span>,</span><br><span class="line">    #<span class="number">0099e5</span> <span class="number">75</span><span class="symbol">%</span>,</span><br><span class="line">    <span class="built_in">transparent</span> <span class="number">75</span><span class="symbol">%</span>,</span><br><span class="line">    <span class="built_in">transparent</span></span><br><span class="line">  );</span><br><span class="line">  <span class="built_in">border</span>-<span class="built_in">radius</span>: 2em;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-corner</span><br><span class="line">  <span class="built_in">background</span>-<span class="built_in">color</span>: <span class="built_in">transparent</span>;</span><br><span class="line"></span><br><span class="line">::-moz-selection</span><br><span class="line">  <span class="built_in">color</span>: #fff;</span><br><span class="line">  <span class="built_in">background</span>-<span class="built_in">color</span>: #ce70b9;</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="文章背板透明"><a href="#文章背板透明" class="headerlink" title="文章背板透明"></a>文章背板透明</h1><ul><li><p>在 mine.styl 内添加</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.layout</span><br><span class="line">&amp; &gt; div:first-child:<span class="keyword">not</span>(.recent-posts)</span><br><span class="line">  background: rgba(<span class="number">0</span>, <span class="number">45</span>, <span class="number">35</span>, <span class="number">0.5</span>): rgba(<span class="number">0</span>, <span class="number">45</span>, <span class="number">35</span>, <span class="number">0.5</span>)</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="footer-类-github-小标签"><a href="#footer-类-github-小标签" class="headerlink" title="footer 类 github 小标签"></a>footer 类 github 小标签</h1><ul><li><p>在<code>mine.styl</code>在尾部添加层叠样式:</p><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*底部信息*/</span></span><br><span class="line">.github-badge</span><br><span class="line">  <span class="attribute">margin-left</span> <span class="number">5px</span></span><br><span class="line">  <span class="attribute">display</span> inline-block</span><br><span class="line">  <span class="attribute">border-radius</span> <span class="number">4px</span></span><br><span class="line">  <span class="attribute">text-shadow</span> none</span><br><span class="line">  <span class="attribute">color</span> <span class="number">#fff</span></span><br><span class="line">  <span class="attribute">line-height</span> <span class="number">15px</span></span><br><span class="line">  <span class="attribute">background-color</span> <span class="number">#abbac3</span></span><br><span class="line">  <span class="attribute">margin-bottom</span> <span class="number">5px</span></span><br><span class="line">  <span class="attribute">font-size</span> <span class="number">12px</span></span><br><span class="line">  .badge-subject</span><br><span class="line">    <span class="attribute">display</span> inline-block</span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#4d4d4d</span></span><br><span class="line">    <span class="attribute">padding</span> <span class="number">4px</span> <span class="number">4px</span> <span class="number">4px</span> <span class="number">6px</span></span><br><span class="line">    <span class="attribute">border-top-left-radius</span> <span class="number">4px</span></span><br><span class="line">    <span class="attribute">border-bottom-left-radius</span> <span class="number">4px</span></span><br><span class="line"></span><br><span class="line">  .badge-value</span><br><span class="line">    <span class="attribute">display</span> inline-block</span><br><span class="line">    <span class="attribute">padding</span> <span class="number">4px</span> <span class="number">6px</span> <span class="number">4px</span> <span class="number">4px</span></span><br><span class="line">    <span class="attribute">border-top-right-radius</span> <span class="number">4px</span></span><br><span class="line">    <span class="attribute">border-bottom-right-radius</span> <span class="number">4px</span></span><br><span class="line"></span><br><span class="line">  .bg-blue</span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#007ec6</span></span><br><span class="line"></span><br><span class="line">  .bg-brightgreen</span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#4dc820</span></span><br><span class="line"></span><br><span class="line">  .bg-orange</span><br><span class="line">    <span class="attribute">background-color</span> orange</span><br><span class="line"></span><br><span class="line">  .bg-gradient</span><br><span class="line">    <span class="attribute">background</span> linear-gradient(to right,<span class="number">#3ca5f6</span>,<span class="number">#a86af9</span>)</span><br><span class="line"></span><br><span class="line">  .bg-blueviolet</span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#8833d7</span></span><br></pre></td></tr></table></figure></li><li><p>找到<code>~butterfly/layout/includes/footer.pug</code>在尾部添加以下(这里是一个单位缩进,一定注意缩进对应上方)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;- 底部信息</span><br><span class="line">.github-badge</span><br><span class="line">  a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;https:&#x2F;&#x2F;hexo.io&#x2F;&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;由 Hexo 强力驱动&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">    span.badge-subject Powered</span><br><span class="line">    span.badge-value.bg-blue Hexo</span><br><span class="line"></span><br><span class="line">.github-badge</span><br><span class="line">  a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;https:&#x2F;&#x2F;github.com&#x2F;jerryc127&#x2F;hexo-theme-butterfly&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;主题&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">    span.badge-subject Theme</span><br><span class="line">    span.badge-value.bg-blueviolet Butterfly</span><br><span class="line"></span><br><span class="line">.github-badge</span><br><span class="line">  a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;https:&#x2F;&#x2F;gitee.com&#x2F;Weidows&#x2F;Weidows&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;静态网页托管于 Github + Gitee&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">    span.badge-subject Hosted</span><br><span class="line">    span.badge-value.bg-brightgreen Github+Gitee-Pages</span><br><span class="line"></span><br><span class="line">.github-badge</span><br><span class="line">  a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;https:&#x2F;&#x2F;www.jsdelivr.com&#x2F;&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;jsDelivr + SM.MS 提供 CDN 加速服务&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">    span.badge-subject CDN</span><br><span class="line">    span.badge-value.bg-orange JsDelivr+SM.MS</span><br><span class="line"></span><br><span class="line">.github-badge</span><br><span class="line">  a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;http:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-nc-sa&#x2F;4.0&#x2F;&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;本站点采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">    span.badge-subject</span><br><span class="line">      i.fa.fa-copyright</span><br><span class="line">    span.badge-value.bg-gradient BY-NC-SA 4.0</span><br><span class="line"></span><br><span class="line">.github-badge</span><br><span class="line">  a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;http:&#x2F;&#x2F;www.beian.miit.gov.cn&#x2F;&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;备案&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">    span.badge-subject 冀ICP备</span><br><span class="line">    span.badge-value.bg-orange 2020021936-1号</span><br><span class="line"></span><br><span class="line">.github-badge</span><br><span class="line">  span.badge-subject BugSite上线</span><br><span class="line">  a#running-time(style&#x3D;&#39;text-decoration: none;color: rgb(255, 255, 255);background: rgb(77, 200, 32);padding: 4px 4px 4px 6px;--darkreader-inline-color: #ffffff;--darkreader-inline-bgimage: initial;--darkreader-inline-bgcolor: #1db000;&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;&#x2F;tags&#x2F;for&#39;, target&#x3D;&#39;_self&#39;, data-pjax-state, data-darkreader-inline-color, data-darkreader-inline-bgimage, data-darkreader-inline-bgcolor) 0 年 45 天 6 时 50 分 8 秒</span><br><span class="line">#running-time</span><br><span class="line">  script.</span><br><span class="line">    setInterval(() &#x3D;&gt; &#123;</span><br><span class="line">            let create_time &#x3D; Math.round(</span><br><span class="line">              new Date(&quot;2020-08-14 17:30:00&quot;).getTime() &#x2F; 1000</span><br><span class="line">            );</span><br><span class="line">            let timestamp &#x3D; Math.round(</span><br><span class="line">              (new Date().getTime() + 8 * 60 * 60 * 1000) &#x2F; 1000</span><br><span class="line">            );</span><br><span class="line">            let second &#x3D; timestamp - create_time;</span><br><span class="line">            let time &#x3D; new Array(0, 0, 0, 0, 0);</span><br><span class="line">            if (second &gt;&#x3D; 365 * 24 * 3600) &#123;</span><br><span class="line">              time[0] &#x3D; parseInt(second &#x2F; (365 * 24 * 3600));</span><br><span class="line">              second %&#x3D; 365 * 24 * 3600;</span><br><span class="line">            &#125;</span><br><span class="line">            if (second &gt;&#x3D; 24 * 3600) &#123;</span><br><span class="line">              time[1] &#x3D; parseInt(second &#x2F; (24 * 3600));</span><br><span class="line">              second %&#x3D; 24 * 3600;</span><br><span class="line">            &#125;</span><br><span class="line">            if (second &gt;&#x3D; 3600) &#123;</span><br><span class="line">              time[2] &#x3D; parseInt(second &#x2F; 3600);</span><br><span class="line">              second %&#x3D; 3600;</span><br><span class="line">            &#125;</span><br><span class="line">            if (second &gt;&#x3D; 60) &#123;</span><br><span class="line">              time[3] &#x3D; parseInt(second &#x2F; 60);</span><br><span class="line">              second %&#x3D; 60;</span><br><span class="line">            &#125;</span><br><span class="line">            if (second &gt; 0) &#123;</span><br><span class="line">              time[4] &#x3D; second;</span><br><span class="line">            &#125;</span><br><span class="line">            currentTimeHtml &#x3D;</span><br><span class="line">              time[0] +</span><br><span class="line">              &quot; 年 &quot; +</span><br><span class="line">              time[1] +</span><br><span class="line">              &quot; 天 &quot; +</span><br><span class="line">              time[2] +</span><br><span class="line">              &quot; 时 &quot; +</span><br><span class="line">              time[3] +</span><br><span class="line">              &quot; 分 &quot; +</span><br><span class="line">              time[4] +</span><br><span class="line">              &quot; 秒&quot;;</span><br><span class="line">            document.getElementById(&quot;running-time&quot;).innerHTML &#x3D; currentTimeHtml;</span><br><span class="line">          &#125;, 1000);</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="添加-footer-小红心"><a href="#添加-footer-小红心" class="headerlink" title="添加 footer 小红心"></a>添加 footer 小红心</h1><ul><li><p>找到<code>~butterfly/layout/includes/footer.pug</code>(同上)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if theme.footer.owner.since &amp;&amp; theme.footer.owner.since !&#x3D; nowYear</span><br><span class="line">  .copyright!&#x3D; &#96;&amp;copy;$&#123;theme.footer.owner.since&#125; - $&#123;nowYear&#125; By $&#123;config.author&#125;&#96;</span><br><span class="line">else</span><br><span class="line">  .copyright!&#x3D; &#96;&amp;copy;$&#123;nowYear&#125; By $&#123;config.author&#125;&#96;</span><br></pre></td></tr></table></figure></li><li><p>替换为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if theme.footer.owner.since &amp;&amp; theme.footer.owner.since !&#x3D; nowYear</span><br><span class="line">  .copyright!&#x3D; &#96;&amp;copy;$&#123;theme.footer.owner.since&#125; - $&#123;nowYear&#125; &lt;i style&#x3D;&quot;color:#FF6A6A&quot; class&#x3D;&quot;fa fa-heartbeat&quot;&gt;&lt;&#x2F;i&gt; $&#123;config.author&#125;&#96;</span><br><span class="line">else</span><br><span class="line">  .copyright!&#x3D; &#96;&amp;copy;$&#123;nowYear&#125;  &lt;i style&#x3D;&quot;color:#FF6A6A;animation: announ_animation 0.8s linear infinite;&quot; class&#x3D;&quot;fa fa-heartbeat&quot;&gt;&lt;&#x2F;i&gt; $&#123;config.author&#125;&#96;</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="修改鼠标样式"><a href="#修改鼠标样式" class="headerlink" title="修改鼠标样式"></a>修改鼠标样式</h1><ul><li><p>在 mine.styl 里添加以下:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 鼠标图标 */</span></span><br><span class="line">body</span><br><span class="line">  cursor url(https://cdn.jsdelivr.net/gh/Weidows/Images/img/cursor/1.png), auto</span><br><span class="line"></span><br><span class="line">a</span><br><span class="line">  &amp;:hover</span><br><span class="line">    cursor url(https://cdn.jsdelivr.net/gh/Weidows/Images/img/cursor/2.png), auto</span><br><span class="line"></span><br><span class="line">button</span><br><span class="line">  &amp;:hover</span><br><span class="line">    cursor url(https://cdn.jsdelivr.net/gh/Weidows/Images/img/cursor/2.png), auto</span><br><span class="line"></span><br><span class="line">i</span><br><span class="line">  &amp;:hover</span><br><span class="line">    cursor url(https://cdn.jsdelivr.net/gh/Weidows/Images/img/cursor/2.png), auto</span><br><span class="line"></span><br><span class="line">#upj</span><br><span class="line">  &amp;:hover</span><br><span class="line">    cursor url(https://cdn.jsdelivr.net/gh/Weidows/Images/img/cursor/2.png), auto</span><br><span class="line"></span><br><span class="line">#footer-wrap</span><br><span class="line">  a</span><br><span class="line">    &amp;:hover</span><br><span class="line">      <span class="attribute">text-decoration</span> none</span><br><span class="line">      cursor url(https://cdn.jsdelivr.net/gh/Weidows/Images/img/cursor/2.png), auto</span><br><span class="line"></span><br><span class="line">#pagination</span><br><span class="line">  .page-number</span><br><span class="line">    &amp;:hover</span><br><span class="line">      cursor url(https://cdn.jsdelivr.net/gh/Weidows/Images/img/cursor/2.png), auto</span><br><span class="line"></span><br><span class="line">#nav</span><br><span class="line">  .site-page</span><br><span class="line">    &amp;:hover</span><br><span class="line">      cursor url(https://cdn.jsdelivr.net/gh/Weidows/Images/img/cursor/2.png), auto</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="适配-Pjax"><a href="#适配-Pjax" class="headerlink" title="适配 Pjax"></a>适配 Pjax</h1><ul><li><p>定位<code>~buttery/layout/include/third-party/pjax.pug</code></p><ul><li>在<code>document.addEventListener(&#39;pjax:complete&#39;, function () &#123;&#125;</code>里最后插入</li><li><code>注意缩进对齐!</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;go-up&quot;</span>).innerHTML += <span class="string">&quot;&lt;img class=&#x27;fas fa-arrow-up&#x27; style=&#x27;max-width: 300%; transform: translate(-30px,0px);&#x27; src=&#x27;https://cdn.jsdelivr.net/gh/Weidows/Images/img/up.png&#x27; title=&#x27;芜湖起飞!&#x27; &gt;&quot;</span>;</span><br><span class="line"><span class="keyword">new</span> xkTool().footFish();</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h1><ul><li>上面很多东西已被优化过,方法都还能用,优化过程:<blockquote><p><a href="../optimize">🚀 网站优化记录.</a></p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Node </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> JavaScript </tag>
            
            <tag> Hexo </tag>
            
            <tag> butterfly </tag>
            
            <tag> pug </tag>
            
            <tag> styl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🚫仅仅是一篇关于yaml文件语法虐待我后的小诟病</title>
      <link href="post/experience/yaml-experience/"/>
      <url>post/experience/yaml-experience/</url>
      
        <content type="html"><![CDATA[<!-- * @?: ********************************************************************* * @Author: Weidows * @Date: 2020-09-03 18:20:56 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:01:40 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\experience\yaml-experience.md * @Description: * @!: *********************************************************************--><ul><li><a href="#%E5%86%92%E5%8F%B7-">冒号 :</a></li><li><a href="#%E8%BF%9E%E5%AD%97%E7%AC%A6%E5%87%8F%E5%8F%B7--">连字符(减号) -</a></li><li><a href="#%E5%8D%95%E5%BC%95%E5%8F%B7-">单引号 ‘</a></li><li><a href="#github-action">GitHub-Action</a></li><li><a href="#%E6%96%B0%E7%BB%8F%E9%AA%8C">新经验</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="冒号"><a href="#冒号" class="headerlink" title="冒号 :"></a>冒号 :</h1><ul><li>yaml 元素标签后加个冒号表示结束,这俩要紧挨着,但是与冒号后跟着的值要空出一个空格<br>这样 <code>keyword: value</code></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="连字符-减号"><a href="#连字符-减号" class="headerlink" title="连字符(减号) -"></a>连字符(减号) -</h1><ul><li>在 keyword 下面用-连续赋值,一定要注意缩进,连字符与 value 之间也需要有空格</li><li>另外不能保证这一排 value 是同一级的</li><li>比如下面的 Blog 是 backup 的下一级,backup 是 categories 的下一级</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line"><span class="bullet">  -</span> backup</span><br><span class="line"><span class="bullet">  -</span> Blog</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="单引号-‘"><a href="#单引号-‘" class="headerlink" title="单引号 ‘"></a>单引号 ‘</h1><ul><li>这魂淡肯定是成对出现,但又不是跟双引号一样<code>可有可无</code></li><li>当 generate 时报错(一长溜)但又不知道啥原因时,尝试寻找一下这个的错</li><li>该来的地儿不来,不该来的却总是在 2333</li></ul><hr><h1 id="GitHub-Action"><a href="#GitHub-Action" class="headerlink" title="GitHub-Action"></a>GitHub-Action</h1><ul><li><p>集成化任务</p></li><li><p>集成化任务一般形式</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">PHP</span> <span class="string">Action</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">shivammathur/setup-php@2.9.0</span></span><br></pre></td></tr></table></figure></li><li><p>这种任务 uses 与 run 不能共存,可以有 with…</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="新经验"><a href="#新经验" class="headerlink" title="新经验"></a>新经验</h1><blockquote><p><a href="https://www.runoob.com/w3cnote/yaml-intro.html">YAML 入门教程</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> experience </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yaml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell的一些常用命令</title>
      <link href="post/experience/shell/shell/"/>
      <url>post/experience/shell/shell/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-09-03 17:35:04 * @LastEditors: Weidows * @LastEditTime: 2021-03-11 23:03:34 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\experience\shell\shell.md--><ul><li><a href="#%E9%80%9A%E7%94%A8">通用</a></li><li><a href="#cmdpowershell">CMD/PowerShell</a></li><li><a href="#linux">Linux</a></li><li><a href="#%E5%AE%9D%E5%A1%94">宝塔</a></li><li><a href="#git">Git</a></li></ul><h1 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h1><table><thead><tr><th align="center">指令</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center"><code>cd</code></td><td align="center">打开指定目录</td></tr><tr><td align="center"><code>cd..</code></td><td align="center">上层目录</td></tr><tr><td align="center"><code>Ctrl + L</code></td><td align="center">清屏</td></tr><tr><td align="center"><code>exit</code></td><td align="center">退出</td></tr><tr><td align="center"><code>ping</code></td><td align="center">测试网络通断状态</td></tr><tr><td align="center"><code>Ctrl + C</code></td><td align="center">停止当前任务</td></tr><tr><td align="center"><code>mkdir</code></td><td align="center">新建文件夹</td></tr><tr><td align="center"><code>cp/mv/rm</code></td><td align="center">文件复制、移动与删除</td></tr><tr><td align="center"><code>curl + URL</code></td><td align="center">访问 URL(可加参数,具体百度)</td></tr></tbody></table><ul><li>文件末尾追加命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;add content&#x27;&gt;/home/data/test.sh   # 删除原行内容</span><br><span class="line">echo &#x27;add content&#x27;&gt;&gt;/home/data/test.sh  # 在末尾追加</span><br><span class="line">date +&quot;%Y-%m-%d %H:%M:%S.%N&quot; &gt;&gt; keepchange.txt  # 这种写法也可以,就是把前面当成字符串输入文件</span><br></pre></td></tr></table></figure><hr><h1 id="CMD-PowerShell"><a href="#CMD-PowerShell" class="headerlink" title="CMD/PowerShell"></a>CMD/PowerShell</h1><table><thead><tr><th align="center">指令</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center"><code>dir</code></td><td align="center">列出目录</td></tr><tr><td align="center"><code>md</code></td><td align="center">创建目录</td></tr><tr><td align="center"><code>rd</code></td><td align="center">删除目录</td></tr><tr><td align="center"><code>cd/</code></td><td align="center">返回根目录</td></tr><tr><td align="center"><code>del</code></td><td align="center">删除文件</td></tr><tr><td align="center"><code>cls/clear</code></td><td align="center">清屏</td></tr><tr><td align="center"><code>ipconfig</code></td><td align="center">查看网络配置</td></tr><tr><td align="center"><code>copy/xcopy</code></td><td align="center">复制/剪切</td></tr><tr><td align="center"><code>start + exe</code></td><td align="center">打开应用程序</td></tr><tr><td align="center"><code>start/explore + URL/HTML文件</code></td><td align="center">用默认浏览器打开</td></tr></tbody></table><ul><li>注意 cmd 不支持<code>/</code>作为路径,PowerShell 支持</li></ul><hr><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><table><thead><tr><th align="center">指令</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center"><code>ls</code></td><td align="center">列出当前目录的所有东西</td></tr><tr><td align="center"><code>su root</code></td><td align="center">获取最高权限(需要输入 root 密码)</td></tr><tr><td align="center"><code>ifconfig</code></td><td align="center">查看网络配置</td></tr><tr><td align="center"><code>dhclient</code></td><td align="center">DHCP 重新配置 IP</td></tr></tbody></table><hr><h1 id="宝塔"><a href="#宝塔" class="headerlink" title="宝塔"></a>宝塔</h1><table><thead><tr><th align="center">指令</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center"><code>/etc/init.d/bt default</code></td><td align="center">查看宝塔面板入口</td></tr></tbody></table><hr><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><table><thead><tr><th align="center">指令</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center"><code>git add .</code></td><td align="center">加入暂存区</td></tr><tr><td align="center"><code>git commit -m &quot;first commit&quot;</code></td><td align="center">提交</td></tr><tr><td align="center"><code>git remote add origin 你的远程库地址</code></td><td align="center">添加远程</td></tr><tr><td align="center"><code>git push origin master</code></td><td align="center">推送</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> experience </category>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> Linux </tag>
            
            <tag> 计算机系统 </tag>
            
            <tag> shell </tag>
            
            <tag> 宝塔面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>两种inject自定义Js/CSS文件方法 &amp;&amp; Pjax冲突解决方案</title>
      <link href="post/Web/Node/Hexo/inject_method/"/>
      <url>post/Web/Node/Hexo/inject_method/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-08-31 01:35:01 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:05:45 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Web\Node\Hexo\inject_method.md--><ul><li><a href="#hexo-%E6%B8%B2%E6%9F%93">hexo 渲染</a></li><li><a href="#%E9%80%9A%E8%BF%87%E4%B8%BB%E9%A2%98%E6%96%87%E4%BB%B6%E6%B3%A8%E5%85%A5">通过主题文件注入</a></li><li><a href="#%E9%80%9A%E8%BF%87%E4%BF%AE%E6%94%B9%E5%86%85%E9%83%A8%E6%96%87%E4%BB%B6%E6%B3%A8%E5%85%A5">通过修改内部文件注入</a></li><li><a href="#pjax-%E4%BD%BF-js-%E6%B8%B2%E6%9F%93%E5%A4%B1%E6%95%88%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">Pjax 使 JS 渲染失效解决方案</a><ul><li><a href="#%E6%96%87%E4%BB%B6%E5%AE%9A%E4%BD%8D">文件定位:</a></li></ul></li></ul><h1 id="hexo-渲染"><a href="#hexo-渲染" class="headerlink" title="hexo 渲染"></a>hexo 渲染</h1><ul><li>不知道为啥,hexo 只渲染 source 下面*.html 文件,而不会渲染*.HTML 文件.</li></ul><hr><h1 id="通过主题文件注入"><a href="#通过主题文件注入" class="headerlink" title="通过主题文件注入"></a>通过主题文件注入</h1><ul><li>一般是写在<code>theme/xxx/source/</code>里的<code>js</code>和<code>css</code>里面</li><li>随便起个名字,比如我的叫 mine.js 和 mine.css,里面写上需要的内容</li><li>在主题配置文件<code>_config.yml</code>里找到<code>inject:</code>字段,一般 css 在 head,js 在 bottom 里,如下:</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link <span class="attribute">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attribute">href</span>=<span class="string">&quot;./css/mine.css&quot;</span>&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    - &lt;script <span class="attribute">src</span>=<span class="string">&quot;./js/mine.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>但是务必注意这样引入只对<code>某一层</code>目录生效,比如上面只对 public/第一层目录生效,其中子目录无效,如果想使其生效:</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link <span class="attribute">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attribute">href</span>=<span class="string">&quot;./css/mine.css&quot;</span>&gt;</span><br><span class="line">    - &lt;link <span class="attribute">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attribute">href</span>=<span class="string">&quot;../css/mine.css&quot;</span>&gt;</span><br><span class="line">    - &lt;link <span class="attribute">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attribute">href</span>=<span class="string">&quot;../../css/mine.css&quot;</span>&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    - &lt;script <span class="attribute">src</span>=<span class="string">&quot;./js/mine.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    - &lt;script <span class="attribute">src</span>=<span class="string">&quot;../js/mine.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    - &lt;script <span class="attribute">src</span>=<span class="string">&quot;../../js/mine.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>喏,这样是让第一二三层生效了,以此类推.</li></ul><hr><h1 id="通过修改内部文件注入"><a href="#通过修改内部文件注入" class="headerlink" title="通过修改内部文件注入"></a>通过修改内部文件注入</h1><ul><li>首先操作如上面一样新建文件并写好 js 和 css 文件,只是注入方式不同</li><li>找到<code>theme/xxx/layout/include/layout.pug</code>,在内部添加如下:</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">script(<span class="attribute">src</span>=<span class="string">&#x27;js/mine.js&#x27;</span>)</span><br><span class="line">link(<span class="attribute">rel</span>=<span class="string">&#x27;stylesheet&#x27;</span>, <span class="attribute">href</span>=<span class="string">&#x27;css/mine.css&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>这两个分别是引入 js 和 css,可以分别在 body 和 head 里加入,注意缩进格式!</li><li>解释:<ul><li>在 Hexo generate 时会把<code>theme/xxx/source/</code>里你写的文件复制到<code>public/</code>对应目录里</li><li>一般 Hexo 在引用时根目录是<code>public/</code>,所以上面找的是<code>public/js/mine.js</code>和<code>public/css/mine.css</code></li><li>这样注入可能因为渲染位置和时机不对而未生效,需要酌情使用</li></ul></li></ul><hr><h1 id="Pjax-使-JS-渲染失效解决方案"><a href="#Pjax-使-JS-渲染失效解决方案" class="headerlink" title="Pjax 使 JS 渲染失效解决方案"></a>Pjax 使 JS 渲染失效解决方案</h1><ul><li>用过的都知道 Pjax 可以让网页在非跳转的情况下局部刷新来使网页加载速度提升</li><li>但是会带来非常多的 Bug,比如某些依赖 JS 渲染和加载的插件无效化,或者监听和交互不奏效</li><li>网上搜的有些是让各种插件本身屈服 Pjax 各种修改渲染策略</li><li>这里提出一个虽然不是新方法但是也是个不错的解决方案:</li></ul><hr><h2 id="文件定位"><a href="#文件定位" class="headerlink" title="文件定位:"></a>文件定位:</h2><ul><li>这里修改的是 Butterfly 自带的 Pjax 第三方 pug,如有不同需要自行查找</li><li>找到<code>themes/butterfly/layout/includes/third-party/pjax.pug</code>,打开开始修改</li><li>定位 <code>document.addEventListener(&#39;pjax:complete&#39;, function ()</code>这一行,这是监听 Pjax 跳转页面是否完成的函数,并执行跳转完成后的指令</li><li>原理就是让 Pjax 加载完成页面后再让 JS 渲染一遍(但是可能有些局部渲染还是无法生效)</li><li>复制需要重载的 JS,粘贴到这个函数括号内部,并 Hexo Server 测试一下,如不生效也没法治了…</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Node </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> Website </tag>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
            <tag> Hexo </tag>
            
            <tag> Pjax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-pages里一些奇奇怪怪的写法</title>
      <link href="post/Web/Node/Hexo/Hexo-fansy/"/>
      <url>post/Web/Node/Hexo/Hexo-fansy/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-08-27 01:13:03 * @LastEditors: Weidows * @LastEditTime: 2021-03-29 11:25:36 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Web\Node\Hexo\Hexo-fansy.md--><ul><li><a href="#hexo-%E6%96%87%E7%AB%A0%E6%A0%87%E9%A2%98--%E6%A0%BC%E5%BC%8F">Hexo 文章标题 &amp; 格式</a><ul><li><a href="#%E8%82%AF%E5%AE%9A%E8%A6%81%E8%83%8C%E8%BF%87%E7%9A%84">肯定要背过的</a></li><li><a href="#%E4%BB%A5%E4%B8%8B%E6%98%AF%E6%B2%A1%E7%94%A8%E8%BF%87%E6%88%96%E6%97%A0%E6%95%88%E7%9A%84">以下是没用过或无效的</a></li></ul></li><li><a href="#%E6%A0%87%E7%AD%BE%E5%A4%96%E6%8C%82">标签外挂</a></li><li><a href="#gallery-%E7%9B%B8%E5%86%8C%E5%9B%BE%E5%BA%93">Gallery 相册图库</a><ul><li><a href="#div-%E5%BC%8F%E5%86%99%E6%B3%95">div 式写法</a></li><li><a href="#%E6%95%88%E6%9E%9C">效果:</a></li><li><a href="#%E5%8F%A6%E4%B8%80%E7%A7%8D%E7%9B%B8%E5%86%8C%E5%BD%A2%E5%BC%8F%E8%87%AA%E5%8A%A8%E6%8E%92%E5%88%97">另一种相册形式(自动排列)</a></li></ul></li><li><a href="#tag-hide">tag-hide</a><ul><li><a href="#inline%E4%B8%80%E8%A1%8C%E5%86%85">inline(一行内)</a></li><li><a href="#block%E5%9D%97">Block(块)</a></li><li><a href="#toggle%E6%94%B6%E7%BC%A9%E6%A1%86">toggle(收缩框)</a></li></ul></li><li><a href="#mermaid">mermaid</a></li><li><a href="#tabs%E6%A0%87%E7%AD%BE%E5%9D%97">tabs(标签块)</a></li><li><a href="#button">Button</a><ul><li><a href="#%E5%86%99%E6%B3%95">写法:</a></li><li><a href="#%E5%A5%BD%E5%BA%B7%E7%9A%84-demo">好康的 demo:</a></li></ul></li><li><a href="#_configyml">_config.yml</a></li><li><a href="#%E5%9B%BE%E7%89%87%E5%BC%95%E5%85%A5">图片引入</a></li></ul><h1 id="Hexo-文章标题-amp-格式"><a href="#Hexo-文章标题-amp-格式" class="headerlink" title="Hexo 文章标题 &amp; 格式"></a>Hexo 文章标题 &amp; 格式</h1><p>在 markdown 文章里面最开头(如果不是开头的话报错),弄上如下框框</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">下面的格式标签写在这里</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="肯定要背过的"><a href="#肯定要背过的" class="headerlink" title="肯定要背过的"></a>肯定要背过的</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">title:</span> <span class="meta"># 网站标题</span></span><br><span class="line"><span class="symbol">categories:</span> <span class="meta"># 分类(只能单线)</span></span><br><span class="line">  - category_1</span><br><span class="line">  - category_1_1</span><br><span class="line">  - category_1_1_1</span><br><span class="line"><span class="symbol">tags:</span>  <span class="meta"># 标签(可以多标)</span></span><br><span class="line">  - tag_1</span><br><span class="line">  - tag_2</span><br><span class="line"><span class="symbol">type:</span> <span class="string">&quot;&quot;</span> <span class="meta"># 指定这个页面的类型(比如categories/tags)</span></span><br><span class="line"><span class="symbol">cover:</span> <span class="meta"># 封面图片,注意不能用../命令,双引号有无均可</span></span><br><span class="line"><span class="symbol">comments:</span> <span class="meta"># 评论开关 true/false</span></span><br><span class="line"><span class="symbol">date:</span> <span class="meta"># 创建时间</span></span><br><span class="line"><span class="symbol">updated:</span>  <span class="meta"># 更新时间</span></span><br><span class="line"><span class="symbol">description:</span> <span class="meta"># 网站描述</span></span><br><span class="line"><span class="symbol">aside:</span> <span class="meta"># 侧边栏开关</span></span><br><span class="line"><span class="symbol">top_img:</span> <span class="meta"># 文章banner图,如果有cover的话默认用的是cover(这个可以给_post之外的用),其隐藏前缀目录为Website/public/注意格式应为:images/xxx,但是这样会使_posts里文章的相关文章封面失效,需要用URL</span></span><br></pre></td></tr></table></figure><h2 id="以下是没用过或无效的"><a href="#以下是没用过或无效的" class="headerlink" title="以下是没用过或无效的"></a>以下是没用过或无效的</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">keywords:</span> <span class="meta"># 网站关键词</span></span><br><span class="line"><span class="symbol">author:</span> <span class="meta"># 网站作者</span></span><br><span class="line"><span class="symbol">language:</span> <span class="meta"># 语言, 一般填 &#x27;zh-CN&#x27;</span></span><br><span class="line"><span class="symbol">timezone:</span> <span class="meta"># 时区, 可以不填</span></span><br></pre></td></tr></table></figure><hr><h1 id="标签外挂"><a href="#标签外挂" class="headerlink" title="标签外挂"></a>标签外挂</h1><ul><li>写法:</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;%<span class="built_in"> note default </span>%&#125;</span><br><span class="line">default 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;%<span class="built_in"> note </span>primary no-icon %&#125;</span><br><span class="line">primary 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;%<span class="built_in"> note </span>success %&#125;</span><br><span class="line">success 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;%<span class="built_in"> note </span><span class="builtin-name">info</span> %&#125;</span><br><span class="line"><span class="builtin-name">info</span> 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;%<span class="built_in"> note </span><span class="builtin-name">warning</span> %&#125;</span><br><span class="line"><span class="builtin-name">warning</span> 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;%<span class="built_in"> note </span>danger %&#125;</span><br><span class="line">danger 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><ul><li><p>显示效果:</p><div class="note default flat"><p>default 提示块标籤</p></div><div class="note primary no-icon flat"><p>primary 提示块标籤</p></div><div class="note success flat"><p>success 提示块标籤</p></div><div class="note info flat"><p>info 提示块标籤</p></div><div class="note warning flat"><p>warning 提示块标籤</p></div><div class="note danger flat"><p>danger 提示块标籤</p></div></li></ul><hr><h1 id="Gallery-相册图库"><a href="#Gallery-相册图库" class="headerlink" title="Gallery 相册图库"></a>Gallery 相册图库</h1><h2 id="div-式写法"><a href="#div-式写法" class="headerlink" title="div 式写法"></a>div 式写法</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="keyword">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span><br><span class="line">&#123;% galleryGroup name <span class="keyword">description</span> link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name <span class="keyword">description</span> link img-url %&#125;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line"></span><br><span class="line">name：图库名字</span><br><span class="line"><span class="keyword">description</span>：图库描述</span><br><span class="line">link：连接到对应相册的地址</span><br><span class="line">img-url：图库封面的地址</span><br><span class="line"></span><br><span class="line">例如:</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="keyword">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span><br><span class="line">&#123;% galleryGroup PrettyGreen 一些养眼的绿色植物 tags<span class="regexp">/gallery_data/</span>PrettyGreen https:<span class="comment">//cdn.jsdelivr.net/gh/Weidows/Images/Fantasy/PrettyGreen/Nu9RF1.jpg %&#125;</span></span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="效果"><a href="#效果" class="headerlink" title="效果:"></a>效果:</h2>  <div class="gallery-group-main">    <figure class="gallery-group">  <img class="gallery-group-img" src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁纸</div>  <p>收藏的一些壁纸</p>  <a href='/Gallery/wallpaper'></a>  </figcaption>  </figure>      <figure class="gallery-group">  <img class="gallery-group-img" src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>关于漫威的图片</p>  <a href='/Gallery/marvel'></a>  </figcaption>  </figure>      <figure class="gallery-group">  <img class="gallery-group-img" src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>关于OH MY GIRL的图片</p>  <a href='/Gallery/ohmygirl'></a>  </figcaption>  </figure>    </div><h2 id="另一种相册形式-自动排列"><a href="#另一种相册形式-自动排列" class="headerlink" title="另一种相册形式(自动排列)"></a>另一种相册形式(自动排列)</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![<span class="string">图片描述</span>](<span class="link">图片地址</span>)</span><br><span class="line">![<span class="string">图片描述</span>](<span class="link">图片地址</span>)</span><br><span class="line">![<span class="string">图片描述</span>](<span class="link">图片地址</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="tag-hide"><a href="#tag-hide" class="headerlink" title="tag-hide"></a>tag-hide</h1><h2 id="inline-一行内"><a href="#inline-一行内" class="headerlink" title="inline(一行内)"></a>inline(一行内)</h2><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="symbol">%</span> hideInline <span class="built_in">content</span>,<span class="built_in">display</span>,bg,<span class="built_in">color</span> <span class="symbol">%</span>&#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">content</span>: 文本内容</span><br><span class="line">  <span class="built_in">display</span>: 按钮显示的文字 (可选)</span><br><span class="line">  bg: 按钮的背景颜色 (可选)</span><br><span class="line">  <span class="built_in">color</span>: 按钮文字的颜色 (可选)</span><br></pre></td></tr></table></figure><ul><li><p>例如 1:</p><p><code>我是谁:&#123;% hideInline Weidows,查看答案,#FF7242,#fff %&#125;</code></p><p>我是谁:<span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">Weidows</span></span></p></li></ul><h2 id="Block-块"><a href="#Block-块" class="headerlink" title="Block(块)"></a>Block(块)</h2><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">hideBlock</span> display,bg,color %&#125;</span></span><br><span class="line"><span class="xml">content</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">endhideBlock</span> %&#125;</span></span><br></pre></td></tr></table></figure><ul><li>例如 2:</li></ul><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">hideBlock</span> 我是谁 %&#125;</span></span><br><span class="line"><span class="xml">爷是:</span></span><br><span class="line"><span class="xml">Weidows</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">endhideBlock</span> %&#125;</span></span><br></pre></td></tr></table></figure><div class="hide-block"><button type="button" class="hide-button button--animated" style="">我是谁    </button><div class="hide-content"><p>爷是:<br>Weidows</p></div></div><h2 id="toggle-收缩框"><a href="#toggle-收缩框" class="headerlink" title="toggle(收缩框)"></a>toggle(收缩框)</h2><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">hideToggle</span> display,bg,color %&#125;</span></span><br><span class="line"><span class="xml">content</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">endhideToggle</span> %&#125;</span></span><br></pre></td></tr></table></figure><ul><li>例如 3:</li></ul><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">hideToggle</span> 我是谁 %&#125;</span></span><br><span class="line"><span class="xml">爷是:</span></span><br><span class="line"><span class="xml">Weidows</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">endhideToggle</span> %&#125;</span></span><br></pre></td></tr></table></figure><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>我是谁</span></div>    <div class="hide-content"><p>爷是:<br>Weidows</p></div></div><ul><li>tag-hide 内的标签外挂 content 内都不建议有 h1 - h6 等标题。因为 Toc 会把隐藏内容标题也显示出来，而且当滚动屏幕时，如果隐藏内容没有显示出来，会导致 Toc 的滚动出现异常。</li></ul><hr><h1 id="mermaid"><a href="#mermaid" class="headerlink" title="mermaid"></a>mermaid</h1><ul><li>写法:</li></ul><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">mermaid</span> %&#125;</span></span><br><span class="line"><span class="xml">内容</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">endmermaid</span> %&#125;</span></span><br></pre></td></tr></table></figure><ul><li>例如:<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">pie</span><br><span class="line">  title Key elements in Product X</span><br><span class="line">  &quot;Calcium&quot; : 42.96</span><br><span class="line">  &quot;Potassium&quot; : 50.05</span><br><span class="line">  &quot;Magnesium&quot; : 10.01</span><br><span class="line">  &quot;Iron&quot; : 5</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure></li><li>显示:<div class="mermaid">pie  title Key elements in Product X  &quot;Calcium&quot; : 42.96  &quot;Potassium&quot; : 50.05  &quot;Magnesium&quot; : 10.01  &quot;Iron&quot; : 5</div></li><li>mermaid 标籤不允许嵌套于一些隐藏属性的标籤外挂，例如: tag-hide 内的标籤外挂和 tabs 标籤外挂，这会导致 mermaid 图示无法正常显示，使用时请留意。</li><li>请不要压缩 html 代码，不然会导致 mermaid 显示异常</li></ul><hr><h1 id="tabs-标签块"><a href="#tabs-标签块" class="headerlink" title="tabs(标签块)"></a>tabs(标签块)</h1><ul><li><p>写法:</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs <span class="keyword">Unique</span> <span class="type">name</span>, [<span class="keyword">index</span>] %&#125;</span><br><span class="line">&lt;!<span class="comment">-- tab [Tab caption] [@icon] --&gt;</span></span><br><span class="line">markdown内容(<span class="keyword">inline</span>)</span><br><span class="line">&lt;!<span class="comment">-- endtab --&gt;</span></span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">Unique</span> <span class="type">name</span>   : <span class="keyword">Unique</span> <span class="type">name</span> <span class="keyword">of</span> tabs block tag <span class="keyword">without</span> comma.</span><br><span class="line">                Will be used <span class="keyword">in</span> #id<span class="string">&#x27;s as prefix for each tab with their index numbers.</span></span><br><span class="line"><span class="string">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span></span><br><span class="line"><span class="string">                Only for current url of post/page must be unique!</span></span><br><span class="line"><span class="string">[index]       : Index number of active tab.</span></span><br><span class="line"><span class="string">                If not specified, first tab (1) will be selected.</span></span><br><span class="line"><span class="string">                If index is -1, no tab will be selected. It&#x27;</span>s will be something <span class="keyword">like</span> spoiler.</span><br><span class="line">                Optional parameter.</span><br><span class="line">[Tab caption] : Caption <span class="keyword">of</span> <span class="keyword">current</span> tab.</span><br><span class="line">                <span class="keyword">If</span> <span class="keyword">not</span> caption specified, <span class="keyword">unique</span> <span class="type">name</span> <span class="keyword">with</span> tab <span class="keyword">index</span> suffix will be used <span class="keyword">as</span> caption <span class="keyword">of</span> tab.</span><br><span class="line">                <span class="keyword">If</span> <span class="keyword">not</span> caption specified, but specified icon, caption will empty.</span><br><span class="line">                Optional parameter.</span><br><span class="line">[@icon]       : FontAwesome icon <span class="type">name</span> (<span class="keyword">full</span>-<span class="type">name</span>, look <span class="keyword">like</span> <span class="string">&#x27;fas fa-font&#x27;</span>)</span><br><span class="line">                Can be specified <span class="keyword">with</span> <span class="keyword">or</span> <span class="keyword">without</span> space; e.g. <span class="string">&#x27;Tab caption @icon&#x27;</span> <span class="keyword">similar</span> <span class="keyword">to</span> <span class="string">&#x27;Tab caption@icon&#x27;</span>.</span><br><span class="line">                Optional parameter.</span><br></pre></td></tr></table></figure></li><li><p>例如: (test2 标签为预选状态,找不到的话就是第一个)</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">tabs</span> test2 %&#125;</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab 第一个Tab --&gt;</span></span></span><br><span class="line"><span class="xml">**tab名字为第一个Tab**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab @fab fa-apple-pay --&gt;</span></span></span><br><span class="line"><span class="xml">**只有图标 没有Tab名字**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span></span></span><br><span class="line"><span class="xml">**名字+icon**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">endtabs</span> %&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>显示:</p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test2-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test2-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test2-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test2-1"><p><strong>tab 名字为第一个 Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>只有图标 没有 Tab 名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li></ul><hr><h1 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h1><h2 id="写法"><a href="#写法" class="headerlink" title="写法:"></a>写法:</h2><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn <span class="comment">[url]</span>,<span class="comment">[text]</span>,<span class="comment">[icon]</span>,<span class="comment">[color]</span> <span class="comment">[style]</span> <span class="comment">[layout]</span> <span class="comment">[position]</span> <span class="comment">[size]</span> %&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">[url]</span>         : 链接</span><br><span class="line">  <span class="comment">[text]</span>        : 按钮文字</span><br><span class="line">  <span class="comment">[icon]</span>        : <span class="comment">[可选]</span> 图标</span><br><span class="line">  <span class="comment">[color]</span>       : <span class="comment">[可选]</span> 按钮背景顔色(默认style时）</span><br><span class="line">                        按钮字体和边框顔色(outline时)</span><br><span class="line">                        default/blue/pink/red/purple/orange/green</span><br><span class="line">  <span class="comment">[style]</span>       : <span class="comment">[可选]</span> 按钮样式 默认实心</span><br><span class="line">                        outline/留空</span><br><span class="line">  <span class="comment">[layout]</span>      : <span class="comment">[可选]</span> 按钮佈局 默认为line</span><br><span class="line">                        block/留空</span><br><span class="line">  <span class="comment">[position]</span>    : <span class="comment">[可选]</span> 按钮位置 前提是设置了layout为block 默认为左边</span><br><span class="line">                        center/right/留空</span><br><span class="line">  <span class="comment">[size]</span>        : <span class="comment">[可选]</span> 按钮大小</span><br><span class="line">                        larger/留空</span><br></pre></td></tr></table></figure><h2 id="好康的-demo"><a href="#好康的-demo" class="headerlink" title="好康的 demo:"></a>好康的 demo:</h2><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn <span class="string">&#x27;http://www.jerryc.me&#x27;</span>,JerryC,far fa-hand-<span class="built_in">point</span>-right,outline <span class="built_in">blue</span> larger %&#125;</span><br><span class="line">&#123;% btn <span class="string">&#x27;http://www.jerryc.me&#x27;</span>,JerryC,far fa-hand-<span class="built_in">point</span>-right,outline pink larger %&#125;</span><br><span class="line">&#123;% btn <span class="string">&#x27;http://www.jerryc.me&#x27;</span>,JerryC,far fa-hand-<span class="built_in">point</span>-right,outline <span class="built_in">red</span> larger %&#125;</span><br><span class="line">&#123;% btn <span class="string">&#x27;http://www.jerryc.me&#x27;</span>,JerryC,far fa-hand-<span class="built_in">point</span>-right,outline purple larger %&#125;</span><br><span class="line">&#123;% btn <span class="string">&#x27;http://www.jerryc.me&#x27;</span>,JerryC,far fa-hand-<span class="built_in">point</span>-right,outline orange larger %&#125;</span><br><span class="line">&#123;% btn <span class="string">&#x27;http://www.jerryc.me&#x27;</span>,JerryC,far fa-hand-<span class="built_in">point</span>-right,outline <span class="built_in">green</span> larger %&#125;</span><br></pre></td></tr></table></figure><ul><li>演示:<a class="btn-beautify button--animated outline blue larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline pink larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline red larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline purple larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline orange larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline green larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a></li></ul><hr><h1 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h1><ul><li>合并:把 themes/xxx/_config.yml 移动到 source/_data/里,并改名为 xxx.yml</li><li>我所遇到的各种问题<ul><li>这里面 inject js/css 功能只能插入本地的,而且必须是./形式</li><li>css 的 inject 在 head,js 的 inject 在 body,不能改变位置(失效)</li><li>valine 设置处的 placeholder 不能写带单引号的内容,会导致整个 valine 评论崩溃不显示</li></ul></li></ul><hr><h1 id="图片引入"><a href="#图片引入" class="headerlink" title="图片引入"></a>图片引入</h1><ul><li>引入图片,在 source 里面当路径正确出现图片时,还需要再加一层</li><li>因为在 Hexo generate 时会多出现一层路径,需要在 source 里多一个../</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Node </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> Website </tag>
            
            <tag> Markdown </tag>
            
            <tag> HTML </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM内存模型</title>
      <link href="post/Java/jvm_model/"/>
      <url>post/Java/jvm_model/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-08-25 19:14:35 * @LastEditors: Weidows * @LastEditTime: 2021-04-13 20:05:00 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\jvm_model.md--><ul><li><a href="#%E5%AD%90%E7%88%B6%E7%B1%BB%E5%8A%A0%E8%BD%BD">子父类加载</a></li><li><a href="#jvm-%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B">JVM 内存模型</a><ul><li><a href="#%E5%A0%86heap"><code>堆heap</code>:</a></li><li><a href="#%E6%A0%88stack"><code>栈stack</code>:</a></li><li><a href="#%E6%96%B9%E6%B3%95%E5%8C%BAmethod"><code>方法区method</code>:</a></li></ul></li><li><a href="#%E4%B8%BE%E4%B8%AA%E6%A0%97%E5%AD%90">举个栗子</a></li><li><a href="#%E9%87%8D%E7%82%B9"><code>重点!</code></a><ul><li><a href="#%E5%9C%A8-student-stu--new-student-%E8%BF%87%E7%A8%8B%E4%B8%AD%E5%AD%90%E7%B1%BB%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%8C%96%E8%BF%87%E7%A8%8B">在 Student stu = new Student(); 过程中,子类对象的实例化过程:</a></li><li><a href="#java-%E5%BC%95%E7%94%A8%E5%8F%98%E9%87%8F%E6%9C%89%E4%B8%A4%E4%B8%AA%E7%B1%BB%E5%9E%8B%E7%BC%96%E8%AF%91%E6%97%B6%E7%B1%BB%E5%9E%8B--%E8%BF%90%E8%A1%8C%E6%97%B6%E7%B1%BB%E5%9E%8B">Java 引用变量有两个类型:<code>编译时类型</code> &amp;&amp; <code>运行时类型</code></a></li></ul></li><li><a href="#%E8%99%9A%E6%8B%9F%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%E4%BE%8B%E5%AD%90">虚拟方法调用例子</a></li><li><a href="#jvm-errors">JVM Errors</a><ul><li><a href="#1awt-%E9%94%99%E8%AF%AF">1.AWT 错误</a></li><li><a href="#2jvm-%E9%94%99%E8%AF%AF">2.JVM 错误</a></li></ul></li></ul><h1 id="子父类加载"><a href="#子父类加载" class="headerlink" title="子父类加载"></a>子父类加载</h1><ul><li><p>最近发现的一个知识漏洞</p><blockquote><p><a href="https://www.cnblogs.com/zxcoder/p/12250210.html">Java 多态之 Father f=new Son();</a></p></blockquote></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="JVM-内存模型"><a href="#JVM-内存模型" class="headerlink" title="JVM 内存模型"></a>JVM 内存模型</h1><h2 id="堆heap"><a href="#堆heap" class="headerlink" title="堆heap:"></a><code>堆heap</code>:</h2><p>所有的对象(包括定义的对象和字符串对象)</p><h2 id="栈stack"><a href="#栈stack" class="headerlink" title="栈stack:"></a><code>栈stack</code>:</h2><p>基础数据类型,以及对象的引用(对象在堆内部的地址)</p><h2 id="方法区method"><a href="#方法区method" class="headerlink" title="方法区method:"></a><code>方法区method</code>:</h2><p>所有的 class 和 static 变量</p><hr><h1 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h1><p>Person p = new Person();<br>栈里面存的就是 p,这个 p 指向堆里面 new Person()出来的那个对象地址</p><hr><h1 id="重点"><a href="#重点" class="headerlink" title="重点!"></a><code>重点!</code></h1><h2 id="在-Student-stu-new-Student-过程中-子类对象的实例化过程"><a href="#在-Student-stu-new-Student-过程中-子类对象的实例化过程" class="headerlink" title="在 Student stu = new Student(); 过程中,子类对象的实例化过程:"></a>在 Student stu = new Student(); 过程中,子类对象的实例化过程:</h2><ul><li><p><code>方法区</code>:</p><ol><li>先加载 Person.class,然后是 Student.class (先父类后子类)</li></ol></li><li><p><code>堆内存</code>:</p><ol start="3"><li><p>开辟对象空间,分配地址</p></li><li><p>在对象空间对对象的属性(包括父类的属性)进行默认初始化</p></li><li><p>显示初始化父类属性</p></li><li><p>显示初始化子类属性</p></li></ol></li><li><p><code>栈内存</code>:</p><ol start="2"><li><p>申请空间,声明变量 stu</p></li><li><p>子类构造函数方法进栈</p></li><li><p>父类构造方法进栈,执行后出栈</p></li><li><p>初始化完毕后,将堆内存中的地址赋给引用变量,子类构造方法出栈</p></li></ol></li></ul><h2 id="Java-引用变量有两个类型-编译时类型-amp-amp-运行时类型"><a href="#Java-引用变量有两个类型-编译时类型-amp-amp-运行时类型" class="headerlink" title="Java 引用变量有两个类型:编译时类型 &amp;&amp; 运行时类型"></a>Java 引用变量有两个类型:<code>编译时类型</code> &amp;&amp; <code>运行时类型</code></h2><ul><li>编译时类型有声明该变量是使用的类型决定</li><li>运行时类型由实际赋给该变量的对象决定</li><li>如果二者类型不一致,就出现(对象的)多态<ul><li>子类的对象可以替代父类的对象使用</li><li>一个引用类型变量可以指向不同类型的对象</li></ul></li><li>成员变量:不具备多态性,只看引用变量所属的类(其指向的堆内的具体对象)是否存在该成员</li></ul><hr><h1 id="虚拟方法调用例子"><a href="#虚拟方法调用例子" class="headerlink" title="虚拟方法调用例子"></a>虚拟方法调用例子</h1><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Person e = <span class="keyword">new</span> <span class="constructor">Student()</span>;</span><br><span class="line">e.get<span class="constructor">Info()</span>;</span><br></pre></td></tr></table></figure><ul><li>编译时 e 为 Person 类型,调用时是用的 Student 类的(动态绑定)</li></ul><hr><h1 id="JVM-Errors"><a href="#JVM-Errors" class="headerlink" title="JVM Errors"></a>JVM Errors</h1><h3 id="1-AWT-错误"><a href="#1-AWT-错误" class="headerlink" title="1.AWT 错误"></a>1.AWT 错误</h3><h3 id="2-JVM-错误"><a href="#2-JVM-错误" class="headerlink" title="2.JVM 错误"></a>2.JVM 错误</h3><ul><li>StackOverflow</li><li>OutOfMemory</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VScode用户代码片段设置 &amp;&amp; 使用</title>
      <link href="post/tools/vscode/snippet/"/>
      <url>post/tools/vscode/snippet/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-08-25 19:14:35 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:21:44 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\vscode\snippet.md--><ul><li><a href="#%E5%BC%80%E5%90%AF-snippet">开启 snippet</a></li><li><a href="#%E5%A2%9E%E6%B7%BB%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5">增添代码片段</a></li><li><a href="#%E6%88%91%E7%9A%84%E6%A8%A1%E6%9D%BF">我的模板</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="开启-snippet"><a href="#开启-snippet" class="headerlink" title="开启 snippet"></a>开启 snippet</h1><ul><li><p>首先需要打开 markdown 文件的 <code>quickSuggestions</code>,因为其默认是未开启状态</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/31/til5Vdxys4ocjkC.png" alt="20210131221250" /></li><li><p>在设置文件里加上以下设置</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;[markdown]&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;editor.quickSuggestions&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p></li></ul><h1 id="增添代码片段"><a href="#增添代码片段" class="headerlink" title="增添代码片段"></a>增添代码片段</h1><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2021/01/31/r19TEcwA3GxNpVk.png" alt="20210131221522" /><ul><li><p>点小齿轮找到用户代码片段设置,进入设置文件,在大括号里添加自定义的代码片段,比如下面我的:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&quot;hexo模板&quot;: &#123;</span><br><span class="line">  &quot;scope&quot;: &quot;markdown&quot;,</span><br><span class="line">  &quot;prefix&quot;: &quot;title&quot;,</span><br><span class="line">  &quot;body&quot;: [</span><br><span class="line">    &quot;---&quot;,</span><br><span class="line">    &quot;title: &quot;,</span><br><span class="line">    &quot;categories:&quot;,</span><br><span class="line">    &quot;  - &quot;,</span><br><span class="line">    &quot;tags:&quot;,</span><br><span class="line">    &quot;  - &quot;,</span><br><span class="line">    &quot;cover: &quot;,</span><br><span class="line">    &quot;# top_img: &quot;,</span><br><span class="line">    &quot;---&quot;,</span><br><span class="line">    &quot;&quot;,</span><br><span class="line">    <span class="string">&quot;&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>这个片段就可以在 markdown 文件内输入<code>title</code>快速生成上面的模板,省去复制的麻烦了.</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="我的模板"><a href="#我的模板" class="headerlink" title="我的模板"></a>我的模板</h1><blockquote><p><a href="https://gist.github.com/Weidows/a9d0949b9a8e2c75e5177789a9eb71e8#file-snippets-mine-json-code-snippets">源码 Github 链接</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VScode </tag>
            
            <tag> snippet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于在不会PHP的情况下调用PHP API</title>
      <link href="post/experience/PHP_interface/"/>
      <url>post/experience/PHP_interface/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-08-25 09:50:37 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:01:12 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\experience\PHP_interface.md--><ul><li><a href="#%E7%AE%80%E5%8D%95%E8%B0%83%E7%94%A8">简单调用</a></li><li><a href="#get-%E6%96%B9%E5%BC%8F%E7%9A%84%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8">GET 方式的直接使用</a></li></ul><h1 id="简单调用"><a href="#简单调用" class="headerlink" title="简单调用"></a>简单调用</h1><ul><li>他会提供相应接口给你的，具体调用方法就相当于讲求某个链接,如：<br><code>http://localhost/operate.php?act=get_user_list&amp;type=json</code></li><li>在这里 operate.php 相当于一个接口，其中 get_user_list 是一个 API（获取用户列表），讲求返回的数据类型为 JSON 格式。</li><li>你只需要在你 PHP 代码中执行这条链接他就会返回。</li></ul><h1 id="GET-方式的直接使用"><a href="#GET-方式的直接使用" class="headerlink" title="GET 方式的直接使用"></a>GET 方式的直接使用</h1><p>$file_contents = file_get_content(‘<a href="http://localhost/operate.php?act=get_user_list&amp;type=json&#39;">http://localhost/operate.php?act=get_user_list&amp;type=json&#39;</a>)</p><p>POST 方式得用下面的(需要开启 PHP curl 支持)。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$url</span> = <span class="string">&#x27;http://localhost/operate.php?act=get_user_list&amp;type=json&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ch</span> = curl_init ();</span><br><span class="line"></span><br><span class="line">curl_setopt ( <span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span> );</span><br><span class="line"></span><br><span class="line">curl_setopt ( <span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span> );</span><br><span class="line"></span><br><span class="line">curl_setopt ( <span class="variable">$ch</span>, CURLOPT_CONNECTTIMEOUT, <span class="number">10</span> );</span><br><span class="line"></span><br><span class="line">curl_setopt ( <span class="variable">$ch</span>, CURLOPT_POST, <span class="number">1</span> ); <span class="regexp">//</span>启用POST提交</span><br><span class="line"></span><br><span class="line"><span class="variable">$file_contents</span> = curl_exec ( <span class="variable">$ch</span> );</span><br><span class="line"></span><br><span class="line">curl_close ( <span class="variable">$ch</span> );</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> experience </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> PHP </tag>
            
            <tag> Website </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>淦翻Hexo各种插件安装+调试</title>
      <link href="post/Web/Node/Hexo/Hexo-plugin/"/>
      <url>post/Web/Node/Hexo/Hexo-plugin/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-08-25 00:05:52 * @LastEditors: Weidows * @LastEditTime: 2021-03-23 09:09:34 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Web\Node\Hexo\Hexo-plugin.md--><h1 id="常用的-Hexo-自身命令"><a href="#常用的-Hexo-自身命令" class="headerlink" title="常用的 Hexo 自身命令"></a>常用的 Hexo 自身命令</h1><ul><li><p>安装 Hexo-cli(命令行支持插件,它自动包含 hexo 本身)</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure></li><li><p>查看版本</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="built_in">version</span></span><br></pre></td></tr></table></figure></li><li><p>升级</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> update hexo</span><br></pre></td></tr></table></figure></li><li><p>初始化博客</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">init</span> 博客名</span><br></pre></td></tr></table></figure></li><li><p>删除插件</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> uninstall hexo-xxx</span><br></pre></td></tr></table></figure></li><li><p>新建页面</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hexo new<span class="built_in"> page page </span>名</span><br></pre></td></tr></table></figure></li><li><p>安装过的插件会在 root/package.json 里显示</p></li></ul><hr><h1 id="安装渲染器"><a href="#安装渲染器" class="headerlink" title="安装渲染器"></a>安装渲染器</h1><ul><li><p>pug 和 stylus 渲染器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="添加-tags-categories-link-页面"><a href="#添加-tags-categories-link-页面" class="headerlink" title="添加 tags/categories/link 页面"></a>添加 tags/categories/link 页面</h1><ul><li>可以通过修改 markdown 来更换标题和 top_img</li></ul><h2 id="tags"><a href="#tags" class="headerlink" title="tags"></a>tags</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new<span class="built_in"> page </span>tags</span><br></pre></td></tr></table></figure><h2 id="categories"><a href="#categories" class="headerlink" title="categories"></a>categories</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new<span class="built_in"> page </span>categories</span><br></pre></td></tr></table></figure><h2 id="link"><a href="#link" class="headerlink" title="link"></a>link</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new<span class="built_in"> page </span>link</span><br></pre></td></tr></table></figure><ul><li><p>另外还需要在 <code>source/_data/link.yml</code> 里添加数据,如:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">友情鏈接</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">那些人，那些事</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JerryC</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://jerryc.me/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://jerryc.me/image/avatar.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">今日事,今日畢</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://hexo.io/zh-tw/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">快速、簡單且強大的網誌框架</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">網站</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">值得推薦的網站</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Youtube</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.youtube.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">視頻網站</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Weibo</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.weibo.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">中國最大社交分享平台</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Twitter</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://twitter.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">社交分享平台</span></span><br></pre></td></tr></table></figure></li><li><p>最后,还可以在 link.md 中自定义样式(写的内容显示在友链下方)</p></li></ul><hr><h1 id="安装-deployer"><a href="#安装-deployer" class="headerlink" title="安装 deployer"></a>安装 deployer</h1><ul><li><p>(这个不能用阿里源) &amp;&amp; 编译部署三部曲(GitHub 需要,Gitee 不用)</p></li><li><p>安装:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/hexojs/hexo-deployer-git">官方配置文档(必要)</a></p><ul><li>个人配置</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">https://gitee.com/Weidows/Weidows.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">https://github.com/Weidows/Weidows.github.io.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li><li><p>使用:在博客根目录使用命令<code>hexo deploy</code></p><ul><li>也可以参照下面一条龙服务自行添加快捷方式.</li></ul></li></ul><hr><h1 id="一条龙服务"><a href="#一条龙服务" class="headerlink" title="一条龙服务"></a>一条龙服务</h1><ul><li><p>正常的测试流程为</p><ul><li>hexo clean</li><li>hexo generate</li><li>hexo server</li></ul></li><li><p>每次生成需要等一段时间,怎么把它们合成为一条指令呢?参下:</p></li><li><p>定位博客根目录下的<code>package.json</code></p><ul><li>修改<code>&quot;scripts&quot;</code>,如下<code>&quot;all&quot;</code>就是新添加的:<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;build&quot;</span>: <span class="string">&quot;hexo generate&quot;</span>,</span><br><span class="line">  <span class="string">&quot;clean&quot;</span>: <span class="string">&quot;hexo clean&quot;</span>,</span><br><span class="line">  <span class="string">&quot;deploy&quot;</span>: <span class="string">&quot;hexo deploy&quot;</span>,</span><br><span class="line">  <span class="string">&quot;server&quot;</span>: <span class="string">&quot;hexo server&quot;</span>,</span><br><span class="line">  <span class="string">&quot;all&quot;</span>: <span class="string">&quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>然后就可以一键使用了.</p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/12/05/CP6l7n1HmQ3uKaU.png" alt="20201205150401" /></li></ul><hr><h1 id="安装-Live2D"><a href="#安装-Live2D" class="headerlink" title="安装 Live2D"></a>安装 Live2D</h1><ul><li>安装:(不能用 npm 这俩二选一)<ul><li><code>npm install --save hexo-helper-live2d</code></li></ul></li><li>导入模型:<ul><li>白猫:npm install live2d-widget-model-tororo</li><li>黑猫:npm install live2d-widget-model-hijiki</li></ul></li><li>启用模型:<br>在<code>/_config.yml</code> 里找到 model.use 改成想用的模型文件夹名</li></ul><hr><h1 id="comment-amp-search-amp-字数统计"><a href="#comment-amp-search-amp-字数统计" class="headerlink" title="comment &amp; search &amp; 字数统计"></a>comment &amp; search &amp; 字数统计</h1><ul><li>依次都装上:<ul><li><code>npm install hexo-generator-search --save</code></li><li><code>npm install hexo-wordcount --save</code></li></ul></li><li>然后把主题里的_config.yml 改改</li><li>需要注意 comment 插件有些主题自带,不需要安装(butterfly)</li><li>在 source/data/里新建 valine.json,里面可以添加表情包了,格式如下:</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;表情1&quot;</span>: <span class="string">&quot;URL&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;表情2&quot;</span>: <span class="string">&quot;URL&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="添加-bilibili-番剧"><a href="#添加-bilibili-番剧" class="headerlink" title="添加 bilibili 番剧"></a>添加 bilibili 番剧</h1><ul><li><p>安装 <code>npm install hexo-bilibili-bangumi --save</code></p></li><li><p>配置: 写入<code>_config.yml</code> 里(root/里的)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bangumi:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="comment">#页面路径</span></span><br><span class="line">  <span class="attr">vmid:</span> <span class="comment"># 哔哩哔哩番剧页面的 vmid(uid)</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">&quot;追番列表&quot;</span> <span class="comment"># 页面的标题</span></span><br><span class="line">  <span class="attr">quote:</span> <span class="string">&quot;生命不息，追番不止！&quot;</span> <span class="comment"># 写在页面开头的一段话，支持 html 语法</span></span><br><span class="line">  <span class="attr">show:</span> <span class="number">1</span> <span class="comment"># 初始显示页面：0: 想看 , 1: 在看 , 2: 看过，默认为 1</span></span><br><span class="line">  <span class="attr">loading:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.gif&quot;</span> <span class="comment"># 图片加载完成前的 loading 图片</span></span><br><span class="line">  <span class="attr">metaColor:</span> <span class="comment">#  meta 部分(简介上方)字体颜色</span></span><br><span class="line">  <span class="attr">color:</span> <span class="comment"># 简介字体颜色</span></span><br><span class="line">  <span class="attr">webp:</span></span><br><span class="line">  <span class="attr">progress:</span> <span class="comment"># 获取番剧数据时是否显示进度条，默认true</span></span><br></pre></td></tr></table></figure></li><li><p>创建页面,进入 root/命令行,执行: <code>hexo new page bangumis</code> ;当然也可以直接在 source/直接新建一个 markdown,然后把文件头 type 写为这样:<code>type: &quot;bangumis&quot;</code> ,亲自尝试过可以不用.md,在_data 里只放上数据文件 bangumis.json 就可以在指定路径生成了</p></li><li><p>另外,Hexo g 之前最好更新下数据,防止请求过多: <code>hexo bangumi -u</code> 再者删除数据: <code>hexo bangumi -d</code></p></li></ul><hr><h1 id="添加站点地图"><a href="#添加站点地图" class="headerlink" title="添加站点地图"></a>添加站点地图</h1><ul><li><p>百度专用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure></li><li><p>通用的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2></li></ul><blockquote><p><code>root/_config.yml</code></p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap/baidusitemap.xml</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap/sitemap.xml</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="../Hexo-SEO">参考文章:👌Hexo-SEO 搜索引擎优化</a></p></blockquote><hr><h1 id="Steam-游戏页面"><a href="#Steam-游戏页面" class="headerlink" title="Steam 游戏页面"></a>Steam 游戏页面</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-steam-games <span class="comment">--save</span></span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">steam:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">steamId:</span> <span class="string">&quot;76561198321099712&quot;</span> <span class="comment"># steam64位Id(需要放在引号里),将steam库设置为公开</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">tags/games.html</span> <span class="comment"># 页面路径，默认steamgames/index.html</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">⭐️养鸡场⭐️</span></span><br><span class="line">  <span class="attr">quote:</span> <span class="string">&quot;Steam给爷爬!别让我家EPIC误会&quot;</span> <span class="comment"># 写在页面开头的一段话,支持html语法</span></span><br><span class="line">  <span class="attr">tab:</span> <span class="string">all</span> <span class="comment"># all或recent, all: 所有游戏, recent: 最近游玩的游戏</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">1000</span></span><br><span class="line">  <span class="attr">imgUrl:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/Weidows/Images/img/Avatar/avatar.png&quot;</span> <span class="comment"># 图片链接，在quote下面放一张图片，图片链接到Steam个人资料，可留空</span></span><br><span class="line">  <span class="attr">proxy:</span> <span class="comment"># 如果无法访问steam社区的话请使用代理</span></span><br><span class="line">    <span class="attr">host:</span> <span class="comment"># 代理ip或域名</span></span><br><span class="line">    <span class="attr">port:</span> <span class="comment"># 代理端口</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li><p><code>Hexo g</code> 之前 <code>hexo steam -u</code> (如果失败需要手动)</p></li><li><p>浏览器打开<code>https://steamcommunity.com/profiles/76561198321099712/games/?tab=all</code> {steamId}和{tab}分别替换为上面配置中提到的 steamId 和 tab</p></li><li><p>F12 控制台 console 输入下面内容执行:</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">let script = jQuery(<span class="string">&#x27;script[language=&quot;javascript&quot;]&#x27;</span>);</span><br><span class="line">var games = [];</span><br><span class="line"><span class="keyword">for</span> (let i = <span class="number">0</span>; i &lt; script.length; i++) &#123;</span><br><span class="line">  <span class="keyword">if</span> (script.e<span class="string">q(i)</span>.html().includes(<span class="string">&quot;rgGames&quot;</span>)) &#123;</span><br><span class="line">    let rgGames = script.e<span class="string">q(i)</span>.html().match(<span class="regexp">/var.*?rgGames.*?=.*?(\[[\w\W]*?\&#125;\&#125;\]);/</span>);</span><br><span class="line">    <span class="keyword">if</span> (rgGames) &#123;</span><br><span class="line">      games = JSON.parse(rgGames[<span class="number">1</span>]);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">document.write(JSON.stringify(games))</span><br></pre></td></tr></table></figure></li><li><p>生成的内容复制到<code>root/node_modules/hexo-steam-games/data/games.json</code></p></li><li><p>这个不用 new 页面(但是数据文件路径无法改)</p></li></ul><hr><h1 id="音乐-aplayer-已弃用"><a href="#音乐-aplayer-已弃用" class="headerlink" title="音乐 aplayer(已弃用)"></a>音乐 aplayer(已弃用)</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> <span class="comment">--save hexo-tag-aplayer</span></span><br></pre></td></tr></table></figure><h2 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h2><ul><li>如果 per_page 关了的话在需要开启的页面 Front-matter 添加<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="Meting"><a href="#Meting" class="headerlink" title="Meting"></a>Meting</h2></li></ul><blockquote><p>吸底 mini 播放器</p></blockquote><ul><li><p>需要导入 js 并通过导入 css 修改 Aplayer 缩进样式</p></li><li><p>在_config.yml 里修改有一定限制,inject 只能搞腚 source 中文章的其中某一层目录,多层需要不同层级目录各引用一次,如下:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;./css/mine.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;./js/mine.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;../js/mine.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;../../js/mine.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;../../../js/mine_post.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>这里介绍另一种全局 inject 的方法:</p><ul><li>找到 theme/xxx/layout/includes/layout.pug</li><li>在最后添加如下字段:<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">script(<span class="attribute">src</span>=<span class="string">&#x27;js/mine.js&#x27;</span>)</span><br><span class="line">link(<span class="attribute">rel</span>=<span class="string">&#x27;stylesheet&#x27;</span>, <span class="attribute">href</span>=<span class="string">&#x27;css/mine.css&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li>按照上面可以自行修改 JS/CSS 的引入,全局生效(注意有可能 PJAX 会使这种引入的 Js 无效化)</li></ul></li></ul><hr><h1 id="安装豆瓣-已停用"><a href="#安装豆瓣-已停用" class="headerlink" title="安装豆瓣(已停用)"></a>安装豆瓣(已停用)</h1><h2 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-douban <span class="comment">--save</span></span><br></pre></td></tr></table></figure><h2 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">douban:</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">userID</span></span><br><span class="line">  <span class="attr">builtin:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">10000</span></span><br><span class="line">  <span class="attr">book:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">&quot;My book title&quot;</span></span><br><span class="line">    <span class="attr">quote:</span> <span class="string">&quot;My book quote&quot;</span></span><br><span class="line">  <span class="attr">movie:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">&quot;My movie title&quot;</span></span><br><span class="line">    <span class="attr">quote:</span> <span class="string">&quot;My movie quote&quot;</span></span><br><span class="line">  <span class="attr">game:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">&quot;My game title&quot;</span></span><br><span class="line">    <span class="attr">quote:</span> <span class="string">&quot;My game quote&quot;</span></span><br></pre></td></tr></table></figure><ul><li>user: 你的豆瓣 ID.打开豆瓣，登入账户，然后在右上角点击 “个人主页” ，这时候地址栏的 URL 大概是这样：”<a href="https://www.douban.com/people/xxxxxx/&quot;">https://www.douban.com/people/xxxxxx/&quot;</a> ，其中的”xxxxxx”就是你的个人 ID 了。</li><li>builtin: 是否将生成页面的功能嵌入 hexo s 和 hexo g 中，默认是 false,另一可选项为 true(1.x.x 版本新增配置项)。</li><li>title: 该页面的标题.</li><li>quote: 写在页面开头的一段话,支持 html 语法.</li><li>timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</li><li>如果只想显示某一个页面(比如 movie)，那就把其他的配置项注释掉即可。</li></ul><hr><h1 id="Gulp"><a href="#Gulp" class="headerlink" title="Gulp"></a>Gulp</h1><ul><li><p>Cli 和模块</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp -g</span><br><span class="line">npm install gulp-htmlclean gulp-htmlmin gulp-imagemin gulp-minify-css gulp-uglify --save</span><br></pre></td></tr></table></figure></li><li><p>在博客根目录新建<code>gulpfile.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">&quot;gulp&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">&quot;gulp-minify-css&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">&quot;gulp-uglify&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">&quot;gulp-htmlmin&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">&quot;gulp-htmlclean&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> imagemin = <span class="built_in">require</span>(<span class="string">&quot;gulp-imagemin&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩html</span></span><br><span class="line">gulp.task(<span class="string">&quot;minify-html&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src(<span class="string">&quot;./public/**/*.html&quot;</span>)</span><br><span class="line">    .pipe(htmlclean())</span><br><span class="line">    .pipe(</span><br><span class="line">      htmlmin(&#123;</span><br><span class="line">        removeComments: <span class="literal">true</span>,</span><br><span class="line">        minifyJS: <span class="literal">true</span>,</span><br><span class="line">        minifyCSS: <span class="literal">true</span>,</span><br><span class="line">        minifyURLs: <span class="literal">true</span>,</span><br><span class="line">      &#125;)</span><br><span class="line">    )</span><br><span class="line">    .pipe(gulp.dest(<span class="string">&quot;./public&quot;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩css</span></span><br><span class="line">gulp.task(<span class="string">&quot;minify-css&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src(<span class="string">&quot;./public/**/*.css&quot;</span>)</span><br><span class="line">    .pipe(</span><br><span class="line">      minifycss(&#123;</span><br><span class="line">        compatibility: <span class="string">&quot;ie8&quot;</span>,</span><br><span class="line">      &#125;)</span><br><span class="line">    )</span><br><span class="line">    .pipe(gulp.dest(<span class="string">&quot;./public&quot;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩js</span></span><br><span class="line">gulp.task(<span class="string">&quot;minify-js&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src(<span class="string">&quot;./public/js/**/*.js&quot;</span>)</span><br><span class="line">    .pipe(uglify())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">&quot;./public&quot;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩图片</span></span><br><span class="line">gulp.task(<span class="string">&quot;minify-images&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src(<span class="string">&quot;./public/images/**/*.*&quot;</span>)</span><br><span class="line">    .pipe(</span><br><span class="line">      imagemin(</span><br><span class="line">        [</span><br><span class="line">          imagemin.gifsicle(&#123; <span class="attr">optimizationLevel</span>: <span class="number">3</span> &#125;),</span><br><span class="line">          imagemin.jpegtran(&#123; <span class="attr">progressive</span>: <span class="literal">true</span> &#125;),</span><br><span class="line">          imagemin.optipng(&#123; <span class="attr">optimizationLevel</span>: <span class="number">7</span> &#125;),</span><br><span class="line">          imagemin.svgo(),</span><br><span class="line">        ],</span><br><span class="line">        &#123; <span class="attr">verbose</span>: <span class="literal">true</span> &#125;</span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">    .pipe(gulp.dest(<span class="string">&quot;./public/images&quot;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认任务</span></span><br><span class="line">gulp.task(<span class="string">&quot;default&quot;</span>, [</span><br><span class="line">  <span class="string">&quot;minify-html&quot;</span>,</span><br><span class="line">  <span class="string">&quot;minify-css&quot;</span>,</span><br><span class="line">  <span class="string">&quot;minify-js&quot;</span>,</span><br><span class="line">  <span class="string">&quot;minify-images&quot;</span>,</span><br><span class="line">]);</span><br></pre></td></tr></table></figure></li><li><p>然后<code>gulp</code>就可以压缩了.</p></li></ul><blockquote><p>参考文章 <a href="https://blog.csdn.net/fengdi_yuxi/article/details/94402350">Hexo 博客之速度优化</a></p></blockquote><hr><h1 id="Random-页面"><a href="#Random-页面" class="headerlink" title="Random 页面"></a>Random 页面</h1><ul><li>安装依赖和插件<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> <span class="keyword">object</span>-assign <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-random <span class="comment">--save</span></span><br></pre></td></tr></table></figure></li><li>应用<br>插件会在根目录生成 <code>random.html</code>.</li></ul><hr><h1 id="hexo-neat-压缩"><a href="#hexo-neat-压缩" class="headerlink" title="hexo-neat(压缩)"></a>hexo-neat(压缩)</h1><h2 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-neat <span class="comment">--save</span></span><br></pre></td></tr></table></figure><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-neat</span></span><br><span class="line"><span class="comment"># 博文压缩</span></span><br><span class="line"><span class="attr">neat_enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 压缩html</span></span><br><span class="line"><span class="attr">neat_html:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line"><span class="comment"># 压缩css</span></span><br><span class="line"><span class="attr">neat_css:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;**/*.min.css&quot;</span></span><br><span class="line"><span class="comment"># 压缩js</span></span><br><span class="line"><span class="attr">neat_js:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mangle:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">output:</span></span><br><span class="line">  <span class="attr">compress:</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;**/*.min.js&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;**/jquery.fancybox.pack.js&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;**/index.js&quot;</span></span><br></pre></td></tr></table></figure><hr><h1 id="注意事项-amp-常见问题"><a href="#注意事项-amp-常见问题" class="headerlink" title="注意事项 &amp; 常见问题"></a>注意事项 &amp; 常见问题</h1><ul><li><p>注意如果 repo 命名时没加.github.io 的后缀,那么只能 deploy 到 gh-pages 分支(否则出错)</p></li><li><p>workflow 作用只是把 public/ deploy 到 gh-pages 分支上,generate 出 public/仍需要在本地进行</p></li><li><p>如果打开 Hexo Server 后报错(extends includes/layout.pug block content #recent-posts.recent-posts include includes/recent-posts.pug include includes/pagination.pug)是因为没有安装渲染插件</p></li><li><p>导航栏中的项目不能打 tag 和 categories(编译报错),也不能进行 cover 更改(无效)</p></li><li><p>注意修改 source 的 css 或者 js 后进行 generate 不会刷新状态,需要删掉重新 generate</p></li><li><p>theme/xxx/_config.yml 可以放在 source/_data/xxx.yml 来当主题配置文件,原先的可以删去</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Node </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> Website </tag>
            
            <tag> npm </tag>
            
            <tag> Hexo </tag>
            
            <tag> Node.Js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MOOC浙大翁凯教授Java第六章狐狸与兔子源代码</title>
      <link href="post/Java/MOOC-java-FoxAndRabbit/"/>
      <url>post/Java/MOOC-java-FoxAndRabbit/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-08-23 20:54:56 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:56:13 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Java\MOOC-java-FoxAndRabbit.md--><ul><li><a href="#%E4%B8%80%E7%AE%80%E4%BB%8B">一.简介</a></li><li><a href="#%E4%BA%8C%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5">二.代码片段</a></li><li><a href="#animal">Animal</a></li><li><a href="#fox">Fox</a></li><li><a href="#rabbit">Rabbit</a></li><li><a href="#cell">Cell</a></li><li><a href="#field">Field</a></li><li><a href="#location">Location</a></li><li><a href="#view">View</a></li><li><a href="#foxandrabbit">FoxAndRabbit</a></li></ul><h1 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h1><p>由于老师在课程中没给出源代码,有些知识点没有涉及到,需要源码作为参考,但是个人百度谷歌了半天没找到真正所需要的(甚至有人卖…)</p><p>这篇给出的是 <em>6.3</em> 的源码,如果 <strong>寻找第七章的或者其他的</strong> 可以去我的 GitHub 仓库上找,已经给出介绍了<br><a href="https://github.com/Weidows/Weidows">仓库地址</a></p><p>如果复制代码的话需要改一下 Package 和 import</p><h1 id="二-代码片段"><a href="#二-代码片段" class="headerlink" title="二.代码片段"></a>二.代码片段</h1><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200727081719904.jpg#pic_center" alt="目录结构"></p><h1 id="Animal"><a href="#Animal" class="headerlink" title="Animal"></a>Animal</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: Weidows</span></span><br><span class="line"><span class="comment"> * @Date: 2020-07-20 14:25:10</span></span><br><span class="line"><span class="comment"> * @LastEditors: Weidows</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2020-07-25 17:40:28</span></span><br><span class="line"><span class="comment"> * @FilePath: \Weidows\Java\src\main\java\twenty\july\my_interface\animal\Animal.java</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> twenty.july.my_interface.animal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> twenty.july.my_interface.field.Location;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> ageLimit;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> breedableAge;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">boolean</span> isAlive = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Animal</span><span class="params">(<span class="keyword">int</span> ageLimit, <span class="keyword">int</span> breedableAge)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.ageLimit = ageLimit;</span><br><span class="line">    <span class="keyword">this</span>.breedableAge = breedableAge;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> age;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">double</span> <span class="title">getAgePercent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">double</span>) age / (<span class="keyword">double</span>) ageLimit;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> Animal <span class="title">breed</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">grow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    age++;</span><br><span class="line">    <span class="keyword">if</span> (age &gt;= ageLimit)</span><br><span class="line">      die();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">die</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    isAlive = <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAlive</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> isAlive;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isBreedable</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (age &gt;= breedableAge);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Location <span class="title">move</span><span class="params">(Location[] freeAdj)</span> </span>&#123;</span><br><span class="line">    Location ret = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (freeAdj.length &gt; <span class="number">0</span> &amp;&amp; Math.random() &lt; <span class="number">0.02</span>) &#123;</span><br><span class="line">      ret = freeAdj[(<span class="keyword">int</span>) (Math.random() * freeAdj.length)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span> + age + <span class="string">&quot;:&quot;</span> + (isAlive ? <span class="string">&quot;live&quot;</span> : <span class="string">&quot;dead&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Animal <span class="title">feed</span><span class="params">(ArrayList&lt;Animal&gt; neighbor)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">longerLife</span><span class="params">(<span class="keyword">int</span> inc)</span> </span>&#123;</span><br><span class="line">    ageLimit += inc;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Fox"><a href="#Fox" class="headerlink" title="Fox"></a>Fox</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: Weidows</span></span><br><span class="line"><span class="comment"> * @Date: 2020-07-20 14:31:09</span></span><br><span class="line"><span class="comment"> * @LastEditors: Weidows</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2020-07-25 17:40:18</span></span><br><span class="line"><span class="comment"> * @FilePath: \Weidows\Java\src\main\java\twenty\july\my_interface\animal\Fox.java</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> twenty.july.my_interface.animal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> twenty.july.my_interface.cell.Cell;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * *Fox实现接口Cell,使Fox对象能间接传给Field</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Fox</span> <span class="keyword">extends</span> <span class="title">Animal</span> <span class="keyword">implements</span> <span class="title">Cell</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Fox</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(<span class="number">20</span>, <span class="number">4</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span> <span class="comment">// 实现接口Cell中的draw()</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Graphics g, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> alpha = (<span class="keyword">int</span>) ((<span class="number">1</span> - getAgePercent()) * <span class="number">255</span>);</span><br><span class="line">    g.setColor(<span class="keyword">new</span> Color(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, alpha));</span><br><span class="line">    g.fillRect(x, y, size, size);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Animal <span class="title">breed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Animal ret = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (isBreedable() &amp;&amp; Math.random() &lt; <span class="number">0.05</span>) &#123;</span><br><span class="line">      ret = <span class="keyword">new</span> Fox();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="string">&quot;Fox:&quot;</span> + <span class="keyword">super</span>.toString());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Animal <span class="title">feed</span><span class="params">(ArrayList&lt;Animal&gt; neighbor)</span> </span>&#123;</span><br><span class="line">    Animal ret = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (Math.random() &lt; <span class="number">0.2</span>) &#123;</span><br><span class="line">      ret = neighbor.get((<span class="keyword">int</span>) (Math.random() * neighbor.size()));</span><br><span class="line">      longerLife(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Rabbit"><a href="#Rabbit" class="headerlink" title="Rabbit"></a>Rabbit</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: Weidows</span></span><br><span class="line"><span class="comment"> * @Date: 2020-07-20 18:49:07</span></span><br><span class="line"><span class="comment"> * @LastEditors: Weidows</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2020-07-25 17:40:09</span></span><br><span class="line"><span class="comment"> * @FilePath: \Weidows\Java\src\main\java\twenty\july\my_interface\animal\Rabbit.java</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> twenty.july.my_interface.animal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> twenty.july.my_interface.cell.Cell;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Rabbit</span> <span class="keyword">extends</span> <span class="title">Animal</span> <span class="keyword">implements</span> <span class="title">Cell</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Rabbit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(<span class="number">10</span>, <span class="number">2</span>); <span class="comment">// *寿命&amp;&amp;生育年龄</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Graphics g, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> alpha = (<span class="keyword">int</span>) ((<span class="number">1</span> - getAgePercent()) * <span class="number">255</span>);</span><br><span class="line">    g.setColor(<span class="keyword">new</span> Color(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>, alpha));</span><br><span class="line">    g.fillRect(x, y, size, size);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Animal <span class="title">breed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Animal ret = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (isBreedable() &amp;&amp; Math.random() &lt; <span class="number">0.12</span>) &#123;</span><br><span class="line">      ret = <span class="keyword">new</span> Rabbit();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Rabbit&quot;</span> + <span class="keyword">super</span>.toString();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Cell"><a href="#Cell" class="headerlink" title="Cell"></a>Cell</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: Weidows</span></span><br><span class="line"><span class="comment"> * @Date: 2020-07-12 15:17:05</span></span><br><span class="line"><span class="comment"> * @LastEditors: Weidows</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2020-07-25 17:39:41</span></span><br><span class="line"><span class="comment"> * @FilePath: \Weidows\Java\src\main\java\twenty\july\my_interface\cell\Cell.java</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> twenty.july.my_interface.cell;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Cell</span> </span>&#123;<span class="comment">//注意这里不能写成interface class</span></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * *Cell是一个接口而非类(接口是一种完全抽象的抽象类)</span></span><br><span class="line"><span class="comment">   * !这个接口就是为了实现Fox和Rabbit类new的对象能够传递给Field类</span></span><br><span class="line"><span class="comment">   * Field类中指明需要的对象的类是Cell而Cell是作为中间承接者</span></span><br><span class="line"><span class="comment">   * Fox和Rabbit类需要有implements Cell语句来实现接口</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * !注意这里函数可以不用写函数前缀,只需要写返回值类型</span></span><br><span class="line"><span class="comment">   * 抽象类无函数主体,只需声明函数原型,实现抽象类/接口的类都必须Override所有抽象方法,否则此子类仍为抽象类</span></span><br><span class="line"><span class="comment">   * abstract与final是冲突对立关系,抽象是用来被继承或重写的,final相反是不让继承/重写的</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">(Graphics g, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> size)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Field"><a href="#Field" class="headerlink" title="Field"></a>Field</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: Weidows</span></span><br><span class="line"><span class="comment"> * @Date: 2020-07-12 15:17:00</span></span><br><span class="line"><span class="comment"> * @LastEditors: Weidows</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2020-07-24 22:20:12</span></span><br><span class="line"><span class="comment"> * @FilePath: \Weidows\Java\src\main\java\twenty\july\my_interface\field\Field.java</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> twenty.july.my_interface.field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> twenty.july.my_interface.cell.Cell;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Field</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> width;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> height;</span><br><span class="line">  <span class="keyword">private</span> Cell[][] field;<span class="comment">// 声明有这么个数组变量,但未承接任何对象</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Location[] adjacent = &#123;</span><br><span class="line">    <span class="keyword">new</span> Location(-<span class="number">1</span>, -<span class="number">1</span>), <span class="keyword">new</span> Location(-<span class="number">1</span>, <span class="number">0</span>), <span class="keyword">new</span> Location(-<span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">    <span class="keyword">new</span> Location(<span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> Location(<span class="number">0</span>, <span class="number">0</span>), <span class="keyword">new</span> Location(<span class="number">0</span>, <span class="number">1</span>),</span><br><span class="line">    <span class="keyword">new</span> Location(<span class="number">1</span>, -<span class="number">1</span>), <span class="keyword">new</span> Location(<span class="number">1</span>, <span class="number">0</span>),<span class="keyword">new</span> Location(<span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Field</span><span class="params">(<span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.width = width;</span><br><span class="line">    <span class="keyword">this</span>.height = height;</span><br><span class="line">    field = <span class="keyword">new</span> Cell[height][width];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getWidth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> width;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getHeight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> height;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Cell <span class="title">place</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col, Cell cell)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// !这里的Cell o并非Cell类的对象,而是实现了Cell接口的对象</span></span><br><span class="line">    field[row][col] = cell;</span><br><span class="line">    Cell ret = field[row][col];</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Cell <span class="title">get</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> field[row][col];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> Cell[] getNeighbor(<span class="keyword">int</span> row, <span class="keyword">int</span> col) &#123;</span><br><span class="line">    ArrayList&lt;Cell&gt; list = <span class="keyword">new</span> ArrayList&lt;Cell&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = -<span class="number">1</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = -<span class="number">1</span>; j &lt; <span class="number">2</span>; j++) &#123;</span><br><span class="line">        <span class="keyword">int</span> r = row + i;</span><br><span class="line">        <span class="keyword">int</span> c = col + j;</span><br><span class="line">        <span class="keyword">if</span> (r &gt; -<span class="number">1</span> &amp;&amp; r &lt; height &amp;&amp; c &gt; -<span class="number">1</span> &amp;&amp; c &lt; width &amp;&amp; !(r == row &amp;&amp; c == col)) &#123;</span><br><span class="line">          list.add(field[r][c]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> list.toArray(<span class="keyword">new</span> Cell[list.size()]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> Location[] getFreeNeighbor(<span class="keyword">int</span> row, <span class="keyword">int</span> col) &#123;</span><br><span class="line">    ArrayList&lt;Location&gt; list = <span class="keyword">new</span> ArrayList&lt;Location&gt;();</span><br><span class="line">    <span class="keyword">for</span> (Location loc : adjacent) &#123;</span><br><span class="line">      <span class="keyword">int</span> r = row + loc.getRow();</span><br><span class="line">      <span class="keyword">int</span> c = col + loc.getCol();</span><br><span class="line">      <span class="keyword">if</span> (r &gt; -<span class="number">1</span> &amp;&amp; r &lt; height &amp;&amp; c &gt; -<span class="number">1</span> &amp;&amp; c &lt; width &amp;&amp; field[r][c] == <span class="keyword">null</span>) &#123;</span><br><span class="line">        list.add(<span class="keyword">new</span> Location(r, c));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// !学着点</span></span><br><span class="line">    <span class="keyword">return</span> list.toArray(<span class="keyword">new</span> Location[list.size()]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">placeRandomAdj</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col, Cell cell)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> ret = <span class="keyword">false</span>;</span><br><span class="line">    Location[] freeAdj = getFreeNeighbor(row, col);</span><br><span class="line">    <span class="keyword">if</span> (freeAdj.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">int</span> idx = (<span class="keyword">int</span>) (Math.random() * freeAdj.length);</span><br><span class="line">      field[freeAdj[idx].getRow()][freeAdj[idx].getCol()] = cell;</span><br><span class="line">      ret = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; height; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; width; j++) &#123;</span><br><span class="line">        field[i][j] = <span class="keyword">null</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(Cell fed)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> row = <span class="number">0</span>; row &lt; height; row++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; width; col++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (field[row][col] == fed) &#123;</span><br><span class="line">          field[row][col] = <span class="keyword">null</span>;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Cell <span class="title">remove</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col)</span> </span>&#123; <span class="comment">// *函数重构</span></span><br><span class="line">    field[row][col] = <span class="keyword">null</span>;</span><br><span class="line">    Cell ret = field[row][col];</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col, Location loc)</span> </span>&#123;</span><br><span class="line">    field[loc.getRow()][loc.getCol()] = field[row][col];</span><br><span class="line">    remove(row, col);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Location"><a href="#Location" class="headerlink" title="Location"></a>Location</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: Weidows</span></span><br><span class="line"><span class="comment"> * @Date: 2020-07-22 18:51:49</span></span><br><span class="line"><span class="comment"> * @LastEditors: Weidows</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2020-07-25 17:39:16</span></span><br><span class="line"><span class="comment"> * @FilePath: \Weidows\Java\src\main\java\twenty\july\my_interface\field\Location.java</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> twenty.july.my_interface.field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Location</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> row;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> col;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Location</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.row = row;</span><br><span class="line">    <span class="keyword">this</span>.col = col;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> row;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCol</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> col;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="View"><a href="#View" class="headerlink" title="View"></a>View</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: Weidows</span></span><br><span class="line"><span class="comment"> * @Date: 2020-07-12 15:17:00</span></span><br><span class="line"><span class="comment"> * @LastEditors: Weidows</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2020-07-24 11:06:21</span></span><br><span class="line"><span class="comment"> * @FilePath: \Weidows\Java\src\main\java\twenty\july\my_interface\field\View.java</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> twenty.july.my_interface.field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Dimension;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> twenty.july.my_interface.cell.Cell;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">View</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">2417015700213488315L</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> GRID_SIZE = <span class="number">16</span>;</span><br><span class="line">  <span class="keyword">private</span> Field theField;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// *构造函数</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">View</span><span class="params">(Field field)</span> </span>&#123;</span><br><span class="line">    theField = field;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.paint(g);</span><br><span class="line">    g.setColor(Color.GRAY);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> row = <span class="number">0</span>; row &lt; theField.getHeight(); row++)</span><br><span class="line">      g.drawLine(<span class="number">0</span>, row * GRID_SIZE, theField.getWidth() * GRID_SIZE, row * GRID_SIZE);</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> col = <span class="number">0</span>; col&lt;theField.getWidth(); col++ )</span><br><span class="line">      g.drawLine(col * GRID_SIZE, <span class="number">0</span>, col * GRID_SIZE, theField.getHeight() * GRID_SIZE);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> row = <span class="number">0</span>; row &lt; theField.getHeight(); row++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; theField.getWidth(); col++) &#123;</span><br><span class="line">        Cell cell = theField.get(row, col);</span><br><span class="line">        <span class="keyword">if</span> (cell != <span class="keyword">null</span>)</span><br><span class="line">          cell.draw(g, col * GRID_SIZE, row * GRID_SIZE, GRID_SIZE);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Dimension <span class="title">getPreferredSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Dimension(theField.getWidth() * GRID_SIZE + <span class="number">1</span>, theField.getHeight() * GRID_SIZE + <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="FoxAndRabbit"><a href="#FoxAndRabbit" class="headerlink" title="FoxAndRabbit"></a>FoxAndRabbit</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: Weidows</span></span><br><span class="line"><span class="comment"> * @Date: 2020-07-20 18:40:10</span></span><br><span class="line"><span class="comment"> * @LastEditors: Weidows</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2020-07-24 13:23:07</span></span><br><span class="line"><span class="comment"> * @FilePath: \Weidows\Java\src\main\java\twenty\july\my_interface\fox_and_rabbit\FoxAndRabbit.java</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> twenty.july.my_interface.fox_and_rabbit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> twenty.july.my_interface.animal.*;</span><br><span class="line"><span class="keyword">import</span> twenty.july.my_interface.cell.Cell;</span><br><span class="line"><span class="keyword">import</span> twenty.july.my_interface.field.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FoxAndRabbit</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> Field theField;</span><br><span class="line">  <span class="keyword">private</span> View theView;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">FoxAndRabbit</span><span class="params">(<span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line">    theField = <span class="keyword">new</span> Field(size, size);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> row = <span class="number">0</span>; row &lt; theField.getHeight(); row++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; theField.getWidth(); col++) &#123;</span><br><span class="line">        <span class="keyword">double</span> probability = Math.random();</span><br><span class="line">        <span class="keyword">if</span> (probability &lt; <span class="number">0.05</span>) &#123;</span><br><span class="line">          theField.place(row, col, <span class="keyword">new</span> Fox());</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (probability &lt; <span class="number">0.15</span>) &#123;</span><br><span class="line">          theField.place(row, col, <span class="keyword">new</span> Rabbit());</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    theView = <span class="keyword">new</span> View(theField);</span><br><span class="line">    JFrame frame = <span class="keyword">new</span> JFrame();</span><br><span class="line">    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    frame.setResizable(<span class="keyword">false</span>);</span><br><span class="line">    frame.setTitle(<span class="string">&quot;Cells&quot;</span>);</span><br><span class="line">    frame.add(theView);</span><br><span class="line">    frame.pack();</span><br><span class="line">    frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(<span class="keyword">int</span> steps)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; steps; i++) &#123;</span><br><span class="line">      step();</span><br><span class="line">      theView.repaint();</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        Thread.sleep(<span class="number">200</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">step</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> row = <span class="number">0</span>; row &lt; theField.getHeight(); row++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; theField.getWidth(); col++) &#123;</span><br><span class="line">        Cell cell = (Cell) theField.get(row, col);</span><br><span class="line">        <span class="keyword">if</span> (cell != <span class="keyword">null</span>) &#123;</span><br><span class="line">          Animal animal = (Animal) cell;</span><br><span class="line">          animal.grow();</span><br><span class="line">          <span class="keyword">if</span> (animal.isAlive()) &#123;</span><br><span class="line">            <span class="comment">// *move</span></span><br><span class="line">            Location loc = animal.move(theField.getFreeNeighbor(row, col));</span><br><span class="line">            <span class="keyword">if</span> (loc != <span class="keyword">null</span>)</span><br><span class="line">              theField.move(row, col, loc);</span><br><span class="line">            <span class="comment">// *eat</span></span><br><span class="line">            Cell[] neighbor = (Cell[]) theField.getNeighbor(row, col);</span><br><span class="line">            ArrayList&lt;Animal&gt; listRabbit = <span class="keyword">new</span> ArrayList&lt;Animal&gt;();</span><br><span class="line">            <span class="keyword">for</span> (Cell an : neighbor) &#123;</span><br><span class="line">              <span class="keyword">if</span> (an <span class="keyword">instanceof</span> Rabbit) &#123;</span><br><span class="line">                listRabbit.add((Rabbit) an);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!listRabbit.isEmpty()) &#123;</span><br><span class="line">              Animal fed = animal.feed(listRabbit);</span><br><span class="line">              <span class="keyword">if</span> (fed != <span class="keyword">null</span>)</span><br><span class="line">                theField.remove((Cell) fed);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// *breed</span></span><br><span class="line">            Animal baby = animal.breed();</span><br><span class="line">            <span class="keyword">if</span> (baby != <span class="keyword">null</span>) &#123;</span><br><span class="line">              theField.placeRandomAdj(row, col, (Cell) baby);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            theField.remove(row, col);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    FoxAndRabbit fnr = <span class="keyword">new</span> FoxAndRabbit(<span class="number">50</span>);</span><br><span class="line">    fnr.start(<span class="number">100</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于安装系统硬盘&amp;引导那些事</title>
      <link href="post/system/about_system/"/>
      <url>post/system/about_system/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-08-23 20:49:52 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:18:53 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\system\about_system.md--><ul><li><a href="#%E5%89%8D%E8%A8%80">前言</a></li><li><a href="#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C">准备工作</a></li><li><a href="#%E5%A4%87%E4%BB%BD%E5%B7%A5%E4%BD%9C">备份工作</a></li><li><a href="#%E4%B8%A4%E7%A7%8D%E5%90%AF%E5%8A%A8%E6%96%B9%E5%BC%8F">两种启动方式</a><ul><li><a href="#%E4%BC%A0%E7%BB%9F-bios-%E5%90%AF%E5%8A%A8legacy-%E5%90%AF%E5%8A%A8">传统 Bios 启动(legacy 启动)</a></li><li><a href="#uefi-%E6%A8%A1%E5%BC%8F%E5%90%AF%E5%8A%A8efi-%E5%90%AF%E5%8A%A8">UEFI 模式启动(EFI 启动)</a></li></ul></li><li><a href="#%E7%A1%AC%E7%9B%98%E6%A0%BC%E5%BC%8F%E7%AE%80%E4%BB%8B">硬盘格式简介</a></li><li><a href="#%E4%B8%A4%E7%A7%8D%E7%A1%AC%E7%9B%98%E6%A0%BC%E5%BC%8F">两种硬盘格式</a><ul><li><a href="#gpt-%E6%A0%BC%E5%BC%8F">GPT 格式</a></li><li><a href="#mbr-%E6%A0%BC%E5%BC%8F">MBR 格式</a></li></ul></li><li><a href="#%E4%B8%8A%E6%9C%BA%E6%93%8D%E4%BD%9C">上机操作</a></li><li><a href="#%E9%97%B2%E6%9D%82%E9%97%AE%E9%A2%98">闲杂问题</a></li></ul><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>此文不太适合纯小白,对电脑系统方面一无所知的请及时退出</li><li>最好准备好充足时间来看这篇文章,此篇文章会给你带来重启电脑至少 100 次的经验;</li></ul><hr><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li>硬件设备:<ul><li>电脑,一个 U 盘(8G 完全够用,也可以用读卡器+SD 卡替代)</li></ul></li><li>软件:<ol><li>rufus(制作启动盘用,这个 win 和 linux 都支持)</li><li>分区助手或 diskgenius(分盘符用)</li><li>自己准备安装的系统的镜像文件(ISO 格式,其他格式的需要特定的安装器安装,自行百度,在此不一一赘述)</li></ol></li></ul><hr><h1 id="备份工作"><a href="#备份工作" class="headerlink" title="备份工作"></a>备份工作</h1><p><strong>把自己所有盘里的重要资料尽量备份,一定要做好背水一战的觉悟</strong></p><hr><h1 id="两种启动方式"><a href="#两种启动方式" class="headerlink" title="两种启动方式"></a>两种启动方式</h1><h2 id="传统-Bios-启动-legacy-启动"><a href="#传统-Bios-启动-legacy-启动" class="headerlink" title="传统 Bios 启动(legacy 启动)"></a>传统 Bios 启动(legacy 启动)</h2><ul><li><p>硬盘分区简单明确,只要分出来足够大的分区(如 C 盘,D 盘…),用安装器把系统安装进去,基本就完成安装了,安装时会自动在这个硬盘的某个[神秘]的地方添加一条引导记录(如果记录被改或删的话,就算系统完好也不会启动)</p></li><li><p>如果 MBR 硬盘下的 Windows 系统无法启动,且不想重装系统,用 NTBOOTautofix</p></li><li><p>另外,对于 Windows,网上有 UEFI+Bios 引导修复工具,可以通用</p></li></ul><h2 id="UEFI-模式启动-EFI-启动"><a href="#UEFI-模式启动-EFI-启动" class="headerlink" title="UEFI 模式启动(EFI 启动)"></a>UEFI 模式启动(EFI 启动)</h2><ul><li><p>当前”高新”电脑普遍使用的模式,特点是开机时按某个键(不同电脑不一样)进入 bios 界面很好看(从 2012 年以后的主板都支持 UEFI 了,只不过这种”高新”的默认就是 UEFI);</p></li><li><p>当前来说主板都支持 UEFI,可以通过 Bios 界面 Boot&gt;&gt;Launch CSM 的开关来改变启动方式</p><ul><li>这里不懂的可以百度关键词”Bios 修改启动模式”</li></ul></li><li><p>这里 CSM 设置为 enable 就是开启的意思,兼容传统 Bios 启动和 UEFI 启动(你硬盘里是什么方式的他就用什么);设为 disable 就是关闭,只用 UEFI 模式启动(此模式下硬盘必须是 GPT,系统的启动模式必须是 UEFI,否则无法启动)</p></li><li><p>在此附上开机时进入 bios 的按键</p><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200307195931138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5ODIzMjk1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li></ul><h1 id="硬盘格式简介"><a href="#硬盘格式简介" class="headerlink" title="硬盘格式简介"></a>硬盘格式简介</h1><ul><li><strong>1.硬盘格式与分区格式(NTFS,FAT32…)是两回事</strong><ul><li>硬盘格式主流就两种,<code>GPT</code> 和 <code>MBR</code>.</li><li>硬盘格式主要影响引导方式,其查看和更改可以借助两个常用的硬盘工具”分区助手”和”DiskGenius”来查看和更改,更改格式(不出意外的话)不会格式化,但从 MBR 格式变为 GPT 格式会从硬盘的某个分区中抽出一小部分(300MB 左右,可自定义)作为 EFI(ESP)引导分区</li></ul><hr><ul><li><code>此段选择性观看</code>:值得一说的是如果在 Windows 已经安装的情况下安装 linux(Boot/efi 挂载点是那个小的 ESP 分区),那么进入 Windows 系统时无论 ESP 分区还是 linux 系统分区都无法检测出来(分区助手显示他俩是未分配空间),虽然不影响使用,但是如果你想让它出来可以使用”恢复分区”命令,让 ESP 分区可以查看和修改(但会破坏 ESP 分区的挂载状态,使用 UEfix 挂载那个 ESP 分区,一定要!!!,不然全部空大,凉凉..)</li></ul></li></ul><hr><h1 id="两种硬盘格式"><a href="#两种硬盘格式" class="headerlink" title="两种硬盘格式"></a>两种硬盘格式</h1><h2 id="GPT-格式"><a href="#GPT-格式" class="headerlink" title="GPT 格式"></a>GPT 格式</h2><ul><li>以后的主流格式,目前 2020 年还在两种格式的过渡期,此格式硬盘特点是有一块小分区(ESP 引导区)用来存放系统启动的文件,此分区绝对不要动(除非有自信弄懂了,不然有可能所有系统都无法启动);</li><li>此格式硬盘只能用来引导 UEFI 模式启动的系统(不要担心,如果原来是 MBR+传统 BIOS 启动,在硬盘格式从 MBR 到 GPT 转换时 Windows 的启动模式也会自动从 bios 变为 UEFI;但对于 linux 系统,其复杂涉及挂载点和 GRUB2 代码更改,难以操作,最简便的方法是重装系统)</li></ul><h2 id="MBR-格式"><a href="#MBR-格式" class="headerlink" title="MBR 格式"></a>MBR 格式</h2><ul><li><p>只能用来引导传统 bios(legacy 启动),目前还常见的格式,特点是在系统分区根目录里会有一个 Boot 文件夹(如 C:\Boot 但有可能是隐藏的,看不到);</p></li><li><p>电脑商的最爱,对于 Windows 适配好,但是最大的问题是对于 linux 和黑苹果的兼容问题(某些无法安装);</p></li><li><p>虽然 GPT 是最新的格式,但是 MBR 不会差太多(只有开机时速度有丝毫差别)</p></li><li><p>上一张无关紧要的图来点层次感,GPT 和 MBR 同级,我懂你懂你懂我 233<br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://img-blog.csdnimg.cn/2020030719535046.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5ODIzMjk1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li></ul><hr><h1 id="上机操作"><a href="#上机操作" class="headerlink" title="上机操作"></a>上机操作</h1><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200307201943243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5ODIzMjk1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><hr><h1 id="闲杂问题"><a href="#闲杂问题" class="headerlink" title="闲杂问题"></a>闲杂问题</h1><ul><li><p>装好系统后系统的睡眠模式无法使用(装睡问题)</p><ul><li>有可能是 bios 里的启动方式不兼容问题,如果是 EFI 启动可以尝试打开 CSM</li><li>另一种可能是引导出问题了(仅限 EFI 模式),去 EFI 引导盘查看并尝试修复</li></ul></li><li><p>manjaro 安装完成后如果只能进入一次系统,再次进黑屏无响应问题</p><ul><li><p>尝试更换下启动模式,从 UEFI 换为传统 bios 启动,就是把 Launch CSM 开启</p></li><li><p>显卡 BIOS 兼容性问题.</p><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200307200147476.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5ODIzMjk1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li></ul></li></ul><blockquote><p>在此感谢我看过的文章的写者,帮了我很多,谢谢!</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> system </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一篇扫清:GitHub-Pages自动化部署 + github/gitee选择</title>
      <link href="post/tools/Git/GitHub-Pages-deploy/"/>
      <url>post/tools/Git/GitHub-Pages-deploy/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-08-23 10:54:41 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:02:59 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\tools\GitHub\GitHub-Pages-deploy.md--><ul><li><a href="#githubgitee-%E9%80%89%E6%8B%A9">GitHub/Gitee 选择</a></li><li><a href="#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">解决方案</a></li><li><a href="#%E5%BC%80%E5%90%AF">开启</a></li><li><a href="#github-%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2">GitHub 自动化部署</a><ul><li><a href="#%E5%AE%89%E8%A3%85-hexo-deployer">安装 Hexo-deployer</a></li></ul></li><li><a href="#%E5%8F%A6%E4%B8%80%E7%A7%8D%E6%9B%B4%E5%8A%A0%E6%96%B9%E4%BE%BF%E5%AE%8C%E7%BE%8E%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">另一种更加方便完美的解决方案</a></li><li><a href="#github-action-%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2">github-action 自动化部署</a><ul><li><a href="#%E8%A7%A3%E9%87%8A">解释:</a></li></ul></li></ul><h1 id="GitHub-Gitee-选择"><a href="#GitHub-Gitee-选择" class="headerlink" title="GitHub/Gitee 选择"></a>GitHub/Gitee 选择</h1><ul><li>速度来看,GitHub 在加载速度上略超 Gitee,部署速度 Gitee 略快(但是这项几乎不影响体验)</li><li>但是就图片加载来看,GitHub 还是远不如 Gitee,可以考虑图床或者 JsDelivr 做 CDN 来解决</li><li>功能上,都支持 Hexo 部署和选择分支部署<ul><li>GitHub 只能识别并部署根目录<code>/</code>或者<code>/docs/</code>,而 Gitee 支持<code>自定义要部署的路径</code></li></ul></li></ul><hr><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><ul><li>如果你想部署在 GitHub 上但是却因为它不识别那个路径<ul><li>尝试修改博客根目录下的<code>_config.yml</code>,把<code>public_dir: public</code>改为<code>public_dir: docs</code></li><li>这样在博客 generate 时会把需要部署的文件生成到 docs/里,可供 GitHub 识别</li><li>注意在 GitHub 的这个仓库的 Settings 里要把 source 的分支,目录对应修改好</li></ul></li></ul><hr><h1 id="开启"><a href="#开启" class="headerlink" title="开启"></a>开启</h1><ul><li><code>Gitee</code><br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/dpIgQvz93ltRCPD.jpg" alt="20201122112033"></li><li><code>Github</code><br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/Ep8oz6eMxPadQ3s.jpg" alt="20201122112109"></li></ul><hr><h1 id="GitHub-自动化部署"><a href="#GitHub-自动化部署" class="headerlink" title="GitHub 自动化部署"></a>GitHub 自动化部署</h1><h2 id="安装-Hexo-deployer"><a href="#安装-Hexo-deployer" class="headerlink" title="安装 Hexo-deployer"></a>安装 Hexo-deployer</h2><ul><li><p>(注意 cnpm 好像不行)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`npm install hexo-deployer-git --save`</span><br></pre></td></tr></table></figure></li><li><p>在<code>_config.yml</code> 里添加以下内容(注意缩进不要错)</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">type:</span> git <span class="meta"># 用本项目的 git 进行提交 &amp; 推送</span></span><br><span class="line"><span class="symbol">repo:</span> 这里填入 GitHub 仓库 URL</span><br><span class="line"><span class="symbol">branch:</span> master <span class="meta"># 这里写想要部署到的分支名(没有对应分支的话会自动新建)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>在对应仓库的设置里找到 github-pages 然后选择对应分支,系统就会自动部署并发出你的博客链接了</p></li></ul><hr><h1 id="另一种更加方便完美的解决方案"><a href="#另一种更加方便完美的解决方案" class="headerlink" title="另一种更加方便完美的解决方案"></a>另一种更加方便完美的解决方案</h1><ul><li>因为搭建这个博客的工作目录可能并不是一个独立的 git 仓库</li><li>(就是它被包含在其他仓库里,而非自己是一个独立仓库)</li><li>这种情况下上面的 deployer 就鸡鸡了(没法用了,除非自己改),有没有解决方案呢?</li><li>有,使用 github-action 自动化部署!</li></ul><h1 id="github-action-自动化部署"><a href="#github-action-自动化部署" class="headerlink" title="github-action 自动化部署"></a>github-action 自动化部署</h1><p>文件目录: <code>Blogroot/.github/workflows/deploy.yml</code><br>(简单点就是.github 跟 public,source 等等同级目录),写入下面内容:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Build</span> <span class="string">and</span> <span class="string">Deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span> [<span class="string">push</span>] <span class="comment"># 触发条件(git 推送时)</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build-and-deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">🛎️</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span> <span class="comment"># 下面这个最好设成 false</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">persist-credentials:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">and</span> <span class="string">Build</span> <span class="string">🔧</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">cd</span> <span class="string">Website</span></span><br><span class="line">          <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">          <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">CI:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">🚀</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">JamesIves/github-pages-deploy-action@releases/v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">GITHUB_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">BRANCH:</span> <span class="string">gh-pages</span> <span class="comment"># 把下面这个文件夹部署到哪个分支(不能是本分支,会覆盖掉)</span></span><br><span class="line">          <span class="attr">FOLDER:</span> <span class="string">Website/public</span> <span class="comment"># 想部署的文件夹</span></span><br></pre></td></tr></table></figure><h2 id="解释"><a href="#解释" class="headerlink" title="解释:"></a>解释:</h2><ul><li>name 随意起</li><li>on:[push]意思是在推送时触发 action</li><li>Build and Deploy 就是触发的 job 名称</li><li>run-on 是运行环境(其自带一些基础的环境,Exp:Node.JS,但是更具体的比如 Hexo 就不会自带了)</li><li>steps 就是步骤了,可以看出下面有三个步骤(步骤内的操作就不细讲了…)</li><li>这样我们写完博客 generate 之后 push 这个仓库,github-action 会自动执行找到你指定的文件夹把它部署到你指定的分支上,然后设置下让 github-pages 部署这个分支,博客就出来了!</li></ul>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> Website </tag>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Data-技术缓冲区.</title>
      <link href="post/others/backup/Data/"/>
      <url>post/others/backup/Data/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-08-19 00:38:26 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:14:41 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\others\backup\Data.md * @Description:--><ul><li><a href="#windows-%E5%90%84%E7%A7%8D%E8%B7%AF%E5%BE%84">Windows 各种路径</a></li></ul><h1 id="Windows-各种路径"><a href="#Windows-各种路径" class="headerlink" title="Windows 各种路径"></a>Windows 各种路径</h1><ul><li>字体<ul><li><code>C:\Users\29845\AppData\Local\Microsoft\Windows\Fonts</code></li></ul><hr></li><li>壁纸/主题<ul><li><code>C:\Users\29845\AppData\Local\Microsoft\Windows\Themes</code></li></ul><hr></li><li>开始菜单<ul><li><code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs</code></li></ul></li><li>NVIDIA 颜色配置<br><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/t8qC1egPho6jrza.jpg" alt="20201127165215"><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://i.loli.net/2020/11/30/4c2oMNxus8Qtjz3.jpg" alt="20201127165253"></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
          <category> backup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> VScode </tag>
            
            <tag> 备忘录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS命名规范</title>
      <link href="post/Web/css/ClassKeyWords/"/>
      <url>post/Web/css/ClassKeyWords/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-08-11 09:45:50 * @LastEditors: Weidows * @LastEditTime: 2021-02-13 17:22:01 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\Web\css\ClassKeyWords.md--><ul><li><a href="#%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99">命名规则</a></li><li><a href="#%E5%B8%B8%E8%A7%81-class-%E5%85%B3%E9%94%AE%E8%AF%8D">常见 class 关键词</a></li><li><a href="#%E9%A1%B5%E9%9D%A2%E7%BB%93%E6%9E%84">页面结构</a></li><li><a href="#%E5%AF%BC%E8%88%AA">导航</a></li><li><a href="#%E5%8A%9F%E8%83%BD">功能</a></li></ul><h1 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h1><ul><li>简单来说完全可以使用 Java 或 C 语言的规范,可以使用连字符”-“链接单词增强辨识度,不要用汉字</li></ul><hr><h1 id="常见-class-关键词"><a href="#常见-class-关键词" class="headerlink" title="常见 class 关键词"></a>常见 class 关键词</h1><ul><li><code>布局类：</code>header, footer, container, main, content, aside, page, section</li><li><code>包裹类：</code>wrap, inner</li><li><code>区块类：</code>region, block, box</li><li><code>结构类：</code>hd, bd, ft, top, bottom, left, right, middle, col, row, grid, span</li><li><code>列表类：</code>list, item, field</li><li><code>主次类：</code>primary, secondary, sub, minor</li><li><code>大小类：</code>s, m, l, xl, large, small</li><li><code>状态类：</code>active, current, checked, hover, fail, success, warn, error, on, off</li><li><code>导航类：</code>nav, prev, next, breadcrumb, forward, back, indicator, paging, first, last</li><li><code>交互类：</code>tips, alert, modal, pop, panel, tabs, accordion, slide, scroll, overlay</li><li><code>星级类：</code>rate, star</li><li><code>分割类：</code>group, seperate, divider</li><li><code>等分类：</code>full, half, third, quarter</li><li><code>表格类：</code>table, tr, td, cell, row</li><li><code>图片类：</code>img, thumbnail, original, album, gallery</li><li><code>语言类：</code>cn, en</li><li><code>论坛类：</code>forum, bbs, topic, post</li><li><code>方向类：</code>up, down, left, right</li><li><code>其他语义</code>类：btn, close, ok, cancel, switch; link, title, info, intro, more, icon; form, label, search, contact, phone, date, email, user; view, loading…</li></ul><hr><h1 id="页面结构"><a href="#页面结构" class="headerlink" title="页面结构"></a>页面结构</h1><ul><li><code>容器</code>: container/wrap</li><li><code>整体宽度：</code>wrapper</li><li><code>页头</code>：header</li><li><code>内容</code>：content</li><li><code>页面主体：</code>main</li><li><code>页尾</code>：footer</li><li><code>导航</code>：nav</li><li><code>侧栏</code>：sidebar</li><li><code>栏目</code>：column</li><li><code>中间内容：</code>center</li></ul><hr><h1 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h1><ul><li><code>导航：</code>nav</li><li><code>导航：</code>mainnav/globalnav</li><li><code>子导航：</code>subnav</li><li><code>顶导航：</code>topnav</li><li><code>边导航：</code>sidebar</li><li><code>左导航：</code>leftsidebar</li><li><code>右导航：</code>rightsidebar</li><li><code>边导航图标：</code>sidebarIcon</li><li><code>菜单：</code>menu</li><li><code>子菜单：</code>submenu</li><li><code>标题：</code>title</li></ul><hr><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><ul><li><code>标志：</code>logo</li><li><code>登录：</code>login</li><li><code>登录条：</code>loginbar</li><li><code>注册：</code>register</li><li><code>产品：</code>products</li><li><code>产品价格：</code>productsPrices</li><li><code>产品评论：</code>productsReview</li><li><code>编辑评论：</code>editor-review</li><li><code>最新产品：</code>news-release</li><li><code>广告/标语：</code>banner</li><li><code>摘要：</code>summary</li><li><code>生产商：</code>publisher</li><li><code>缩略图：</code>screenshot</li><li><code>常见问题：</code>faqs</li><li><code>关键词：</code>keyword</li><li><code>博客：</code>blog</li><li><code>论坛：</code>forum</li><li><code>搜索：</code>search</li><li><code>搜索输入框：</code>search-input</li><li><code>搜索输出：</code>search-output</li><li><code>搜索结果：</code>search-results</li><li><code>加入我们：</code>joinus</li><li><code>状态：</code>status</li><li><code>按钮：</code>btn</li><li><code>滚动：</code>scroll</li><li><code>标签页：</code>tab</li><li><code>文章列表：</code>list</li><li><code>提示信息：</code>msg/message</li><li><code>当前的：</code>current</li><li><code>小技巧：</code>tips</li><li><code>皮肤：</code>skin</li><li><code>充值：</code>pay</li><li><code>活动：</code>activities</li><li><code>推广：</code>promotion</li><li><code>公告：</code>announcement</li><li><code>排行：</code>ranking</li><li><code>公司简介：</code>companyProfile</li><li><code>公司设备：</code>equipment</li><li><code>公司荣誉：</code>glories</li><li><code>企业文化：</code>culture</li><li><code>企业规模：</code>scaleScale</li><li><code>营销网络：</code>salesNetwork</li><li><code>组织机构：</code>organization</li><li><code>技术力量：</code>technology</li><li><code>分支机构：</code>branches</li><li><code>企业资质：</code>EnterpriseQualification</li><li><code>公司实力：</code>strengthStrength</li><li><code>经营理念：</code>operationPrinciple</li><li><code>经理致辞：</code>manager_oration</li><li><code>发展历程：</code>developmentHistory</li><li><code>工程案例：</code>EngineeringProjects</li><li><code>分类浏览：</code>browseByCategory</li><li><code>应用领域：</code>applicationFields</li><li><code>人力资源：</code>humanResourceHr</li><li><code>领导致辞：</code> leader_oration</li><li><code>客户留言：</code>customerMessage</li><li><code>客户服务：</code>customerService</li><li><code>您的要求：</code>yourRequirements</li><li><code>销售信息：</code>salesInformation</li><li><code>招商：</code>EnterpriseEstablishing</li><li><code>教育培训：</code>EducationTraining</li><li><code>在线交流：</code>onlineCommunication</li><li><code>质量认证：</code>qualityCertification</li><li><code>合作加盟：</code>joinInCooperation</li><li><code>产品描述：</code>productsDescription</li><li><code>业务范围：</code>businessScope</li><li><code>产品销售：</code>salesSales</li><li><code>联系我们：</code>contactUs</li><li><code>信息发布：</code>Information</li><li><code>返回首页：</code>homepage</li><li><code>产品定购：</code>order</li><li><code>电子商务：</code>E-business</li><li><code>版权所有：</code>copy Right</li><li><code>友情连结：</code>hot Link</li><li><code>行业新闻：</code>tradeNews</li><li><code>行业动态：</code>trends</li><li><code>邮编：</code>postalCodeZipcode</li><li><code>新闻动态：</code>newsTrends</li><li><code>公司名称：</code>companyName</li><li><code>销售热线：</code>salesHot_Line</li><li><code>联系人：</code>contactPerson</li><li><code>建设中：</code>InConstruction</li><li><code>证书：</code>certificate</li><li><code>地址：</code>ADD/Add</li><li><code>电话：</code>TEL/Tel</li><li><code>传真：</code>FAX/Fax</li><li><code>产品名称：</code>productName</li><li><code>产品说明：</code>description</li><li><code>价格：</code>price</li><li><code>品牌：</code>brand</li><li><code>规格：</code>specification</li><li><code>尺寸：</code>size</li><li><code>生产厂家：</code>manufacturer</li><li><code>型号：</code>model</li><li><code>产品标号：</code>Item No</li><li><code>技术指标：</code>techniqueData</li><li><code>产品描述：</code>description</li><li><code>产地：</code>productionPlace</li><li><code>用途：</code>application</li><li><code>论坛：</code>Forum</li><li><code>在线订购：</code>on_lineOrder</li><li><code>招标：</code>bidInviting</li><li><code>综述：</code>general</li><li><code>业绩：</code>achievements</li><li><code>大事：</code>greatEvent</li><li><code>动态：</code>trends</li><li><code>服务：</code>service</li><li><code>投资：</code>Investment</li><li><code>行业：</code>Industry</li><li><code>规划：</code>programming</li><li><code>环境：</code>environment</li><li><code>发送：</code>delivery</li><li><code>提交：</code>submit</li><li><code>重写：</code>reset</li><li><code>社区：</code>community</li><li><code>业务：</code>business</li><li><code>在线调查：</code>onlineInquiry</li><li><code>下载中心：</code>download</li><li><code>意见反馈：</code>feedback</li><li><code>常见问题：</code>FAQ</li><li><code>中心概况：</code>generalProfile</li><li><code>游乐园：</code>amusementPark</li><li><code>专题报道：</code>specialReport</li><li><code>图标：</code>icon</li><li><code>注释：</code>note</li><li><code>指南：</code>guild</li><li><code>服务：</code>service</li><li><code>热点：</code>hot</li><li><code>新闻：</code>news</li><li><code>下载：</code>download</li><li><code>投票：</code>vote</li><li><code>商 标：</code>label/branding</li><li><code>当前位置：</code>breadcrumb/loc</li><li><code>购物车：</code>shop</li><li><code>标签：</code>tag</li><li><code>信誉：</code>siteinfo-credits</li><li><code>网站信息：</code>siteinfo</li><li><code>法律声明：</code>siteinfo-legal</li><li><code>合作伙伴：</code>partner</li><li><code>友情链接：</code>friendlink</li><li><code>版权：</code>copyright</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VScode实用插件推荐</title>
      <link href="post/tools/vscode/Vscode/"/>
      <url>post/tools/vscode/Vscode/</url>
      
        <content type="html"><![CDATA[<!-- * @Author: Weidows * @Date: 2020-05-27 19:28:49 * @LastEditors: Weidows * @LastEditTime: 2021-03-21 17:09:27 * @FilePath: \Weidowsd:\Game\Github\Blog-private\source\_posts\tools\vscode\Vscode.md--><ul><li><a href="#%E5%89%8D%E8%A8%80">前言</a></li><li><a href="#%E5%AE%9E%E7%94%A8%E6%8E%A8%E8%8D%90">实用推荐</a></li><li><a href="#%E7%BE%8E%E5%8C%96%E6%8E%A8%E8%8D%90">美化推荐</a><ul><li><a href="#%E4%B8%BB%E9%A2%98">主题</a></li><li><a href="#%E7%AA%97%E5%8F%A3%E9%80%8F%E6%98%8E">窗口透明</a></li><li><a href="#%E5%85%B6%E4%BB%96">其他</a></li></ul></li><li><a href="#%E7%A0%81%E5%AD%97%E6%8E%A8%E8%8D%90">码字推荐</a><ul><li><a href="#%E4%BB%A3%E7%A0%81%E8%A1%A5%E5%85%A8">代码补全</a></li><li><a href="#%E5%85%B6%E4%BB%96-1">其他</a></li></ul></li><li><a href="#%E6%96%87%E7%AB%A0%E6%8E%A8%E8%8D%90">文章推荐</a></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>莅临此处的应该是都知道 <a href="https://code.visualstudio.com/"><strong>VScode</strong></a> 是怎样一个<em>编辑器</em> 了,再此处附上<a href="#%E4%BA%8C.%E5%AE%9E%E7%94%A8%E6%8E%A8%E8%8D%90">实用</a> <a href="#%E4%B8%89.%E7%BE%8E%E5%8C%96%E6%8E%A8%E8%8D%90">美化</a> <a href="#%E5%9B%9B.%E7%A0%81%E5%AD%97%E6%8E%A8%E8%8D%90">码字</a>的推荐,希望喜欢!</p><p>更新至: <code>2021-2</code></p><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="实用推荐"><a href="#实用推荐" class="headerlink" title="实用推荐"></a>实用推荐</h1><ul><li><h2 id="Bookmarks"><a href="#Bookmarks" class="headerlink" title="Bookmarks"></a>Bookmarks</h2><ul><li>让侧边栏出来个书签按钮,功能和名字一样,就是可以在某个地方<strong>做一个可以起名字的书签</strong></li><li>相对比有相似的插件<em>TODO Highlight</em>和<em>Todo Tree</em>,这两个是令写了 TODO 的地方高亮/被标记,由于标记不能起名字,所以个人更喜欢可标识性的 Bookmarks.</li></ul></li><li><h2 id="Code-Spelling-Checker"><a href="#Code-Spelling-Checker" class="headerlink" title="Code Spelling Checker"></a>Code Spelling Checker</h2><ul><li>这个插件就很有意思了,它可以<strong>检查文件中单词的拼写错误</strong>,并可以<strong>提出修改方案</strong>,写代码,写 md,甚至写 txt 等等都可以用到</li></ul></li><li><h2 id="Code-Time"><a href="#Code-Time" class="headerlink" title="Code Time"></a>Code Time</h2><ul><li>这个插件可以<strong>记录对文件操作的时间</strong>(只是打开文件没有动的情况下不会计时),对个人而言可以统计学习码字时间,可以登录谷歌或 Github 进行同步</li></ul></li><li><h2 id="Comment-Translate"><a href="#Comment-Translate" class="headerlink" title="Comment Translate"></a>Comment Translate</h2><ul><li>个人最喜欢的综合性较强的<strong>翻译插件</strong>,支持划词翻译,在注释上悬浮翻译,段落翻译….速度和质量很优秀</li></ul></li><li><h2 id="Remote-SSH"><a href="#Remote-SSH" class="headerlink" title="Remote - SSH"></a>Remote - SSH</h2><ul><li>作用主要是<strong>ssh 远程连接</strong>,可以让 VScode 管理远程机上的文件/代码…</li></ul></li><li><h2 id="Bracket-Select"><a href="#Bracket-Select" class="headerlink" title="Bracket Select"></a>Bracket Select</h2><ul><li><p>快速选择<code>括起来的内容</code></p></li><li><p>包括单引号,双引号,小括号,中括号,大括号…</p></li></ul></li><li><h2 id="CodeSnap"><a href="#CodeSnap" class="headerlink" title="CodeSnap"></a>CodeSnap</h2><ul><li>代码截图</li></ul></li><li><h2 id="file-size"><a href="#file-size" class="headerlink" title="file-size"></a>file-size</h2><ul><li>显示文件大小</li></ul></li><li><h2 id="Image-Preview"><a href="#Image-Preview" class="headerlink" title="Image Preview"></a>Image Preview</h2><ul><li>可以预览图片</li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="美化推荐"><a href="#美化推荐" class="headerlink" title="美化推荐"></a>美化推荐</h1><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><ul><li><h2 id="Weidows-Design-theme"><a href="#Weidows-Design-theme" class="headerlink" title="Weidows Design theme"></a>Weidows Design theme</h2><ul><li>当然是我自己做的最好看了!</li></ul></li><li><h2 id="Shades-of-Purple"><a href="#Shades-of-Purple" class="headerlink" title="Shades of Purple"></a>Shades of Purple</h2><ul><li>看起来紫气东来的一个主题</li></ul></li><li><h2 id="Tinacious-Design"><a href="#Tinacious-Design" class="headerlink" title="Tinacious Design"></a>Tinacious Design</h2><ul><li>个人最喜欢的主题,只要是 RGB+Cyberpunk 风格吸引我</li></ul></li><li><h2 id="Dracula"><a href="#Dracula" class="headerlink" title="Dracula"></a>Dracula</h2><ul><li>代码配色太好看了!</li></ul></li></ul><hr><h2 id="窗口透明"><a href="#窗口透明" class="headerlink" title="窗口透明"></a>窗口透明</h2><ul><li><h2 id="Glasslt-VSC"><a href="#Glasslt-VSC" class="headerlink" title="Glasslt-VSC"></a>Glasslt-VSC</h2><ul><li>让 VScode 窗口半透明化(无毛玻璃效果,但是这个不影响性能)</li></ul></li><li><h2 id="Vibrancy"><a href="#Vibrancy" class="headerlink" title="Vibrancy"></a>Vibrancy</h2><ul><li>令<strong>VScode 毛玻璃型透明</strong>,可选择透明度和非透明区域(注意这个插件比较影响性能)</li></ul></li></ul><hr><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><h2 id="Power-Mode"><a href="#Power-Mode" class="headerlink" title="Power Mode"></a>Power Mode</h2><ul><li>在码字时敲入文字后光标产生动画,很好看(但是会有点卡顿现象)</li></ul></li><li><h2 id="Chinese-Simplified-Language-Pack-for-Visual-Studio-Code"><a href="#Chinese-Simplified-Language-Pack-for-Visual-Studio-Code" class="headerlink" title="Chinese (Simplified) Language Pack for Visual Studio Code"></a>Chinese (Simplified) Language Pack for Visual Studio Code</h2><ul><li>这个不解释,中国人看<strong>中国字</strong>顺眼就对了</li></ul></li><li><h2 id="background"><a href="#background" class="headerlink" title="background"></a>background</h2><ul><li>可以让主窗口出来个偷看的小东方(默认情况下,可以自行修改),主要是<strong>养眼使用</strong>.</li></ul></li><li><h2 id="Material-Icon-Theme"><a href="#Material-Icon-Theme" class="headerlink" title="Material Icon Theme"></a>Material Icon Theme</h2><ul><li><p>侧边栏的资源管理器中的<strong>文件</strong>们长出了<strong>头像</strong>,更加好认了呢…</p></li><li><p>另外插件商店搜索 icon 也可以找到其他样式的图标包,看个人喜好了..</p></li></ul></li><li><h2 id="Rainbow-Fart"><a href="#Rainbow-Fart" class="headerlink" title="Rainbow Fart"></a>Rainbow Fart</h2><ul><li>不能算是美化吧..但只能放这了…打开浏览器一个辅助性页面,授权后在你码字触发某些关键字时会播放 “鼓励” 型话语,具体可以参考我的另一个项目</li></ul></li><li><h2 id="koroFileHeader"><a href="#koroFileHeader" class="headerlink" title="koroFileHeader"></a>koroFileHeader</h2><ul><li>在 new 文件时在文件头部加上作者,新建和更改日期,文件目录等信息(也可手动添加)<br>另一个有趣功能是可以一键添加字符画!没啥用但挺有意思的…</li></ul></li><li><h2 id="Live2D"><a href="#Live2D" class="headerlink" title="Live2D"></a>Live2D</h2><ul><li>在 VScode 里面添加一个 Live2D 看板娘</li></ul></li><li><h2 id="Rainbow-String"><a href="#Rainbow-String" class="headerlink" title="Rainbow String"></a>Rainbow String</h2><ul><li>使””选中的字符串变成彩虹色,可以通过修改配置来使目标语言生效(比较影响性能)</li></ul></li><li><h2 id="Error-Lens"><a href="#Error-Lens" class="headerlink" title="Error Lens"></a>Error Lens</h2><ul><li>使代码错误/警告在那一行尾部显示出来</li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="码字推荐"><a href="#码字推荐" class="headerlink" title="码字推荐"></a>码字推荐</h1><h2 id="代码补全"><a href="#代码补全" class="headerlink" title="代码补全"></a>代码补全</h2><ul><li><h2 id="Visual-Studio-IntelliCode"><a href="#Visual-Studio-IntelliCode" class="headerlink" title="Visual Studio IntelliCode"></a>Visual Studio IntelliCode</h2><ul><li><p>VS 原配夫人,但是个人感觉,补全效果</p></li><li><p>TabNine &gt; Kite &gt; Visual Studio IntelliCode</p></li></ul></li><li><h2 id="TabNine"><a href="#TabNine" class="headerlink" title="TabNine"></a>TabNine</h2><ul><li><p><strong>代码补全</strong>的插件,不同的是它可以借助参考上下文,项目中的相似语句进行推荐补全(比语言自带的更强大,不冲突,这个是整句型补全,不嫌弃略卡的话实际很好用)</p></li><li><p>是个”小巧”的(实际上打开 VScode 时占用内存 1G+,具体看项目大小了)</p></li><li><p>可以补全纯文本</p></li></ul></li><li><h2 id="Kite"><a href="#Kite" class="headerlink" title="Kite"></a>Kite</h2><ul><li><p>很出名的代码补全程序,需要安装外部程序(当然如果没安装的话,这个插件也会给你装上)</p></li><li><p>补全效果很出色,但是个人用起来感觉并不如 TabNine 舒服~</p></li></ul></li></ul><hr><h2 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h2><ul><li><h2 id="Mover"><a href="#Mover" class="headerlink" title="Mover"></a>Mover</h2><ul><li>不会用 Vim,用这个也不错</li></ul></li><li><h2 id="Bracket-Pair-Colorizer-2"><a href="#Bracket-Pair-Colorizer-2" class="headerlink" title="Bracket Pair Colorizer 2"></a>Bracket Pair Colorizer 2</h2><ul><li><p>只要码字时用到大中小括号,我就推荐搞上它,它可以让不同对括号标记<strong>不同颜色</strong>来区分开,而且两配对的括号会<strong>标出缩进线</strong></p></li><li><p>放心,这个版本 2 比 1 好</p></li></ul></li><li><h2 id="Code-Runner"><a href="#Code-Runner" class="headerlink" title="Code Runner"></a>Code Runner</h2><ul><li>在界面右上角出现三角形按钮,它允许在编译调试环境已经搭配好的情况下<strong>使 VScode 产生 IDE 的* 作用</strong></li></ul></li><li><h2 id="Markdown-All-in-One"><a href="#Markdown-All-in-One" class="headerlink" title="Markdown All in One"></a>Markdown All in One</h2><ul><li>功能在名字中体现了,可以在 VScode 中<strong>打开/写/预览.md 文件</strong>,VScode 版 typora</li></ul></li><li><h2 id="Background-Phi-Colors"><a href="#Background-Phi-Colors" class="headerlink" title="Background Phi Colors"></a>Background Phi Colors</h2><ul><li><p>在缩进区域以及匹配选择产生不同颜色的”色块”,在缩进不标准时也会变色提醒,<strong>很实用!</strong></p></li><li><p>如果你用过<code>indent-rainbow</code>,那么我推荐的这个这个插件大概率可以更满足你!</p></li></ul></li><li><h2 id="Better-Comments"><a href="#Better-Comments" class="headerlink" title="Better Comments"></a>Better Comments</h2><ul><li>添加注释时在每行注释第一个字符写”!?*“等字符会该行让注释变色,有一定增强阅读效果</li></ul></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png" alt="分割线"></p><h1 id="文章推荐"><a href="#文章推荐" class="headerlink" title="文章推荐"></a>文章推荐</h1><ul><li><p>有点老了,但是内容相当好.</p><blockquote><p><a href="https://blog.fundebug.com/2018/11/20/10-must-have-vs-code-extensions-for-javascript-developers/">10 种 JavaScript 开发者必备的 VS Code 插件</a></p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VScode </tag>
            
            <tag> 推荐 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
